# This file is automatically generated and should not be modified directly. If
# you want to update this file, run `code_generation.py`.

# ruff: noqa: D101, D102, PGH003
# type: ignore

from typing import Final

from open_targets.data.metadata.model import OpenTargetsDatasetFieldType


class Dataset:
    id: Final[str]


class DatasetField:
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type["Dataset"]]
    path: Final[list[type["DatasetField"]]]


class AOTFClickhouse(Dataset):
    id: Final[str]
    f_row_id: Final[type["AOTFClickhouseRowId"]]
    f_disease_id: Final[type["AOTFClickhouseDiseaseId"]]
    f_target_id: Final[type["AOTFClickhouseTargetId"]]
    f_datasource_id: Final[type["AOTFClickhouseDatasourceId"]]
    f_datatype_id: Final[type["AOTFClickhouseDatatypeId"]]
    f_row_score: Final[type["AOTFClickhouseRowScore"]]
    f_disease_data: Final[type["AOTFClickhouseDiseaseData"]]
    f_target_data: Final[type["AOTFClickhouseTargetData"]]


class AOTFClickhouseRowId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AOTFClickhouseDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AOTFClickhouseTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AOTFClickhouseDatasourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AOTFClickhouseDatatypeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AOTFClickhouseRowScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AOTFClickhouseDiseaseData(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AOTFClickhouseTargetData(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactions(Dataset):
    id: Final[str]
    f_reaction_reactionmeddrapt: Final[type["AdverseDrugReactionsReactionReactionmeddrapt"]]
    f_uniq_report_ids_by_reaction: Final[type["AdverseDrugReactionsUniqReportIdsByReaction"]]
    f_uniq_report_ids_by_drug: Final[type["AdverseDrugReactionsUniqReportIdsByDrug"]]
    f_a: Final[type["AdverseDrugReactionsA"]]
    f_chembl_id: Final[type["AdverseDrugReactionsChemblId"]]
    f_c: Final[type["AdverseDrugReactionsC"]]
    f_b: Final[type["AdverseDrugReactionsB"]]
    f_d: Final[type["AdverseDrugReactionsD"]]
    f_aterm: Final[type["AdverseDrugReactionsAterm"]]
    f_cterm: Final[type["AdverseDrugReactionsCterm"]]
    f_acterm: Final[type["AdverseDrugReactionsActerm"]]
    f_llr: Final[type["AdverseDrugReactionsLlr"]]
    f_meddra_code: Final[type["AdverseDrugReactionsMeddraCode"]]


class AdverseDrugReactionsReactionReactionmeddrapt(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsUniqReportIdsByReaction(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsUniqReportIdsByDrug(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsChemblId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsC(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsD(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsAterm(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsCterm(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsActerm(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsLlr(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseDrugReactionsMeddraCode(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactions(Dataset):
    id: Final[str]
    f_reaction_reactionmeddrapt: Final[type["AdverseTargetReactionsReactionReactionmeddrapt"]]
    f_uniq_report_ids_by_reaction: Final[type["AdverseTargetReactionsUniqReportIdsByReaction"]]
    f_uniq_report_ids_by_target: Final[type["AdverseTargetReactionsUniqReportIdsByTarget"]]
    f_a: Final[type["AdverseTargetReactionsA"]]
    f_target_id: Final[type["AdverseTargetReactionsTargetId"]]
    f_c: Final[type["AdverseTargetReactionsC"]]
    f_b: Final[type["AdverseTargetReactionsB"]]
    f_d: Final[type["AdverseTargetReactionsD"]]
    f_aterm: Final[type["AdverseTargetReactionsAterm"]]
    f_cterm: Final[type["AdverseTargetReactionsCterm"]]
    f_acterm: Final[type["AdverseTargetReactionsActerm"]]
    f_llr: Final[type["AdverseTargetReactionsLlr"]]
    f_meddra_code: Final[type["AdverseTargetReactionsMeddraCode"]]


class AdverseTargetReactionsReactionReactionmeddrapt(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsUniqReportIdsByReaction(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsUniqReportIdsByTarget(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsC(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsD(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsAterm(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsCterm(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsActerm(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsLlr(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AdverseTargetReactionsMeddraCode(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceDirect(Dataset):
    id: Final[str]
    f_datatype_id: Final[type["AssociationByDatasourceDirectDatatypeId"]]
    f_datasource_id: Final[type["AssociationByDatasourceDirectDatasourceId"]]
    f_disease_id: Final[type["AssociationByDatasourceDirectDiseaseId"]]
    f_target_id: Final[type["AssociationByDatasourceDirectTargetId"]]
    f_score: Final[type["AssociationByDatasourceDirectScore"]]
    f_evidence_count: Final[type["AssociationByDatasourceDirectEvidenceCount"]]


class AssociationByDatasourceDirectDatatypeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceDirectDatasourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceDirectDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceDirectTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceDirectScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceDirectEvidenceCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceIndirect(Dataset):
    id: Final[str]
    f_datatype_id: Final[type["AssociationByDatasourceIndirectDatatypeId"]]
    f_datasource_id: Final[type["AssociationByDatasourceIndirectDatasourceId"]]
    f_disease_id: Final[type["AssociationByDatasourceIndirectDiseaseId"]]
    f_target_id: Final[type["AssociationByDatasourceIndirectTargetId"]]
    f_score: Final[type["AssociationByDatasourceIndirectScore"]]
    f_evidence_count: Final[type["AssociationByDatasourceIndirectEvidenceCount"]]


class AssociationByDatasourceIndirectDatatypeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceIndirectDatasourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceIndirectDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceIndirectTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceIndirectScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatasourceIndirectEvidenceCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeDirect(Dataset):
    id: Final[str]
    f_disease_id: Final[type["AssociationByDatatypeDirectDiseaseId"]]
    f_target_id: Final[type["AssociationByDatatypeDirectTargetId"]]
    f_datatype_id: Final[type["AssociationByDatatypeDirectDatatypeId"]]
    f_score: Final[type["AssociationByDatatypeDirectScore"]]
    f_evidence_count: Final[type["AssociationByDatatypeDirectEvidenceCount"]]


class AssociationByDatatypeDirectDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeDirectTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeDirectDatatypeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeDirectScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeDirectEvidenceCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeIndirect(Dataset):
    id: Final[str]
    f_disease_id: Final[type["AssociationByDatatypeIndirectDiseaseId"]]
    f_target_id: Final[type["AssociationByDatatypeIndirectTargetId"]]
    f_datatype_id: Final[type["AssociationByDatatypeIndirectDatatypeId"]]
    f_score: Final[type["AssociationByDatatypeIndirectScore"]]
    f_evidence_count: Final[type["AssociationByDatatypeIndirectEvidenceCount"]]


class AssociationByDatatypeIndirectDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeIndirectTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeIndirectDatatypeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeIndirectScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByDatatypeIndirectEvidenceCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallDirect(Dataset):
    id: Final[str]
    f_disease_id: Final[type["AssociationByOverallDirectDiseaseId"]]
    f_target_id: Final[type["AssociationByOverallDirectTargetId"]]
    f_score: Final[type["AssociationByOverallDirectScore"]]
    f_evidence_count: Final[type["AssociationByOverallDirectEvidenceCount"]]


class AssociationByOverallDirectDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallDirectTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallDirectScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallDirectEvidenceCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallIndirect(Dataset):
    id: Final[str]
    f_disease_id: Final[type["AssociationByOverallIndirectDiseaseId"]]
    f_target_id: Final[type["AssociationByOverallIndirectTargetId"]]
    f_score: Final[type["AssociationByOverallIndirectScore"]]
    f_evidence_count: Final[type["AssociationByOverallIndirectEvidenceCount"]]


class AssociationByOverallIndirectDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallIndirectTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallIndirectScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class AssociationByOverallIndirectEvidenceCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpression(Dataset):
    id: Final[str]
    f_id: Final[type["BaselineExpressionId"]]
    f_tissues: Final[type["BaselineExpressionTissues"]]


class BaselineExpressionId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissues(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_efo_code: Final[type["BaselineExpressionTissuesEfoCode"]]
    f_label: Final[type["BaselineExpressionTissuesLabel"]]
    f_organs: Final[type["BaselineExpressionTissuesOrgans"]]
    f_anatomical_systems: Final[type["BaselineExpressionTissuesAnatomicalSystems"]]
    f_rna: Final[type["BaselineExpressionTissuesRna"]]
    f_protein: Final[type["BaselineExpressionTissuesProtein"]]


class BaselineExpressionTissuesEfoCode(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesOrgans(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesAnatomicalSystems(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesRna(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_value: Final[type["BaselineExpressionTissuesRnaValue"]]
    f_zscore: Final[type["BaselineExpressionTissuesRnaZscore"]]
    f_level: Final[type["BaselineExpressionTissuesRnaLevel"]]
    f_unit: Final[type["BaselineExpressionTissuesRnaUnit"]]


class BaselineExpressionTissuesRnaValue(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesRnaZscore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesRnaLevel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesRnaUnit(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesProtein(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_reliability: Final[type["BaselineExpressionTissuesProteinReliability"]]
    f_level: Final[type["BaselineExpressionTissuesProteinLevel"]]
    f_cell_type: Final[type["BaselineExpressionTissuesProteinCellType"]]


class BaselineExpressionTissuesProteinReliability(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesProteinLevel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesProteinCellType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_name: Final[type["BaselineExpressionTissuesProteinCellTypeName"]]
    f_reliability: Final[type["BaselineExpressionTissuesProteinCellTypeReliability"]]
    f_level: Final[type["BaselineExpressionTissuesProteinCellTypeLevel"]]


class BaselineExpressionTissuesProteinCellTypeName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesProteinCellTypeReliability(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class BaselineExpressionTissuesProteinCellTypeLevel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotype(Dataset):
    id: Final[str]
    f_disease: Final[type["DiseaseToPhenotypeDisease"]]
    f_phenotype: Final[type["DiseaseToPhenotypePhenotype"]]
    f_evidence: Final[type["DiseaseToPhenotypeEvidence"]]


class DiseaseToPhenotypeDisease(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypePhenotype(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidence(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_aspect: Final[type["DiseaseToPhenotypeEvidenceAspect"]]
    f_bio_curation: Final[type["DiseaseToPhenotypeEvidenceBioCuration"]]
    f_disease_from_source_id: Final[type["DiseaseToPhenotypeEvidenceDiseaseFromSourceId"]]
    f_disease_from_source: Final[type["DiseaseToPhenotypeEvidenceDiseaseFromSource"]]
    f_disease_name: Final[type["DiseaseToPhenotypeEvidenceDiseaseName"]]
    f_evidence_type: Final[type["DiseaseToPhenotypeEvidenceEvidenceType"]]
    f_frequency: Final[type["DiseaseToPhenotypeEvidenceFrequency"]]
    f_modifiers: Final[type["DiseaseToPhenotypeEvidenceModifiers"]]
    f_onset: Final[type["DiseaseToPhenotypeEvidenceOnset"]]
    f_qualifier: Final[type["DiseaseToPhenotypeEvidenceQualifier"]]
    f_qualifier_not: Final[type["DiseaseToPhenotypeEvidenceQualifierNot"]]
    f_references: Final[type["DiseaseToPhenotypeEvidenceReferences"]]
    f_sex: Final[type["DiseaseToPhenotypeEvidenceSex"]]
    f_resource: Final[type["DiseaseToPhenotypeEvidenceResource"]]


class DiseaseToPhenotypeEvidenceAspect(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceBioCuration(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceDiseaseFromSourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceDiseaseFromSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceDiseaseName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceEvidenceType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceFrequency(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceModifiers(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceOnset(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceQualifier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceQualifierNot(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceReferences(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceSex(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseaseToPhenotypeEvidenceResource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Diseases(Dataset):
    id: Final[str]
    f_id: Final[type["DiseasesId"]]
    f_code: Final[type["DiseasesCode"]]
    f_db_x_refs: Final[type["DiseasesDbXRefs"]]
    f_description: Final[type["DiseasesDescription"]]
    f_name: Final[type["DiseasesName"]]
    f_direct_location_ids: Final[type["DiseasesDirectLocationIds"]]
    f_obsolete_terms: Final[type["DiseasesObsoleteTerms"]]
    f_parents: Final[type["DiseasesParents"]]
    f_sko: Final[type["DiseasesSko"]]
    f_synonyms: Final[type["DiseasesSynonyms"]]
    f_ancestors: Final[type["DiseasesAncestors"]]
    f_descendants: Final[type["DiseasesDescendants"]]
    f_children: Final[type["DiseasesChildren"]]
    f_therapeutic_areas: Final[type["DiseasesTherapeuticAreas"]]
    f_indirect_location_ids: Final[type["DiseasesIndirectLocationIds"]]
    f_ontology: Final[type["DiseasesOntology"]]


class DiseasesId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesCode(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesDbXRefs(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesDirectLocationIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesObsoleteTerms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesParents(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesSko(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesSynonyms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_has_broad_synonym: Final[type["DiseasesSynonymsHasBroadSynonym"]]
    f_has_exact_synonym: Final[type["DiseasesSynonymsHasExactSynonym"]]
    f_has_narrow_synonym: Final[type["DiseasesSynonymsHasNarrowSynonym"]]
    f_has_related_synonym: Final[type["DiseasesSynonymsHasRelatedSynonym"]]


class DiseasesSynonymsHasBroadSynonym(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesSynonymsHasExactSynonym(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesSynonymsHasNarrowSynonym(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesSynonymsHasRelatedSynonym(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesAncestors(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesDescendants(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesChildren(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesTherapeuticAreas(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesIndirectLocationIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesOntology(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_is_therapeutic_area: Final[type["DiseasesOntologyIsTherapeuticArea"]]
    f_leaf: Final[type["DiseasesOntologyLeaf"]]
    f_sources: Final[type["DiseasesOntologySources"]]


class DiseasesOntologyIsTherapeuticArea(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesOntologyLeaf(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesOntologySources(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_url: Final[type["DiseasesOntologySourcesUrl"]]
    f_name: Final[type["DiseasesOntologySourcesName"]]


class DiseasesOntologySourcesUrl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DiseasesOntologySourcesName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarnings(Dataset):
    id: Final[str]
    f_toxicity_class: Final[type["DrugWarningsToxicityClass"]]
    f_chembl_ids: Final[type["DrugWarningsChemblIds"]]
    f_country: Final[type["DrugWarningsCountry"]]
    f_description: Final[type["DrugWarningsDescription"]]
    f_id: Final[type["DrugWarningsId"]]
    f_references: Final[type["DrugWarningsReferences"]]
    f_warning_type: Final[type["DrugWarningsWarningType"]]
    f_year: Final[type["DrugWarningsYear"]]
    f_meddra_soc_code: Final[type["DrugWarningsMeddraSocCode"]]


class DrugWarningsToxicityClass(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsChemblIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsCountry(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsReferences(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_ref_id: Final[type["DrugWarningsReferencesRefId"]]
    f_ref_type: Final[type["DrugWarningsReferencesRefType"]]
    f_ref_url: Final[type["DrugWarningsReferencesRefUrl"]]


class DrugWarningsReferencesRefId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsReferencesRefType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsReferencesRefUrl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsWarningType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsYear(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class DrugWarningsMeddraSocCode(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchAssociations(Dataset):
    id: Final[str]
    f_target_id: Final[type["EbisearchAssociationsTargetId"]]
    f_disease_id: Final[type["EbisearchAssociationsDiseaseId"]]
    f_approved_symbol: Final[type["EbisearchAssociationsApprovedSymbol"]]
    f_name: Final[type["EbisearchAssociationsName"]]
    f_score: Final[type["EbisearchAssociationsScore"]]


class EbisearchAssociationsTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchAssociationsDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchAssociationsApprovedSymbol(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchAssociationsName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchAssociationsScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchEvidence(Dataset):
    id: Final[str]
    f_target_id: Final[type["EbisearchEvidenceTargetId"]]
    f_disease_id: Final[type["EbisearchEvidenceDiseaseId"]]
    f_approved_symbol: Final[type["EbisearchEvidenceApprovedSymbol"]]
    f_name: Final[type["EbisearchEvidenceName"]]
    f_score: Final[type["EbisearchEvidenceScore"]]


class EbisearchEvidenceTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchEvidenceDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchEvidenceApprovedSymbol(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchEvidenceName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EbisearchEvidenceScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Evidence(Dataset):
    id: Final[str]
    f_datasource_id: Final[type["EvidenceDatasourceId"]]
    f_target_id: Final[type["EvidenceTargetId"]]
    f_allele_origins: Final[type["EvidenceAlleleOrigins"]]
    f_allelic_requirements: Final[type["EvidenceAllelicRequirements"]]
    f_ancestry: Final[type["EvidenceAncestry"]]
    f_ancestry_id: Final[type["EvidenceAncestryId"]]
    f_beta: Final[type["EvidenceBeta"]]
    f_beta_confidence_interval_lower: Final[type["EvidenceBetaConfidenceIntervalLower"]]
    f_beta_confidence_interval_upper: Final[type["EvidenceBetaConfidenceIntervalUpper"]]
    f_biological_model_allelic_composition: Final[type["EvidenceBiologicalModelAllelicComposition"]]
    f_biological_model_genetic_background: Final[type["EvidenceBiologicalModelGeneticBackground"]]
    f_biological_model_id: Final[type["EvidenceBiologicalModelId"]]
    f_biomarker_name: Final[type["EvidenceBiomarkerName"]]
    f_biomarkers: Final[type["EvidenceBiomarkers"]]
    f_biosamples_from_source: Final[type["EvidenceBiosamplesFromSource"]]
    f_clinical_phase: Final[type["EvidenceClinicalPhase"]]
    f_clinical_significances: Final[type["EvidenceClinicalSignificances"]]
    f_clinical_status: Final[type["EvidenceClinicalStatus"]]
    f_cohort_description: Final[type["EvidenceCohortDescription"]]
    f_cohort_id: Final[type["EvidenceCohortId"]]
    f_cohort_phenotypes: Final[type["EvidenceCohortPhenotypes"]]
    f_cohort_short_name: Final[type["EvidenceCohortShortName"]]
    f_confidence: Final[type["EvidenceConfidence"]]
    f_contrast: Final[type["EvidenceContrast"]]
    f_datatype_id: Final[type["EvidenceDatatypeId"]]
    f_disease_cell_lines: Final[type["EvidenceDiseaseCellLines"]]
    f_disease_from_source: Final[type["EvidenceDiseaseFromSource"]]
    f_disease_from_source_id: Final[type["EvidenceDiseaseFromSourceId"]]
    f_disease_from_source_mapped_id: Final[type["EvidenceDiseaseFromSourceMappedId"]]
    f_disease_model_associated_human_phenotypes: Final[type["EvidenceDiseaseModelAssociatedHumanPhenotypes"]]
    f_disease_model_associated_model_phenotypes: Final[type["EvidenceDiseaseModelAssociatedModelPhenotypes"]]
    f_drug_from_source: Final[type["EvidenceDrugFromSource"]]
    f_drug_id: Final[type["EvidenceDrugId"]]
    f_drug_response: Final[type["EvidenceDrugResponse"]]
    f_literature: Final[type["EvidenceLiterature"]]
    f_log_2_fold_change_percentile_rank: Final[type["EvidenceLog2FoldChangePercentileRank"]]
    f_log_2_fold_change_value: Final[type["EvidenceLog2FoldChangeValue"]]
    f_mutated_samples: Final[type["EvidenceMutatedSamples"]]
    f_odds_ratio: Final[type["EvidenceOddsRatio"]]
    f_odds_ratio_confidence_interval_lower: Final[type["EvidenceOddsRatioConfidenceIntervalLower"]]
    f_odds_ratio_confidence_interval_upper: Final[type["EvidenceOddsRatioConfidenceIntervalUpper"]]
    f_p_value_exponent: Final[type["EvidencePValueExponent"]]
    f_p_value_mantissa: Final[type["EvidencePValueMantissa"]]
    f_pathways: Final[type["EvidencePathways"]]
    f_pmc_ids: Final[type["EvidencePmcIds"]]
    f_project_id: Final[type["EvidenceProjectId"]]
    f_publication_first_author: Final[type["EvidencePublicationFirstAuthor"]]
    f_publication_year: Final[type["EvidencePublicationYear"]]
    f_reaction_id: Final[type["EvidenceReactionId"]]
    f_reaction_name: Final[type["EvidenceReactionName"]]
    f_resource_score: Final[type["EvidenceResourceScore"]]
    f_sex: Final[type["EvidenceSex"]]
    f_significant_driver_methods: Final[type["EvidenceSignificantDriverMethods"]]
    f_statistical_method: Final[type["EvidenceStatisticalMethod"]]
    f_statistical_method_overview: Final[type["EvidenceStatisticalMethodOverview"]]
    f_study_cases: Final[type["EvidenceStudyCases"]]
    f_study_cases_with_qualifying_variants: Final[type["EvidenceStudyCasesWithQualifyingVariants"]]
    f_study_id: Final[type["EvidenceStudyId"]]
    f_study_overview: Final[type["EvidenceStudyOverview"]]
    f_study_sample_size: Final[type["EvidenceStudySampleSize"]]
    f_study_start_date: Final[type["EvidenceStudyStartDate"]]
    f_study_stop_reason: Final[type["EvidenceStudyStopReason"]]
    f_study_stop_reason_categories: Final[type["EvidenceStudyStopReasonCategories"]]
    f_target_from_source: Final[type["EvidenceTargetFromSource"]]
    f_target_from_source_id: Final[type["EvidenceTargetFromSourceId"]]
    f_target_in_model: Final[type["EvidenceTargetInModel"]]
    f_target_in_model_ensembl_id: Final[type["EvidenceTargetInModelEnsemblId"]]
    f_target_in_model_mgi_id: Final[type["EvidenceTargetInModelMgiId"]]
    f_target_modulation: Final[type["EvidenceTargetModulation"]]
    f_text_mining_sentences: Final[type["EvidenceTextMiningSentences"]]
    f_urls: Final[type["EvidenceUrls"]]
    f_variant_aminoacid_descriptions: Final[type["EvidenceVariantAminoacidDescriptions"]]
    f_variant_functional_consequence_id: Final[type["EvidenceVariantFunctionalConsequenceId"]]
    f_variant_hgvs_id: Final[type["EvidenceVariantHgvsId"]]
    f_variant_id: Final[type["EvidenceVariantId"]]
    f_variant_rs_id: Final[type["EvidenceVariantRsId"]]
    f_source_id: Final[type["EvidenceSourceId"]]
    f_disease_id: Final[type["EvidenceDiseaseId"]]
    f_id: Final[type["EvidenceId"]]
    f_score: Final[type["EvidenceScore"]]


class EvidenceDatasourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceAlleleOrigins(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceAllelicRequirements(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceAncestry(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceAncestryId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBeta(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBetaConfidenceIntervalLower(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBetaConfidenceIntervalUpper(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiologicalModelAllelicComposition(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiologicalModelGeneticBackground(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiologicalModelId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiomarkerName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiomarkers(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_gene_expression: Final[type["EvidenceBiomarkersGeneExpression"]]
    f_variant: Final[type["EvidenceBiomarkersVariant"]]


class EvidenceBiomarkersGeneExpression(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["EvidenceBiomarkersGeneExpressionId"]]
    f_name: Final[type["EvidenceBiomarkersGeneExpressionName"]]


class EvidenceBiomarkersGeneExpressionId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiomarkersGeneExpressionName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiomarkersVariant(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_functional_consequence_id: Final[type["EvidenceBiomarkersVariantFunctionalConsequenceId"]]
    f_id: Final[type["EvidenceBiomarkersVariantId"]]
    f_name: Final[type["EvidenceBiomarkersVariantName"]]


class EvidenceBiomarkersVariantFunctionalConsequenceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiomarkersVariantId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiomarkersVariantName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceBiosamplesFromSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceClinicalPhase(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceClinicalSignificances(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceClinicalStatus(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceCohortDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceCohortId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceCohortPhenotypes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceCohortShortName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceConfidence(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceContrast(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDatatypeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseCellLines(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["EvidenceDiseaseCellLinesId"]]
    f_name: Final[type["EvidenceDiseaseCellLinesName"]]
    f_tissue: Final[type["EvidenceDiseaseCellLinesTissue"]]
    f_tissue_id: Final[type["EvidenceDiseaseCellLinesTissueId"]]


class EvidenceDiseaseCellLinesId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseCellLinesName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseCellLinesTissue(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseCellLinesTissueId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseFromSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseFromSourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseFromSourceMappedId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseModelAssociatedHumanPhenotypes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["EvidenceDiseaseModelAssociatedHumanPhenotypesId"]]
    f_label: Final[type["EvidenceDiseaseModelAssociatedHumanPhenotypesLabel"]]


class EvidenceDiseaseModelAssociatedHumanPhenotypesId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseModelAssociatedHumanPhenotypesLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseModelAssociatedModelPhenotypes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["EvidenceDiseaseModelAssociatedModelPhenotypesId"]]
    f_label: Final[type["EvidenceDiseaseModelAssociatedModelPhenotypesLabel"]]


class EvidenceDiseaseModelAssociatedModelPhenotypesId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseModelAssociatedModelPhenotypesLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDrugFromSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDrugId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDrugResponse(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceLiterature(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceLog2FoldChangePercentileRank(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceLog2FoldChangeValue(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceMutatedSamples(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_functional_consequence_id: Final[type["EvidenceMutatedSamplesFunctionalConsequenceId"]]
    f_number_mutated_samples: Final[type["EvidenceMutatedSamplesNumberMutatedSamples"]]
    f_number_samples_tested: Final[type["EvidenceMutatedSamplesNumberSamplesTested"]]
    f_number_samples_with_mutation_type: Final[type["EvidenceMutatedSamplesNumberSamplesWithMutationType"]]


class EvidenceMutatedSamplesFunctionalConsequenceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceMutatedSamplesNumberMutatedSamples(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceMutatedSamplesNumberSamplesTested(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceMutatedSamplesNumberSamplesWithMutationType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceOddsRatio(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceOddsRatioConfidenceIntervalLower(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceOddsRatioConfidenceIntervalUpper(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidencePValueExponent(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidencePValueMantissa(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidencePathways(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["EvidencePathwaysId"]]
    f_name: Final[type["EvidencePathwaysName"]]


class EvidencePathwaysId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidencePathwaysName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidencePmcIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceProjectId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidencePublicationFirstAuthor(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidencePublicationYear(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceReactionId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceReactionName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceResourceScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceSex(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceSignificantDriverMethods(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStatisticalMethod(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStatisticalMethodOverview(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudyCases(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudyCasesWithQualifyingVariants(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudyId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudyOverview(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudySampleSize(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudyStartDate(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudyStopReason(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceStudyStopReasonCategories(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTargetFromSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTargetFromSourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTargetInModel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTargetInModelEnsemblId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTargetInModelMgiId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTargetModulation(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTextMiningSentences(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_d_end: Final[type["EvidenceTextMiningSentencesDEnd"]]
    f_d_start: Final[type["EvidenceTextMiningSentencesDStart"]]
    f_section: Final[type["EvidenceTextMiningSentencesSection"]]
    f_t_end: Final[type["EvidenceTextMiningSentencesTEnd"]]
    f_t_start: Final[type["EvidenceTextMiningSentencesTStart"]]
    f_text: Final[type["EvidenceTextMiningSentencesText"]]


class EvidenceTextMiningSentencesDEnd(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTextMiningSentencesDStart(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTextMiningSentencesSection(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTextMiningSentencesTEnd(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTextMiningSentencesTStart(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceTextMiningSentencesText(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceUrls(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_nice_name: Final[type["EvidenceUrlsNiceName"]]
    f_url: Final[type["EvidenceUrlsUrl"]]


class EvidenceUrlsNiceName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceUrlsUrl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceVariantAminoacidDescriptions(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceVariantFunctionalConsequenceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceVariantHgvsId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceVariantId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceVariantRsId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceSourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class EvidenceScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Go(Dataset):
    id: Final[str]
    f_id: Final[type["GoId"]]
    f_name: Final[type["GoName"]]


class GoId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class GoName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Hpo(Dataset):
    id: Final[str]
    f_db_x_refs: Final[type["HpoDbXRefs"]]
    f_description: Final[type["HpoDescription"]]
    f_id: Final[type["HpoId"]]
    f_name: Final[type["HpoName"]]
    f_namespace: Final[type["HpoNamespace"]]
    f_obsolete_terms: Final[type["HpoObsoleteTerms"]]
    f_parents: Final[type["HpoParents"]]


class HpoDbXRefs(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class HpoDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class HpoId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class HpoName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class HpoNamespace(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class HpoObsoleteTerms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class HpoParents(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Indication(Dataset):
    id: Final[str]
    f_id: Final[type["IndicationId"]]
    f_indications: Final[type["IndicationIndications"]]
    f_approved_indications: Final[type["IndicationApprovedIndications"]]
    f_indication_count: Final[type["IndicationIndicationCount"]]


class IndicationId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class IndicationIndications(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_disease: Final[type["IndicationIndicationsDisease"]]
    f_efo_name: Final[type["IndicationIndicationsEfoName"]]
    f_references: Final[type["IndicationIndicationsReferences"]]
    f_max_phase_for_indication: Final[type["IndicationIndicationsMaxPhaseForIndication"]]


class IndicationIndicationsDisease(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class IndicationIndicationsEfoName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class IndicationIndicationsReferences(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_source: Final[type["IndicationIndicationsReferencesSource"]]
    f_ids: Final[type["IndicationIndicationsReferencesIds"]]


class IndicationIndicationsReferencesSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class IndicationIndicationsReferencesIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class IndicationIndicationsMaxPhaseForIndication(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class IndicationApprovedIndications(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class IndicationIndicationCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Interaction(Dataset):
    id: Final[str]
    f_source_database: Final[type["InteractionSourceDatabase"]]
    f_target_a: Final[type["InteractionTargetA"]]
    f_int_a: Final[type["InteractionIntA"]]
    f_int_a_biological_role: Final[type["InteractionIntABiologicalRole"]]
    f_target_b: Final[type["InteractionTargetB"]]
    f_int_b: Final[type["InteractionIntB"]]
    f_int_b_biological_role: Final[type["InteractionIntBBiologicalRole"]]
    f_species_a: Final[type["InteractionSpeciesA"]]
    f_species_b: Final[type["InteractionSpeciesB"]]
    f_count: Final[type["InteractionCount"]]
    f_scoring: Final[type["InteractionScoring"]]


class InteractionSourceDatabase(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionTargetA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionIntA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionIntABiologicalRole(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionTargetB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionIntB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionIntBBiologicalRole(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionSpeciesA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_mnemonic: Final[type["InteractionSpeciesAMnemonic"]]
    f_scientific_name: Final[type["InteractionSpeciesAScientificName"]]
    f_taxon_id: Final[type["InteractionSpeciesATaxonId"]]


class InteractionSpeciesAMnemonic(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionSpeciesAScientificName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionSpeciesATaxonId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionSpeciesB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_mnemonic: Final[type["InteractionSpeciesBMnemonic"]]
    f_scientific_name: Final[type["InteractionSpeciesBScientificName"]]
    f_taxon_id: Final[type["InteractionSpeciesBTaxonId"]]


class InteractionSpeciesBMnemonic(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionSpeciesBScientificName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionSpeciesBTaxonId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionScoring(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidence(Dataset):
    id: Final[str]
    f_interaction_type_mi_identifier: Final[type["InteractionEvidenceInteractionTypeMiIdentifier"]]
    f_target_b: Final[type["InteractionEvidenceTargetB"]]
    f_evidence_score: Final[type["InteractionEvidenceEvidenceScore"]]
    f_participant_detection_method_a: Final[type["InteractionEvidenceParticipantDetectionMethodA"]]
    f_int_b_biological_role: Final[type["InteractionEvidenceIntBBiologicalRole"]]
    f_interaction_resources: Final[type["InteractionEvidenceInteractionResources"]]
    f_interaction_type_short_name: Final[type["InteractionEvidenceInteractionTypeShortName"]]
    f_interaction_detection_method_short_name: Final[type["InteractionEvidenceInteractionDetectionMethodShortName"]]
    f_int_a: Final[type["InteractionEvidenceIntA"]]
    f_int_b_source: Final[type["InteractionEvidenceIntBSource"]]
    f_species_b: Final[type["InteractionEvidenceSpeciesB"]]
    f_interaction_identifier: Final[type["InteractionEvidenceInteractionIdentifier"]]
    f_host_organism_tax_id: Final[type["InteractionEvidenceHostOrganismTaxId"]]
    f_expansion_method_short_name: Final[type["InteractionEvidenceExpansionMethodShortName"]]
    f_species_a: Final[type["InteractionEvidenceSpeciesA"]]
    f_int_a_source: Final[type["InteractionEvidenceIntASource"]]
    f_int_b: Final[type["InteractionEvidenceIntB"]]
    f_pubmed_id: Final[type["InteractionEvidencePubmedId"]]
    f_int_a_biological_role: Final[type["InteractionEvidenceIntABiologicalRole"]]
    f_expansion_method_mi_identifier: Final[type["InteractionEvidenceExpansionMethodMiIdentifier"]]
    f_interaction_score: Final[type["InteractionEvidenceInteractionScore"]]
    f_participant_detection_method_b: Final[type["InteractionEvidenceParticipantDetectionMethodB"]]
    f_host_organism_scientific_name: Final[type["InteractionEvidenceHostOrganismScientificName"]]
    f_target_a: Final[type["InteractionEvidenceTargetA"]]
    f_interaction_detection_method_mi_identifier: Final[
        type["InteractionEvidenceInteractionDetectionMethodMiIdentifier"]
    ]


class InteractionEvidenceInteractionTypeMiIdentifier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceTargetB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceEvidenceScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceParticipantDetectionMethodA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_mi_identifier: Final[type["InteractionEvidenceParticipantDetectionMethodAMiIdentifier"]]
    f_short_name: Final[type["InteractionEvidenceParticipantDetectionMethodAShortName"]]


class InteractionEvidenceParticipantDetectionMethodAMiIdentifier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceParticipantDetectionMethodAShortName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceIntBBiologicalRole(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceInteractionResources(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_database_version: Final[type["InteractionEvidenceInteractionResourcesDatabaseVersion"]]
    f_source_database: Final[type["InteractionEvidenceInteractionResourcesSourceDatabase"]]


class InteractionEvidenceInteractionResourcesDatabaseVersion(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceInteractionResourcesSourceDatabase(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceInteractionTypeShortName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceInteractionDetectionMethodShortName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceIntA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceIntBSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceSpeciesB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_mnemonic: Final[type["InteractionEvidenceSpeciesBMnemonic"]]
    f_scientific_name: Final[type["InteractionEvidenceSpeciesBScientificName"]]
    f_taxon_id: Final[type["InteractionEvidenceSpeciesBTaxonId"]]


class InteractionEvidenceSpeciesBMnemonic(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceSpeciesBScientificName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceSpeciesBTaxonId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceInteractionIdentifier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceHostOrganismTaxId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceExpansionMethodShortName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceSpeciesA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_mnemonic: Final[type["InteractionEvidenceSpeciesAMnemonic"]]
    f_scientific_name: Final[type["InteractionEvidenceSpeciesAScientificName"]]
    f_taxon_id: Final[type["InteractionEvidenceSpeciesATaxonId"]]


class InteractionEvidenceSpeciesAMnemonic(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceSpeciesAScientificName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceSpeciesATaxonId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceIntASource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceIntB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidencePubmedId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceIntABiologicalRole(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceExpansionMethodMiIdentifier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceInteractionScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceParticipantDetectionMethodB(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_mi_identifier: Final[type["InteractionEvidenceParticipantDetectionMethodBMiIdentifier"]]
    f_short_name: Final[type["InteractionEvidenceParticipantDetectionMethodBShortName"]]


class InteractionEvidenceParticipantDetectionMethodBMiIdentifier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceParticipantDetectionMethodBShortName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceHostOrganismScientificName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceTargetA(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class InteractionEvidenceInteractionDetectionMethodMiIdentifier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregated(Dataset):
    id: Final[str]
    f_drug_id: Final[type["KnownDrugsAggregatedDrugId"]]
    f_target_id: Final[type["KnownDrugsAggregatedTargetId"]]
    f_disease_id: Final[type["KnownDrugsAggregatedDiseaseId"]]
    f_phase: Final[type["KnownDrugsAggregatedPhase"]]
    f_status: Final[type["KnownDrugsAggregatedStatus"]]
    f_urls: Final[type["KnownDrugsAggregatedUrls"]]
    f_ancestors: Final[type["KnownDrugsAggregatedAncestors"]]
    f_label: Final[type["KnownDrugsAggregatedLabel"]]
    f_approved_symbol: Final[type["KnownDrugsAggregatedApprovedSymbol"]]
    f_approved_name: Final[type["KnownDrugsAggregatedApprovedName"]]
    f_target_class: Final[type["KnownDrugsAggregatedTargetClass"]]
    f_pref_name: Final[type["KnownDrugsAggregatedPrefName"]]
    f_trade_names: Final[type["KnownDrugsAggregatedTradeNames"]]
    f_synonyms: Final[type["KnownDrugsAggregatedSynonyms"]]
    f_drug_type: Final[type["KnownDrugsAggregatedDrugType"]]
    f_mechanism_of_action: Final[type["KnownDrugsAggregatedMechanismOfAction"]]
    f_target_name: Final[type["KnownDrugsAggregatedTargetName"]]


class KnownDrugsAggregatedDrugId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedPhase(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedStatus(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedUrls(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_nice_name: Final[type["KnownDrugsAggregatedUrlsNiceName"]]
    f_url: Final[type["KnownDrugsAggregatedUrlsUrl"]]


class KnownDrugsAggregatedUrlsNiceName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedUrlsUrl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedAncestors(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedApprovedSymbol(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedApprovedName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedTargetClass(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedPrefName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedTradeNames(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedSynonyms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedDrugType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedMechanismOfAction(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class KnownDrugsAggregatedTargetName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfAction(Dataset):
    id: Final[str]
    f_action_type: Final[type["MechanismOfActionActionType"]]
    f_mechanism_of_action: Final[type["MechanismOfActionMechanismOfAction"]]
    f_chembl_ids: Final[type["MechanismOfActionChemblIds"]]
    f_target_name: Final[type["MechanismOfActionTargetName"]]
    f_target_type: Final[type["MechanismOfActionTargetType"]]
    f_targets: Final[type["MechanismOfActionTargets"]]
    f_references: Final[type["MechanismOfActionReferences"]]


class MechanismOfActionActionType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionMechanismOfAction(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionChemblIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionTargetName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionTargetType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionTargets(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionReferences(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_source: Final[type["MechanismOfActionReferencesSource"]]
    f_ids: Final[type["MechanismOfActionReferencesIds"]]
    f_urls: Final[type["MechanismOfActionReferencesUrls"]]


class MechanismOfActionReferencesSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionReferencesIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MechanismOfActionReferencesUrls(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Molecule(Dataset):
    id: Final[str]
    f_id: Final[type["MoleculeId"]]
    f_canonical_smiles: Final[type["MoleculeCanonicalSmiles"]]
    f_inchi_key: Final[type["MoleculeInchiKey"]]
    f_drug_type: Final[type["MoleculeDrugType"]]
    f_black_box_warning: Final[type["MoleculeBlackBoxWarning"]]
    f_name: Final[type["MoleculeName"]]
    f_year_of_first_approval: Final[type["MoleculeYearOfFirstApproval"]]
    f_maximum_clinical_trial_phase: Final[type["MoleculeMaximumClinicalTrialPhase"]]
    f_parent_id: Final[type["MoleculeParentId"]]
    f_has_been_withdrawn: Final[type["MoleculeHasBeenWithdrawn"]]
    f_is_approved: Final[type["MoleculeIsApproved"]]
    f_withdrawn_notice: Final[type["MoleculeWithdrawnNotice"]]
    f_trade_names: Final[type["MoleculeTradeNames"]]
    f_synonyms: Final[type["MoleculeSynonyms"]]
    f_cross_references: Final[type["MoleculeCrossReferences"]]
    f_child_chembl_ids: Final[type["MoleculeChildChemblIds"]]
    f_linked_diseases: Final[type["MoleculeLinkedDiseases"]]
    f_linked_targets: Final[type["MoleculeLinkedTargets"]]
    f_description: Final[type["MoleculeDescription"]]


class MoleculeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeCanonicalSmiles(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeInchiKey(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeDrugType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeBlackBoxWarning(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeYearOfFirstApproval(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeMaximumClinicalTrialPhase(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeParentId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeHasBeenWithdrawn(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeIsApproved(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeWithdrawnNotice(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_countries: Final[type["MoleculeWithdrawnNoticeCountries"]]
    f_classes: Final[type["MoleculeWithdrawnNoticeClasses"]]
    f_year: Final[type["MoleculeWithdrawnNoticeYear"]]


class MoleculeWithdrawnNoticeCountries(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeWithdrawnNoticeClasses(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeWithdrawnNoticeYear(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeTradeNames(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeSynonyms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeCrossReferences(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeChildChemblIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeLinkedDiseases(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_rows: Final[type["MoleculeLinkedDiseasesRows"]]
    f_count: Final[type["MoleculeLinkedDiseasesCount"]]


class MoleculeLinkedDiseasesRows(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeLinkedDiseasesCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeLinkedTargets(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_rows: Final[type["MoleculeLinkedTargetsRows"]]
    f_count: Final[type["MoleculeLinkedTargetsCount"]]


class MoleculeLinkedTargetsRows(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeLinkedTargetsCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MoleculeDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypes(Dataset):
    id: Final[str]
    f_biological_models: Final[type["MousePhenotypesBiologicalModels"]]
    f_model_phenotype_classes: Final[type["MousePhenotypesModelPhenotypeClasses"]]
    f_model_phenotype_id: Final[type["MousePhenotypesModelPhenotypeId"]]
    f_model_phenotype_label: Final[type["MousePhenotypesModelPhenotypeLabel"]]
    f_target_from_source_id: Final[type["MousePhenotypesTargetFromSourceId"]]
    f_target_in_model: Final[type["MousePhenotypesTargetInModel"]]
    f_target_in_model_ensembl_id: Final[type["MousePhenotypesTargetInModelEnsemblId"]]
    f_target_in_model_mgi_id: Final[type["MousePhenotypesTargetInModelMgiId"]]


class MousePhenotypesBiologicalModels(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_allelic_composition: Final[type["MousePhenotypesBiologicalModelsAllelicComposition"]]
    f_genetic_background: Final[type["MousePhenotypesBiologicalModelsGeneticBackground"]]
    f_id: Final[type["MousePhenotypesBiologicalModelsId"]]
    f_literature: Final[type["MousePhenotypesBiologicalModelsLiterature"]]


class MousePhenotypesBiologicalModelsAllelicComposition(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesBiologicalModelsGeneticBackground(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesBiologicalModelsId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesBiologicalModelsLiterature(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesModelPhenotypeClasses(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["MousePhenotypesModelPhenotypeClassesId"]]
    f_label: Final[type["MousePhenotypesModelPhenotypeClassesLabel"]]


class MousePhenotypesModelPhenotypeClassesId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesModelPhenotypeClassesLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesModelPhenotypeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesModelPhenotypeLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesTargetFromSourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesTargetInModel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesTargetInModelEnsemblId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class MousePhenotypesTargetInModelMgiId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Reactome(Dataset):
    id: Final[str]
    f_id: Final[type["ReactomeId"]]
    f_label: Final[type["ReactomeLabel"]]
    f_ancestors: Final[type["ReactomeAncestors"]]
    f_descendants: Final[type["ReactomeDescendants"]]
    f_children: Final[type["ReactomeChildren"]]
    f_parents: Final[type["ReactomeParents"]]
    f_path: Final[type["ReactomePath"]]


class ReactomeId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class ReactomeLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class ReactomeAncestors(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class ReactomeDescendants(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class ReactomeChildren(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class ReactomeParents(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class ReactomePath(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDisease(Dataset):
    id: Final[str]
    f_id: Final[type["SearchDiseaseId"]]
    f_name: Final[type["SearchDiseaseName"]]
    f_description: Final[type["SearchDiseaseDescription"]]
    f_entity: Final[type["SearchDiseaseEntity"]]
    f_category: Final[type["SearchDiseaseCategory"]]
    f_keywords: Final[type["SearchDiseaseKeywords"]]
    f_prefixes: Final[type["SearchDiseasePrefixes"]]
    f_ngrams: Final[type["SearchDiseaseNgrams"]]
    f_terms: Final[type["SearchDiseaseTerms"]]
    f_terms_25: Final[type["SearchDiseaseTerms25"]]
    f_terms_5: Final[type["SearchDiseaseTerms5"]]
    f_multiplier: Final[type["SearchDiseaseMultiplier"]]


class SearchDiseaseId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseEntity(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseCategory(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseKeywords(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseasePrefixes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseNgrams(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseTerms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseTerms25(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseTerms5(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDiseaseMultiplier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrug(Dataset):
    id: Final[str]
    f_id: Final[type["SearchDrugId"]]
    f_name: Final[type["SearchDrugName"]]
    f_description: Final[type["SearchDrugDescription"]]
    f_entity: Final[type["SearchDrugEntity"]]
    f_category: Final[type["SearchDrugCategory"]]
    f_keywords: Final[type["SearchDrugKeywords"]]
    f_prefixes: Final[type["SearchDrugPrefixes"]]
    f_ngrams: Final[type["SearchDrugNgrams"]]
    f_terms: Final[type["SearchDrugTerms"]]
    f_terms_25: Final[type["SearchDrugTerms25"]]
    f_terms_5: Final[type["SearchDrugTerms5"]]
    f_multiplier: Final[type["SearchDrugMultiplier"]]


class SearchDrugId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugEntity(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugCategory(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugKeywords(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugPrefixes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugNgrams(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugTerms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugTerms25(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugTerms5(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchDrugMultiplier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTarget(Dataset):
    id: Final[str]
    f_id: Final[type["SearchTargetId"]]
    f_name: Final[type["SearchTargetName"]]
    f_description: Final[type["SearchTargetDescription"]]
    f_entity: Final[type["SearchTargetEntity"]]
    f_category: Final[type["SearchTargetCategory"]]
    f_keywords: Final[type["SearchTargetKeywords"]]
    f_prefixes: Final[type["SearchTargetPrefixes"]]
    f_ngrams: Final[type["SearchTargetNgrams"]]
    f_terms: Final[type["SearchTargetTerms"]]
    f_terms_25: Final[type["SearchTargetTerms25"]]
    f_terms_5: Final[type["SearchTargetTerms5"]]
    f_multiplier: Final[type["SearchTargetMultiplier"]]


class SearchTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetEntity(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetCategory(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetKeywords(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetPrefixes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetNgrams(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetTerms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetTerms25(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetTerms5(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SearchTargetMultiplier(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseDrugReactions(Dataset):
    id: Final[str]
    f_chembl_id: Final[type["SignificantAdverseDrugReactionsChemblId"]]
    f_event: Final[type["SignificantAdverseDrugReactionsEvent"]]
    f_count: Final[type["SignificantAdverseDrugReactionsCount"]]
    f_llr: Final[type["SignificantAdverseDrugReactionsLlr"]]
    f_critval: Final[type["SignificantAdverseDrugReactionsCritval"]]
    f_meddra_code: Final[type["SignificantAdverseDrugReactionsMeddraCode"]]


class SignificantAdverseDrugReactionsChemblId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseDrugReactionsEvent(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseDrugReactionsCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseDrugReactionsLlr(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseDrugReactionsCritval(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseDrugReactionsMeddraCode(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseTargetReactions(Dataset):
    id: Final[str]
    f_target_id: Final[type["SignificantAdverseTargetReactionsTargetId"]]
    f_event: Final[type["SignificantAdverseTargetReactionsEvent"]]
    f_count: Final[type["SignificantAdverseTargetReactionsCount"]]
    f_llr: Final[type["SignificantAdverseTargetReactionsLlr"]]
    f_critval: Final[type["SignificantAdverseTargetReactionsCritval"]]
    f_meddra_code: Final[type["SignificantAdverseTargetReactionsMeddraCode"]]


class SignificantAdverseTargetReactionsTargetId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseTargetReactionsEvent(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseTargetReactionsCount(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseTargetReactionsLlr(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseTargetReactionsCritval(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class SignificantAdverseTargetReactionsMeddraCode(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class Targets(Dataset):
    id: Final[str]
    f_id: Final[type["TargetsId"]]
    f_approved_symbol: Final[type["TargetsApprovedSymbol"]]
    f_biotype: Final[type["TargetsBiotype"]]
    f_transcript_ids: Final[type["TargetsTranscriptIds"]]
    f_canonical_transcript: Final[type["TargetsCanonicalTranscript"]]
    f_canonical_exons: Final[type["TargetsCanonicalExons"]]
    f_genomic_location: Final[type["TargetsGenomicLocation"]]
    f_alternative_genes: Final[type["TargetsAlternativeGenes"]]
    f_approved_name: Final[type["TargetsApprovedName"]]
    f_go: Final[type["TargetsGo"]]
    f_hallmarks: Final[type["TargetsHallmarks"]]
    f_synonyms: Final[type["TargetsSynonyms"]]
    f_symbol_synonyms: Final[type["TargetsSymbolSynonyms"]]
    f_name_synonyms: Final[type["TargetsNameSynonyms"]]
    f_function_descriptions: Final[type["TargetsFunctionDescriptions"]]
    f_subcellular_locations: Final[type["TargetsSubcellularLocations"]]
    f_target_class: Final[type["TargetsTargetClass"]]
    f_obsolete_symbols: Final[type["TargetsObsoleteSymbols"]]
    f_obsolete_names: Final[type["TargetsObsoleteNames"]]
    f_constraint: Final[type["TargetsConstraint"]]
    f_tep: Final[type["TargetsTep"]]
    f_protein_ids: Final[type["TargetsProteinIds"]]
    f_db_xrefs: Final[type["TargetsDbXrefs"]]
    f_chemical_probes: Final[type["TargetsChemicalProbes"]]
    f_homologues: Final[type["TargetsHomologues"]]
    f_tractability: Final[type["TargetsTractability"]]
    f_safety_liabilities: Final[type["TargetsSafetyLiabilities"]]
    f_pathways: Final[type["TargetsPathways"]]


class TargetsId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsApprovedSymbol(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsBiotype(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTranscriptIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsCanonicalTranscript(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["TargetsCanonicalTranscriptId"]]
    f_chromosome: Final[type["TargetsCanonicalTranscriptChromosome"]]
    f_start: Final[type["TargetsCanonicalTranscriptStart"]]
    f_end: Final[type["TargetsCanonicalTranscriptEnd"]]
    f_strand: Final[type["TargetsCanonicalTranscriptStrand"]]


class TargetsCanonicalTranscriptId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsCanonicalTranscriptChromosome(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsCanonicalTranscriptStart(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsCanonicalTranscriptEnd(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsCanonicalTranscriptStrand(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsCanonicalExons(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGenomicLocation(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_chromosome: Final[type["TargetsGenomicLocationChromosome"]]
    f_start: Final[type["TargetsGenomicLocationStart"]]
    f_end: Final[type["TargetsGenomicLocationEnd"]]
    f_strand: Final[type["TargetsGenomicLocationStrand"]]


class TargetsGenomicLocationChromosome(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGenomicLocationStart(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGenomicLocationEnd(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGenomicLocationStrand(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsAlternativeGenes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsApprovedName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGo(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["TargetsGoId"]]
    f_source: Final[type["TargetsGoSource"]]
    f_evidence: Final[type["TargetsGoEvidence"]]
    f_aspect: Final[type["TargetsGoAspect"]]
    f_gene_product: Final[type["TargetsGoGeneProduct"]]
    f_eco_id: Final[type["TargetsGoEcoId"]]


class TargetsGoId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGoSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGoEvidence(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGoAspect(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGoGeneProduct(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsGoEcoId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHallmarks(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_attributes: Final[type["TargetsHallmarksAttributes"]]
    f_cancer_hallmarks: Final[type["TargetsHallmarksCancerHallmarks"]]


class TargetsHallmarksAttributes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_pmid: Final[type["TargetsHallmarksAttributesPmid"]]
    f_description: Final[type["TargetsHallmarksAttributesDescription"]]
    f_attribute_name: Final[type["TargetsHallmarksAttributesAttributeName"]]


class TargetsHallmarksAttributesPmid(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHallmarksAttributesDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHallmarksAttributesAttributeName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHallmarksCancerHallmarks(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_pmid: Final[type["TargetsHallmarksCancerHallmarksPmid"]]
    f_description: Final[type["TargetsHallmarksCancerHallmarksDescription"]]
    f_impact: Final[type["TargetsHallmarksCancerHallmarksImpact"]]
    f_label: Final[type["TargetsHallmarksCancerHallmarksLabel"]]


class TargetsHallmarksCancerHallmarksPmid(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHallmarksCancerHallmarksDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHallmarksCancerHallmarksImpact(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHallmarksCancerHallmarksLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSynonyms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_label: Final[type["TargetsSynonymsLabel"]]
    f_source: Final[type["TargetsSynonymsSource"]]


class TargetsSynonymsLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSynonymsSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSymbolSynonyms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_label: Final[type["TargetsSymbolSynonymsLabel"]]
    f_source: Final[type["TargetsSymbolSynonymsSource"]]


class TargetsSymbolSynonymsLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSymbolSynonymsSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsNameSynonyms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_label: Final[type["TargetsNameSynonymsLabel"]]
    f_source: Final[type["TargetsNameSynonymsSource"]]


class TargetsNameSynonymsLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsNameSynonymsSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsFunctionDescriptions(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSubcellularLocations(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_location: Final[type["TargetsSubcellularLocationsLocation"]]
    f_source: Final[type["TargetsSubcellularLocationsSource"]]
    f_term_sl: Final[type["TargetsSubcellularLocationsTermSl"]]
    f_label_sl: Final[type["TargetsSubcellularLocationsLabelSl"]]


class TargetsSubcellularLocationsLocation(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSubcellularLocationsSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSubcellularLocationsTermSl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSubcellularLocationsLabelSl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTargetClass(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["TargetsTargetClassId"]]
    f_label: Final[type["TargetsTargetClassLabel"]]
    f_level: Final[type["TargetsTargetClassLevel"]]


class TargetsTargetClassId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTargetClassLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTargetClassLevel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsObsoleteSymbols(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_label: Final[type["TargetsObsoleteSymbolsLabel"]]
    f_source: Final[type["TargetsObsoleteSymbolsSource"]]


class TargetsObsoleteSymbolsLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsObsoleteSymbolsSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsObsoleteNames(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_label: Final[type["TargetsObsoleteNamesLabel"]]
    f_source: Final[type["TargetsObsoleteNamesSource"]]


class TargetsObsoleteNamesLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsObsoleteNamesSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraint(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_constraint_type: Final[type["TargetsConstraintConstraintType"]]
    f_score: Final[type["TargetsConstraintScore"]]
    f_exp: Final[type["TargetsConstraintExp"]]
    f_obs: Final[type["TargetsConstraintObs"]]
    f_oe: Final[type["TargetsConstraintOe"]]
    f_oe_lower: Final[type["TargetsConstraintOeLower"]]
    f_oe_upper: Final[type["TargetsConstraintOeUpper"]]
    f_upper_rank: Final[type["TargetsConstraintUpperRank"]]
    f_upper_bin: Final[type["TargetsConstraintUpperBin"]]
    f_upper_bin_6: Final[type["TargetsConstraintUpperBin6"]]


class TargetsConstraintConstraintType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintExp(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintObs(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintOe(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintOeLower(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintOeUpper(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintUpperRank(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintUpperBin(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsConstraintUpperBin6(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTep(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_target_from_source_id: Final[type["TargetsTepTargetFromSourceId"]]
    f_description: Final[type["TargetsTepDescription"]]
    f_therapeutic_area: Final[type["TargetsTepTherapeuticArea"]]
    f_url: Final[type["TargetsTepUrl"]]


class TargetsTepTargetFromSourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTepDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTepTherapeuticArea(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTepUrl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsProteinIds(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["TargetsProteinIdsId"]]
    f_source: Final[type["TargetsProteinIdsSource"]]


class TargetsProteinIdsId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsProteinIdsSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsDbXrefs(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_id: Final[type["TargetsDbXrefsId"]]
    f_source: Final[type["TargetsDbXrefsSource"]]


class TargetsDbXrefsId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsDbXrefsSource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbes(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_control: Final[type["TargetsChemicalProbesControl"]]
    f_drug_id: Final[type["TargetsChemicalProbesDrugId"]]
    f_id: Final[type["TargetsChemicalProbesId"]]
    f_is_high_quality: Final[type["TargetsChemicalProbesIsHighQuality"]]
    f_mechanism_of_action: Final[type["TargetsChemicalProbesMechanismOfAction"]]
    f_origin: Final[type["TargetsChemicalProbesOrigin"]]
    f_probe_miner_score: Final[type["TargetsChemicalProbesProbeMinerScore"]]
    f_probes_drugs_score: Final[type["TargetsChemicalProbesProbesDrugsScore"]]
    f_score_in_cells: Final[type["TargetsChemicalProbesScoreInCells"]]
    f_score_in_organisms: Final[type["TargetsChemicalProbesScoreInOrganisms"]]
    f_target_from_source_id: Final[type["TargetsChemicalProbesTargetFromSourceId"]]
    f_urls: Final[type["TargetsChemicalProbesUrls"]]


class TargetsChemicalProbesControl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesDrugId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesIsHighQuality(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesMechanismOfAction(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesOrigin(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesProbeMinerScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesProbesDrugsScore(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesScoreInCells(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesScoreInOrganisms(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesTargetFromSourceId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesUrls(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_nice_name: Final[type["TargetsChemicalProbesUrlsNiceName"]]
    f_url: Final[type["TargetsChemicalProbesUrlsUrl"]]


class TargetsChemicalProbesUrlsNiceName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsChemicalProbesUrlsUrl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologues(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_species_id: Final[type["TargetsHomologuesSpeciesId"]]
    f_species_name: Final[type["TargetsHomologuesSpeciesName"]]
    f_homology_type: Final[type["TargetsHomologuesHomologyType"]]
    f_target_gene_id: Final[type["TargetsHomologuesTargetGeneId"]]
    f_is_high_confidence: Final[type["TargetsHomologuesIsHighConfidence"]]
    f_target_gene_symbol: Final[type["TargetsHomologuesTargetGeneSymbol"]]
    f_query_percentage_identity: Final[type["TargetsHomologuesQueryPercentageIdentity"]]
    f_target_percentage_identity: Final[type["TargetsHomologuesTargetPercentageIdentity"]]
    f_priority: Final[type["TargetsHomologuesPriority"]]


class TargetsHomologuesSpeciesId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesSpeciesName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesHomologyType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesTargetGeneId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesIsHighConfidence(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesTargetGeneSymbol(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesQueryPercentageIdentity(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesTargetPercentageIdentity(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsHomologuesPriority(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTractability(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_modality: Final[type["TargetsTractabilityModality"]]
    f_id: Final[type["TargetsTractabilityId"]]
    f_value: Final[type["TargetsTractabilityValue"]]


class TargetsTractabilityModality(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTractabilityId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsTractabilityValue(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilities(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_event: Final[type["TargetsSafetyLiabilitiesEvent"]]
    f_event_id: Final[type["TargetsSafetyLiabilitiesEventId"]]
    f_effects: Final[type["TargetsSafetyLiabilitiesEffects"]]
    f_biosample: Final[type["TargetsSafetyLiabilitiesBiosample"]]
    f_datasource: Final[type["TargetsSafetyLiabilitiesDatasource"]]
    f_literature: Final[type["TargetsSafetyLiabilitiesLiterature"]]
    f_url: Final[type["TargetsSafetyLiabilitiesUrl"]]
    f_study: Final[type["TargetsSafetyLiabilitiesStudy"]]


class TargetsSafetyLiabilitiesEvent(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesEventId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesEffects(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_direction: Final[type["TargetsSafetyLiabilitiesEffectsDirection"]]
    f_dosing: Final[type["TargetsSafetyLiabilitiesEffectsDosing"]]


class TargetsSafetyLiabilitiesEffectsDirection(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesEffectsDosing(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesBiosample(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_tissue_label: Final[type["TargetsSafetyLiabilitiesBiosampleTissueLabel"]]
    f_tissue_id: Final[type["TargetsSafetyLiabilitiesBiosampleTissueId"]]
    f_cell_label: Final[type["TargetsSafetyLiabilitiesBiosampleCellLabel"]]
    f_cell_format: Final[type["TargetsSafetyLiabilitiesBiosampleCellFormat"]]
    f_cell_id: Final[type["TargetsSafetyLiabilitiesBiosampleCellId"]]


class TargetsSafetyLiabilitiesBiosampleTissueLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesBiosampleTissueId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesBiosampleCellLabel(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesBiosampleCellFormat(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesBiosampleCellId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesDatasource(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesLiterature(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesUrl(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesStudy(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_name: Final[type["TargetsSafetyLiabilitiesStudyName"]]
    f_description: Final[type["TargetsSafetyLiabilitiesStudyDescription"]]
    f_type: Final[type["TargetsSafetyLiabilitiesStudyType"]]


class TargetsSafetyLiabilitiesStudyName(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesStudyDescription(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsSafetyLiabilitiesStudyType(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsPathways(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]
    f_pathway_id: Final[type["TargetsPathwaysPathwayId"]]
    f_pathway: Final[type["TargetsPathwaysPathway"]]
    f_top_level_term: Final[type["TargetsPathwaysTopLevelTerm"]]


class TargetsPathwaysPathwayId(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsPathwaysPathway(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


class TargetsPathwaysTopLevelTerm(DatasetField):
    name: Final[str]
    data_type: Final[OpenTargetsDatasetFieldType]
    dataset: Final[type[Dataset]]
    path: Final[list[type[DatasetField]]]


AOTFClickhouseRowId.name = "row_id"
AOTFClickhouseRowId.data_type = OpenTargetsDatasetFieldType.STRING
AOTFClickhouseRowId.dataset = AOTFClickhouse
AOTFClickhouseRowId.path = [AOTFClickhouseRowId]

AOTFClickhouseDiseaseId.name = "disease_id"
AOTFClickhouseDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
AOTFClickhouseDiseaseId.dataset = AOTFClickhouse
AOTFClickhouseDiseaseId.path = [AOTFClickhouseDiseaseId]

AOTFClickhouseTargetId.name = "target_id"
AOTFClickhouseTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AOTFClickhouseTargetId.dataset = AOTFClickhouse
AOTFClickhouseTargetId.path = [AOTFClickhouseTargetId]

AOTFClickhouseDatasourceId.name = "datasource_id"
AOTFClickhouseDatasourceId.data_type = OpenTargetsDatasetFieldType.STRING
AOTFClickhouseDatasourceId.dataset = AOTFClickhouse
AOTFClickhouseDatasourceId.path = [AOTFClickhouseDatasourceId]

AOTFClickhouseDatatypeId.name = "datatype_id"
AOTFClickhouseDatatypeId.data_type = OpenTargetsDatasetFieldType.STRING
AOTFClickhouseDatatypeId.dataset = AOTFClickhouse
AOTFClickhouseDatatypeId.path = [AOTFClickhouseDatatypeId]

AOTFClickhouseRowScore.name = "row_score"
AOTFClickhouseRowScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
AOTFClickhouseRowScore.dataset = AOTFClickhouse
AOTFClickhouseRowScore.path = [AOTFClickhouseRowScore]

AOTFClickhouseDiseaseData.name = "disease_data"
AOTFClickhouseDiseaseData.data_type = OpenTargetsDatasetFieldType.STRING
AOTFClickhouseDiseaseData.dataset = AOTFClickhouse
AOTFClickhouseDiseaseData.path = [AOTFClickhouseDiseaseData]

AOTFClickhouseTargetData.name = "target_data"
AOTFClickhouseTargetData.data_type = OpenTargetsDatasetFieldType.STRING
AOTFClickhouseTargetData.dataset = AOTFClickhouse
AOTFClickhouseTargetData.path = [AOTFClickhouseTargetData]

AOTFClickhouse.id = "AOTFClickhouse"
AOTFClickhouse.f_row_id = AOTFClickhouseRowId
AOTFClickhouse.f_disease_id = AOTFClickhouseDiseaseId
AOTFClickhouse.f_target_id = AOTFClickhouseTargetId
AOTFClickhouse.f_datasource_id = AOTFClickhouseDatasourceId
AOTFClickhouse.f_datatype_id = AOTFClickhouseDatatypeId
AOTFClickhouse.f_row_score = AOTFClickhouseRowScore
AOTFClickhouse.f_disease_data = AOTFClickhouseDiseaseData
AOTFClickhouse.f_target_data = AOTFClickhouseTargetData
AdverseDrugReactionsReactionReactionmeddrapt.name = "reaction_reactionmeddrapt"
AdverseDrugReactionsReactionReactionmeddrapt.data_type = OpenTargetsDatasetFieldType.STRING
AdverseDrugReactionsReactionReactionmeddrapt.dataset = AdverseDrugReactions
AdverseDrugReactionsReactionReactionmeddrapt.path = [AdverseDrugReactionsReactionReactionmeddrapt]

AdverseDrugReactionsUniqReportIdsByReaction.name = "uniq_report_ids_by_reaction"
AdverseDrugReactionsUniqReportIdsByReaction.data_type = OpenTargetsDatasetFieldType.LONG
AdverseDrugReactionsUniqReportIdsByReaction.dataset = AdverseDrugReactions
AdverseDrugReactionsUniqReportIdsByReaction.path = [AdverseDrugReactionsUniqReportIdsByReaction]

AdverseDrugReactionsUniqReportIdsByDrug.name = "uniq_report_ids_by_drug"
AdverseDrugReactionsUniqReportIdsByDrug.data_type = OpenTargetsDatasetFieldType.LONG
AdverseDrugReactionsUniqReportIdsByDrug.dataset = AdverseDrugReactions
AdverseDrugReactionsUniqReportIdsByDrug.path = [AdverseDrugReactionsUniqReportIdsByDrug]

AdverseDrugReactionsA.name = "A"
AdverseDrugReactionsA.data_type = OpenTargetsDatasetFieldType.LONG
AdverseDrugReactionsA.dataset = AdverseDrugReactions
AdverseDrugReactionsA.path = [AdverseDrugReactionsA]

AdverseDrugReactionsChemblId.name = "chembl_id"
AdverseDrugReactionsChemblId.data_type = OpenTargetsDatasetFieldType.STRING
AdverseDrugReactionsChemblId.dataset = AdverseDrugReactions
AdverseDrugReactionsChemblId.path = [AdverseDrugReactionsChemblId]

AdverseDrugReactionsC.name = "C"
AdverseDrugReactionsC.data_type = OpenTargetsDatasetFieldType.LONG
AdverseDrugReactionsC.dataset = AdverseDrugReactions
AdverseDrugReactionsC.path = [AdverseDrugReactionsC]

AdverseDrugReactionsB.name = "B"
AdverseDrugReactionsB.data_type = OpenTargetsDatasetFieldType.LONG
AdverseDrugReactionsB.dataset = AdverseDrugReactions
AdverseDrugReactionsB.path = [AdverseDrugReactionsB]

AdverseDrugReactionsD.name = "D"
AdverseDrugReactionsD.data_type = OpenTargetsDatasetFieldType.LONG
AdverseDrugReactionsD.dataset = AdverseDrugReactions
AdverseDrugReactionsD.path = [AdverseDrugReactionsD]

AdverseDrugReactionsAterm.name = "aterm"
AdverseDrugReactionsAterm.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseDrugReactionsAterm.dataset = AdverseDrugReactions
AdverseDrugReactionsAterm.path = [AdverseDrugReactionsAterm]

AdverseDrugReactionsCterm.name = "cterm"
AdverseDrugReactionsCterm.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseDrugReactionsCterm.dataset = AdverseDrugReactions
AdverseDrugReactionsCterm.path = [AdverseDrugReactionsCterm]

AdverseDrugReactionsActerm.name = "acterm"
AdverseDrugReactionsActerm.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseDrugReactionsActerm.dataset = AdverseDrugReactions
AdverseDrugReactionsActerm.path = [AdverseDrugReactionsActerm]

AdverseDrugReactionsLlr.name = "llr"
AdverseDrugReactionsLlr.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseDrugReactionsLlr.dataset = AdverseDrugReactions
AdverseDrugReactionsLlr.path = [AdverseDrugReactionsLlr]

AdverseDrugReactionsMeddraCode.name = "meddraCode"
AdverseDrugReactionsMeddraCode.data_type = OpenTargetsDatasetFieldType.STRING
AdverseDrugReactionsMeddraCode.dataset = AdverseDrugReactions
AdverseDrugReactionsMeddraCode.path = [AdverseDrugReactionsMeddraCode]

AdverseDrugReactions.id = "adverseDrugReactions"
AdverseDrugReactions.f_reaction_reactionmeddrapt = AdverseDrugReactionsReactionReactionmeddrapt
AdverseDrugReactions.f_uniq_report_ids_by_reaction = AdverseDrugReactionsUniqReportIdsByReaction
AdverseDrugReactions.f_uniq_report_ids_by_drug = AdverseDrugReactionsUniqReportIdsByDrug
AdverseDrugReactions.f_a = AdverseDrugReactionsA
AdverseDrugReactions.f_chembl_id = AdverseDrugReactionsChemblId
AdverseDrugReactions.f_c = AdverseDrugReactionsC
AdverseDrugReactions.f_b = AdverseDrugReactionsB
AdverseDrugReactions.f_d = AdverseDrugReactionsD
AdverseDrugReactions.f_aterm = AdverseDrugReactionsAterm
AdverseDrugReactions.f_cterm = AdverseDrugReactionsCterm
AdverseDrugReactions.f_acterm = AdverseDrugReactionsActerm
AdverseDrugReactions.f_llr = AdverseDrugReactionsLlr
AdverseDrugReactions.f_meddra_code = AdverseDrugReactionsMeddraCode
AdverseTargetReactionsReactionReactionmeddrapt.name = "reaction_reactionmeddrapt"
AdverseTargetReactionsReactionReactionmeddrapt.data_type = OpenTargetsDatasetFieldType.STRING
AdverseTargetReactionsReactionReactionmeddrapt.dataset = AdverseTargetReactions
AdverseTargetReactionsReactionReactionmeddrapt.path = [AdverseTargetReactionsReactionReactionmeddrapt]

AdverseTargetReactionsUniqReportIdsByReaction.name = "uniq_report_ids_by_reaction"
AdverseTargetReactionsUniqReportIdsByReaction.data_type = OpenTargetsDatasetFieldType.LONG
AdverseTargetReactionsUniqReportIdsByReaction.dataset = AdverseTargetReactions
AdverseTargetReactionsUniqReportIdsByReaction.path = [AdverseTargetReactionsUniqReportIdsByReaction]

AdverseTargetReactionsUniqReportIdsByTarget.name = "uniq_report_ids_by_target"
AdverseTargetReactionsUniqReportIdsByTarget.data_type = OpenTargetsDatasetFieldType.LONG
AdverseTargetReactionsUniqReportIdsByTarget.dataset = AdverseTargetReactions
AdverseTargetReactionsUniqReportIdsByTarget.path = [AdverseTargetReactionsUniqReportIdsByTarget]

AdverseTargetReactionsA.name = "A"
AdverseTargetReactionsA.data_type = OpenTargetsDatasetFieldType.LONG
AdverseTargetReactionsA.dataset = AdverseTargetReactions
AdverseTargetReactionsA.path = [AdverseTargetReactionsA]

AdverseTargetReactionsTargetId.name = "targetId"
AdverseTargetReactionsTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AdverseTargetReactionsTargetId.dataset = AdverseTargetReactions
AdverseTargetReactionsTargetId.path = [AdverseTargetReactionsTargetId]

AdverseTargetReactionsC.name = "C"
AdverseTargetReactionsC.data_type = OpenTargetsDatasetFieldType.LONG
AdverseTargetReactionsC.dataset = AdverseTargetReactions
AdverseTargetReactionsC.path = [AdverseTargetReactionsC]

AdverseTargetReactionsB.name = "B"
AdverseTargetReactionsB.data_type = OpenTargetsDatasetFieldType.LONG
AdverseTargetReactionsB.dataset = AdverseTargetReactions
AdverseTargetReactionsB.path = [AdverseTargetReactionsB]

AdverseTargetReactionsD.name = "D"
AdverseTargetReactionsD.data_type = OpenTargetsDatasetFieldType.LONG
AdverseTargetReactionsD.dataset = AdverseTargetReactions
AdverseTargetReactionsD.path = [AdverseTargetReactionsD]

AdverseTargetReactionsAterm.name = "aterm"
AdverseTargetReactionsAterm.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseTargetReactionsAterm.dataset = AdverseTargetReactions
AdverseTargetReactionsAterm.path = [AdverseTargetReactionsAterm]

AdverseTargetReactionsCterm.name = "cterm"
AdverseTargetReactionsCterm.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseTargetReactionsCterm.dataset = AdverseTargetReactions
AdverseTargetReactionsCterm.path = [AdverseTargetReactionsCterm]

AdverseTargetReactionsActerm.name = "acterm"
AdverseTargetReactionsActerm.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseTargetReactionsActerm.dataset = AdverseTargetReactions
AdverseTargetReactionsActerm.path = [AdverseTargetReactionsActerm]

AdverseTargetReactionsLlr.name = "llr"
AdverseTargetReactionsLlr.data_type = OpenTargetsDatasetFieldType.DOUBLE
AdverseTargetReactionsLlr.dataset = AdverseTargetReactions
AdverseTargetReactionsLlr.path = [AdverseTargetReactionsLlr]

AdverseTargetReactionsMeddraCode.name = "meddraCode"
AdverseTargetReactionsMeddraCode.data_type = OpenTargetsDatasetFieldType.STRING
AdverseTargetReactionsMeddraCode.dataset = AdverseTargetReactions
AdverseTargetReactionsMeddraCode.path = [AdverseTargetReactionsMeddraCode]

AdverseTargetReactions.id = "adverseTargetReactions"
AdverseTargetReactions.f_reaction_reactionmeddrapt = AdverseTargetReactionsReactionReactionmeddrapt
AdverseTargetReactions.f_uniq_report_ids_by_reaction = AdverseTargetReactionsUniqReportIdsByReaction
AdverseTargetReactions.f_uniq_report_ids_by_target = AdverseTargetReactionsUniqReportIdsByTarget
AdverseTargetReactions.f_a = AdverseTargetReactionsA
AdverseTargetReactions.f_target_id = AdverseTargetReactionsTargetId
AdverseTargetReactions.f_c = AdverseTargetReactionsC
AdverseTargetReactions.f_b = AdverseTargetReactionsB
AdverseTargetReactions.f_d = AdverseTargetReactionsD
AdverseTargetReactions.f_aterm = AdverseTargetReactionsAterm
AdverseTargetReactions.f_cterm = AdverseTargetReactionsCterm
AdverseTargetReactions.f_acterm = AdverseTargetReactionsActerm
AdverseTargetReactions.f_llr = AdverseTargetReactionsLlr
AdverseTargetReactions.f_meddra_code = AdverseTargetReactionsMeddraCode
AssociationByDatasourceDirectDatatypeId.name = "datatypeId"
AssociationByDatasourceDirectDatatypeId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceDirectDatatypeId.dataset = AssociationByDatasourceDirect
AssociationByDatasourceDirectDatatypeId.path = [AssociationByDatasourceDirectDatatypeId]

AssociationByDatasourceDirectDatasourceId.name = "datasourceId"
AssociationByDatasourceDirectDatasourceId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceDirectDatasourceId.dataset = AssociationByDatasourceDirect
AssociationByDatasourceDirectDatasourceId.path = [AssociationByDatasourceDirectDatasourceId]

AssociationByDatasourceDirectDiseaseId.name = "diseaseId"
AssociationByDatasourceDirectDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceDirectDiseaseId.dataset = AssociationByDatasourceDirect
AssociationByDatasourceDirectDiseaseId.path = [AssociationByDatasourceDirectDiseaseId]

AssociationByDatasourceDirectTargetId.name = "targetId"
AssociationByDatasourceDirectTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceDirectTargetId.dataset = AssociationByDatasourceDirect
AssociationByDatasourceDirectTargetId.path = [AssociationByDatasourceDirectTargetId]

AssociationByDatasourceDirectScore.name = "score"
AssociationByDatasourceDirectScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
AssociationByDatasourceDirectScore.dataset = AssociationByDatasourceDirect
AssociationByDatasourceDirectScore.path = [AssociationByDatasourceDirectScore]

AssociationByDatasourceDirectEvidenceCount.name = "evidenceCount"
AssociationByDatasourceDirectEvidenceCount.data_type = OpenTargetsDatasetFieldType.LONG
AssociationByDatasourceDirectEvidenceCount.dataset = AssociationByDatasourceDirect
AssociationByDatasourceDirectEvidenceCount.path = [AssociationByDatasourceDirectEvidenceCount]

AssociationByDatasourceDirect.id = "associationByDatasourceDirect"
AssociationByDatasourceDirect.f_datatype_id = AssociationByDatasourceDirectDatatypeId
AssociationByDatasourceDirect.f_datasource_id = AssociationByDatasourceDirectDatasourceId
AssociationByDatasourceDirect.f_disease_id = AssociationByDatasourceDirectDiseaseId
AssociationByDatasourceDirect.f_target_id = AssociationByDatasourceDirectTargetId
AssociationByDatasourceDirect.f_score = AssociationByDatasourceDirectScore
AssociationByDatasourceDirect.f_evidence_count = AssociationByDatasourceDirectEvidenceCount
AssociationByDatasourceIndirectDatatypeId.name = "datatypeId"
AssociationByDatasourceIndirectDatatypeId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceIndirectDatatypeId.dataset = AssociationByDatasourceIndirect
AssociationByDatasourceIndirectDatatypeId.path = [AssociationByDatasourceIndirectDatatypeId]

AssociationByDatasourceIndirectDatasourceId.name = "datasourceId"
AssociationByDatasourceIndirectDatasourceId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceIndirectDatasourceId.dataset = AssociationByDatasourceIndirect
AssociationByDatasourceIndirectDatasourceId.path = [AssociationByDatasourceIndirectDatasourceId]

AssociationByDatasourceIndirectDiseaseId.name = "diseaseId"
AssociationByDatasourceIndirectDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceIndirectDiseaseId.dataset = AssociationByDatasourceIndirect
AssociationByDatasourceIndirectDiseaseId.path = [AssociationByDatasourceIndirectDiseaseId]

AssociationByDatasourceIndirectTargetId.name = "targetId"
AssociationByDatasourceIndirectTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatasourceIndirectTargetId.dataset = AssociationByDatasourceIndirect
AssociationByDatasourceIndirectTargetId.path = [AssociationByDatasourceIndirectTargetId]

AssociationByDatasourceIndirectScore.name = "score"
AssociationByDatasourceIndirectScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
AssociationByDatasourceIndirectScore.dataset = AssociationByDatasourceIndirect
AssociationByDatasourceIndirectScore.path = [AssociationByDatasourceIndirectScore]

AssociationByDatasourceIndirectEvidenceCount.name = "evidenceCount"
AssociationByDatasourceIndirectEvidenceCount.data_type = OpenTargetsDatasetFieldType.LONG
AssociationByDatasourceIndirectEvidenceCount.dataset = AssociationByDatasourceIndirect
AssociationByDatasourceIndirectEvidenceCount.path = [AssociationByDatasourceIndirectEvidenceCount]

AssociationByDatasourceIndirect.id = "associationByDatasourceIndirect"
AssociationByDatasourceIndirect.f_datatype_id = AssociationByDatasourceIndirectDatatypeId
AssociationByDatasourceIndirect.f_datasource_id = AssociationByDatasourceIndirectDatasourceId
AssociationByDatasourceIndirect.f_disease_id = AssociationByDatasourceIndirectDiseaseId
AssociationByDatasourceIndirect.f_target_id = AssociationByDatasourceIndirectTargetId
AssociationByDatasourceIndirect.f_score = AssociationByDatasourceIndirectScore
AssociationByDatasourceIndirect.f_evidence_count = AssociationByDatasourceIndirectEvidenceCount
AssociationByDatatypeDirectDiseaseId.name = "diseaseId"
AssociationByDatatypeDirectDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatatypeDirectDiseaseId.dataset = AssociationByDatatypeDirect
AssociationByDatatypeDirectDiseaseId.path = [AssociationByDatatypeDirectDiseaseId]

AssociationByDatatypeDirectTargetId.name = "targetId"
AssociationByDatatypeDirectTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatatypeDirectTargetId.dataset = AssociationByDatatypeDirect
AssociationByDatatypeDirectTargetId.path = [AssociationByDatatypeDirectTargetId]

AssociationByDatatypeDirectDatatypeId.name = "datatypeId"
AssociationByDatatypeDirectDatatypeId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatatypeDirectDatatypeId.dataset = AssociationByDatatypeDirect
AssociationByDatatypeDirectDatatypeId.path = [AssociationByDatatypeDirectDatatypeId]

AssociationByDatatypeDirectScore.name = "score"
AssociationByDatatypeDirectScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
AssociationByDatatypeDirectScore.dataset = AssociationByDatatypeDirect
AssociationByDatatypeDirectScore.path = [AssociationByDatatypeDirectScore]

AssociationByDatatypeDirectEvidenceCount.name = "evidenceCount"
AssociationByDatatypeDirectEvidenceCount.data_type = OpenTargetsDatasetFieldType.LONG
AssociationByDatatypeDirectEvidenceCount.dataset = AssociationByDatatypeDirect
AssociationByDatatypeDirectEvidenceCount.path = [AssociationByDatatypeDirectEvidenceCount]

AssociationByDatatypeDirect.id = "associationByDatatypeDirect"
AssociationByDatatypeDirect.f_disease_id = AssociationByDatatypeDirectDiseaseId
AssociationByDatatypeDirect.f_target_id = AssociationByDatatypeDirectTargetId
AssociationByDatatypeDirect.f_datatype_id = AssociationByDatatypeDirectDatatypeId
AssociationByDatatypeDirect.f_score = AssociationByDatatypeDirectScore
AssociationByDatatypeDirect.f_evidence_count = AssociationByDatatypeDirectEvidenceCount
AssociationByDatatypeIndirectDiseaseId.name = "diseaseId"
AssociationByDatatypeIndirectDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatatypeIndirectDiseaseId.dataset = AssociationByDatatypeIndirect
AssociationByDatatypeIndirectDiseaseId.path = [AssociationByDatatypeIndirectDiseaseId]

AssociationByDatatypeIndirectTargetId.name = "targetId"
AssociationByDatatypeIndirectTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatatypeIndirectTargetId.dataset = AssociationByDatatypeIndirect
AssociationByDatatypeIndirectTargetId.path = [AssociationByDatatypeIndirectTargetId]

AssociationByDatatypeIndirectDatatypeId.name = "datatypeId"
AssociationByDatatypeIndirectDatatypeId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByDatatypeIndirectDatatypeId.dataset = AssociationByDatatypeIndirect
AssociationByDatatypeIndirectDatatypeId.path = [AssociationByDatatypeIndirectDatatypeId]

AssociationByDatatypeIndirectScore.name = "score"
AssociationByDatatypeIndirectScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
AssociationByDatatypeIndirectScore.dataset = AssociationByDatatypeIndirect
AssociationByDatatypeIndirectScore.path = [AssociationByDatatypeIndirectScore]

AssociationByDatatypeIndirectEvidenceCount.name = "evidenceCount"
AssociationByDatatypeIndirectEvidenceCount.data_type = OpenTargetsDatasetFieldType.LONG
AssociationByDatatypeIndirectEvidenceCount.dataset = AssociationByDatatypeIndirect
AssociationByDatatypeIndirectEvidenceCount.path = [AssociationByDatatypeIndirectEvidenceCount]

AssociationByDatatypeIndirect.id = "associationByDatatypeIndirect"
AssociationByDatatypeIndirect.f_disease_id = AssociationByDatatypeIndirectDiseaseId
AssociationByDatatypeIndirect.f_target_id = AssociationByDatatypeIndirectTargetId
AssociationByDatatypeIndirect.f_datatype_id = AssociationByDatatypeIndirectDatatypeId
AssociationByDatatypeIndirect.f_score = AssociationByDatatypeIndirectScore
AssociationByDatatypeIndirect.f_evidence_count = AssociationByDatatypeIndirectEvidenceCount
AssociationByOverallDirectDiseaseId.name = "diseaseId"
AssociationByOverallDirectDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByOverallDirectDiseaseId.dataset = AssociationByOverallDirect
AssociationByOverallDirectDiseaseId.path = [AssociationByOverallDirectDiseaseId]

AssociationByOverallDirectTargetId.name = "targetId"
AssociationByOverallDirectTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByOverallDirectTargetId.dataset = AssociationByOverallDirect
AssociationByOverallDirectTargetId.path = [AssociationByOverallDirectTargetId]

AssociationByOverallDirectScore.name = "score"
AssociationByOverallDirectScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
AssociationByOverallDirectScore.dataset = AssociationByOverallDirect
AssociationByOverallDirectScore.path = [AssociationByOverallDirectScore]

AssociationByOverallDirectEvidenceCount.name = "evidenceCount"
AssociationByOverallDirectEvidenceCount.data_type = OpenTargetsDatasetFieldType.LONG
AssociationByOverallDirectEvidenceCount.dataset = AssociationByOverallDirect
AssociationByOverallDirectEvidenceCount.path = [AssociationByOverallDirectEvidenceCount]

AssociationByOverallDirect.id = "associationByOverallDirect"
AssociationByOverallDirect.f_disease_id = AssociationByOverallDirectDiseaseId
AssociationByOverallDirect.f_target_id = AssociationByOverallDirectTargetId
AssociationByOverallDirect.f_score = AssociationByOverallDirectScore
AssociationByOverallDirect.f_evidence_count = AssociationByOverallDirectEvidenceCount
AssociationByOverallIndirectDiseaseId.name = "diseaseId"
AssociationByOverallIndirectDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByOverallIndirectDiseaseId.dataset = AssociationByOverallIndirect
AssociationByOverallIndirectDiseaseId.path = [AssociationByOverallIndirectDiseaseId]

AssociationByOverallIndirectTargetId.name = "targetId"
AssociationByOverallIndirectTargetId.data_type = OpenTargetsDatasetFieldType.STRING
AssociationByOverallIndirectTargetId.dataset = AssociationByOverallIndirect
AssociationByOverallIndirectTargetId.path = [AssociationByOverallIndirectTargetId]

AssociationByOverallIndirectScore.name = "score"
AssociationByOverallIndirectScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
AssociationByOverallIndirectScore.dataset = AssociationByOverallIndirect
AssociationByOverallIndirectScore.path = [AssociationByOverallIndirectScore]

AssociationByOverallIndirectEvidenceCount.name = "evidenceCount"
AssociationByOverallIndirectEvidenceCount.data_type = OpenTargetsDatasetFieldType.LONG
AssociationByOverallIndirectEvidenceCount.dataset = AssociationByOverallIndirect
AssociationByOverallIndirectEvidenceCount.path = [AssociationByOverallIndirectEvidenceCount]

AssociationByOverallIndirect.id = "associationByOverallIndirect"
AssociationByOverallIndirect.f_disease_id = AssociationByOverallIndirectDiseaseId
AssociationByOverallIndirect.f_target_id = AssociationByOverallIndirectTargetId
AssociationByOverallIndirect.f_score = AssociationByOverallIndirectScore
AssociationByOverallIndirect.f_evidence_count = AssociationByOverallIndirectEvidenceCount
BaselineExpressionId.name = "id"
BaselineExpressionId.data_type = OpenTargetsDatasetFieldType.STRING
BaselineExpressionId.dataset = BaselineExpression
BaselineExpressionId.path = [BaselineExpressionId]

BaselineExpressionTissuesEfoCode.name = "efo_code"
BaselineExpressionTissuesEfoCode.data_type = OpenTargetsDatasetFieldType.STRING
BaselineExpressionTissuesEfoCode.dataset = BaselineExpression
BaselineExpressionTissuesEfoCode.path = [BaselineExpressionTissues, BaselineExpressionTissuesEfoCode]

BaselineExpressionTissuesLabel.name = "label"
BaselineExpressionTissuesLabel.data_type = OpenTargetsDatasetFieldType.STRING
BaselineExpressionTissuesLabel.dataset = BaselineExpression
BaselineExpressionTissuesLabel.path = [BaselineExpressionTissues, BaselineExpressionTissuesLabel]

BaselineExpressionTissuesOrgans.name = "organs"
BaselineExpressionTissuesOrgans.data_type = OpenTargetsDatasetFieldType.ARRAY
BaselineExpressionTissuesOrgans.dataset = BaselineExpression
BaselineExpressionTissuesOrgans.path = [BaselineExpressionTissues, BaselineExpressionTissuesOrgans]

BaselineExpressionTissuesAnatomicalSystems.name = "anatomical_systems"
BaselineExpressionTissuesAnatomicalSystems.data_type = OpenTargetsDatasetFieldType.ARRAY
BaselineExpressionTissuesAnatomicalSystems.dataset = BaselineExpression
BaselineExpressionTissuesAnatomicalSystems.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesAnatomicalSystems,
]

BaselineExpressionTissuesRnaValue.name = "value"
BaselineExpressionTissuesRnaValue.data_type = OpenTargetsDatasetFieldType.DOUBLE
BaselineExpressionTissuesRnaValue.dataset = BaselineExpression
BaselineExpressionTissuesRnaValue.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesRna,
    BaselineExpressionTissuesRnaValue,
]

BaselineExpressionTissuesRnaZscore.name = "zscore"
BaselineExpressionTissuesRnaZscore.data_type = OpenTargetsDatasetFieldType.INTEGER
BaselineExpressionTissuesRnaZscore.dataset = BaselineExpression
BaselineExpressionTissuesRnaZscore.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesRna,
    BaselineExpressionTissuesRnaZscore,
]

BaselineExpressionTissuesRnaLevel.name = "level"
BaselineExpressionTissuesRnaLevel.data_type = OpenTargetsDatasetFieldType.INTEGER
BaselineExpressionTissuesRnaLevel.dataset = BaselineExpression
BaselineExpressionTissuesRnaLevel.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesRna,
    BaselineExpressionTissuesRnaLevel,
]

BaselineExpressionTissuesRnaUnit.name = "unit"
BaselineExpressionTissuesRnaUnit.data_type = OpenTargetsDatasetFieldType.STRING
BaselineExpressionTissuesRnaUnit.dataset = BaselineExpression
BaselineExpressionTissuesRnaUnit.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesRna,
    BaselineExpressionTissuesRnaUnit,
]

BaselineExpressionTissuesRna.name = "rna"
BaselineExpressionTissuesRna.data_type = OpenTargetsDatasetFieldType.STRUCT
BaselineExpressionTissuesRna.dataset = BaselineExpression
BaselineExpressionTissuesRna.path = [BaselineExpressionTissues, BaselineExpressionTissuesRna]
BaselineExpressionTissuesRna.f_value = BaselineExpressionTissuesRnaValue
BaselineExpressionTissuesRna.f_zscore = BaselineExpressionTissuesRnaZscore
BaselineExpressionTissuesRna.f_level = BaselineExpressionTissuesRnaLevel
BaselineExpressionTissuesRna.f_unit = BaselineExpressionTissuesRnaUnit

BaselineExpressionTissuesProteinReliability.name = "reliability"
BaselineExpressionTissuesProteinReliability.data_type = OpenTargetsDatasetFieldType.BOOLEAN
BaselineExpressionTissuesProteinReliability.dataset = BaselineExpression
BaselineExpressionTissuesProteinReliability.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesProtein,
    BaselineExpressionTissuesProteinReliability,
]

BaselineExpressionTissuesProteinLevel.name = "level"
BaselineExpressionTissuesProteinLevel.data_type = OpenTargetsDatasetFieldType.INTEGER
BaselineExpressionTissuesProteinLevel.dataset = BaselineExpression
BaselineExpressionTissuesProteinLevel.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesProtein,
    BaselineExpressionTissuesProteinLevel,
]

BaselineExpressionTissuesProteinCellTypeName.name = "name"
BaselineExpressionTissuesProteinCellTypeName.data_type = OpenTargetsDatasetFieldType.STRING
BaselineExpressionTissuesProteinCellTypeName.dataset = BaselineExpression
BaselineExpressionTissuesProteinCellTypeName.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesProtein,
    BaselineExpressionTissuesProteinCellType,
    BaselineExpressionTissuesProteinCellTypeName,
]

BaselineExpressionTissuesProteinCellTypeReliability.name = "reliability"
BaselineExpressionTissuesProteinCellTypeReliability.data_type = OpenTargetsDatasetFieldType.BOOLEAN
BaselineExpressionTissuesProteinCellTypeReliability.dataset = BaselineExpression
BaselineExpressionTissuesProteinCellTypeReliability.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesProtein,
    BaselineExpressionTissuesProteinCellType,
    BaselineExpressionTissuesProteinCellTypeReliability,
]

BaselineExpressionTissuesProteinCellTypeLevel.name = "level"
BaselineExpressionTissuesProteinCellTypeLevel.data_type = OpenTargetsDatasetFieldType.INTEGER
BaselineExpressionTissuesProteinCellTypeLevel.dataset = BaselineExpression
BaselineExpressionTissuesProteinCellTypeLevel.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesProtein,
    BaselineExpressionTissuesProteinCellType,
    BaselineExpressionTissuesProteinCellTypeLevel,
]

BaselineExpressionTissuesProteinCellType.name = "cell_type"
BaselineExpressionTissuesProteinCellType.data_type = OpenTargetsDatasetFieldType.ARRAY
BaselineExpressionTissuesProteinCellType.dataset = BaselineExpression
BaselineExpressionTissuesProteinCellType.path = [
    BaselineExpressionTissues,
    BaselineExpressionTissuesProtein,
    BaselineExpressionTissuesProteinCellType,
]
BaselineExpressionTissuesProteinCellType.f_name = BaselineExpressionTissuesProteinCellTypeName
BaselineExpressionTissuesProteinCellType.f_reliability = BaselineExpressionTissuesProteinCellTypeReliability
BaselineExpressionTissuesProteinCellType.f_level = BaselineExpressionTissuesProteinCellTypeLevel

BaselineExpressionTissuesProtein.name = "protein"
BaselineExpressionTissuesProtein.data_type = OpenTargetsDatasetFieldType.STRUCT
BaselineExpressionTissuesProtein.dataset = BaselineExpression
BaselineExpressionTissuesProtein.path = [BaselineExpressionTissues, BaselineExpressionTissuesProtein]
BaselineExpressionTissuesProtein.f_reliability = BaselineExpressionTissuesProteinReliability
BaselineExpressionTissuesProtein.f_level = BaselineExpressionTissuesProteinLevel
BaselineExpressionTissuesProtein.f_cell_type = BaselineExpressionTissuesProteinCellType

BaselineExpressionTissues.name = "tissues"
BaselineExpressionTissues.data_type = OpenTargetsDatasetFieldType.ARRAY
BaselineExpressionTissues.dataset = BaselineExpression
BaselineExpressionTissues.path = [BaselineExpressionTissues]
BaselineExpressionTissues.f_efo_code = BaselineExpressionTissuesEfoCode
BaselineExpressionTissues.f_label = BaselineExpressionTissuesLabel
BaselineExpressionTissues.f_organs = BaselineExpressionTissuesOrgans
BaselineExpressionTissues.f_anatomical_systems = BaselineExpressionTissuesAnatomicalSystems
BaselineExpressionTissues.f_rna = BaselineExpressionTissuesRna
BaselineExpressionTissues.f_protein = BaselineExpressionTissuesProtein

BaselineExpression.id = "baselineExpression"
BaselineExpression.f_id = BaselineExpressionId
BaselineExpression.f_tissues = BaselineExpressionTissues
DiseaseToPhenotypeDisease.name = "disease"
DiseaseToPhenotypeDisease.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeDisease.dataset = DiseaseToPhenotype
DiseaseToPhenotypeDisease.path = [DiseaseToPhenotypeDisease]

DiseaseToPhenotypePhenotype.name = "phenotype"
DiseaseToPhenotypePhenotype.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypePhenotype.dataset = DiseaseToPhenotype
DiseaseToPhenotypePhenotype.path = [DiseaseToPhenotypePhenotype]

DiseaseToPhenotypeEvidenceAspect.name = "aspect"
DiseaseToPhenotypeEvidenceAspect.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceAspect.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceAspect.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceAspect]

DiseaseToPhenotypeEvidenceBioCuration.name = "bioCuration"
DiseaseToPhenotypeEvidenceBioCuration.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceBioCuration.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceBioCuration.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceBioCuration]

DiseaseToPhenotypeEvidenceDiseaseFromSourceId.name = "diseaseFromSourceId"
DiseaseToPhenotypeEvidenceDiseaseFromSourceId.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceDiseaseFromSourceId.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceDiseaseFromSourceId.path = [
    DiseaseToPhenotypeEvidence,
    DiseaseToPhenotypeEvidenceDiseaseFromSourceId,
]

DiseaseToPhenotypeEvidenceDiseaseFromSource.name = "diseaseFromSource"
DiseaseToPhenotypeEvidenceDiseaseFromSource.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceDiseaseFromSource.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceDiseaseFromSource.path = [
    DiseaseToPhenotypeEvidence,
    DiseaseToPhenotypeEvidenceDiseaseFromSource,
]

DiseaseToPhenotypeEvidenceDiseaseName.name = "diseaseName"
DiseaseToPhenotypeEvidenceDiseaseName.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceDiseaseName.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceDiseaseName.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceDiseaseName]

DiseaseToPhenotypeEvidenceEvidenceType.name = "evidenceType"
DiseaseToPhenotypeEvidenceEvidenceType.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceEvidenceType.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceEvidenceType.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceEvidenceType]

DiseaseToPhenotypeEvidenceFrequency.name = "frequency"
DiseaseToPhenotypeEvidenceFrequency.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceFrequency.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceFrequency.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceFrequency]

DiseaseToPhenotypeEvidenceModifiers.name = "modifiers"
DiseaseToPhenotypeEvidenceModifiers.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseaseToPhenotypeEvidenceModifiers.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceModifiers.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceModifiers]

DiseaseToPhenotypeEvidenceOnset.name = "onset"
DiseaseToPhenotypeEvidenceOnset.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseaseToPhenotypeEvidenceOnset.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceOnset.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceOnset]

DiseaseToPhenotypeEvidenceQualifier.name = "qualifier"
DiseaseToPhenotypeEvidenceQualifier.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceQualifier.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceQualifier.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceQualifier]

DiseaseToPhenotypeEvidenceQualifierNot.name = "qualifierNot"
DiseaseToPhenotypeEvidenceQualifierNot.data_type = OpenTargetsDatasetFieldType.BOOLEAN
DiseaseToPhenotypeEvidenceQualifierNot.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceQualifierNot.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceQualifierNot]

DiseaseToPhenotypeEvidenceReferences.name = "references"
DiseaseToPhenotypeEvidenceReferences.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseaseToPhenotypeEvidenceReferences.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceReferences.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceReferences]

DiseaseToPhenotypeEvidenceSex.name = "sex"
DiseaseToPhenotypeEvidenceSex.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceSex.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceSex.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceSex]

DiseaseToPhenotypeEvidenceResource.name = "resource"
DiseaseToPhenotypeEvidenceResource.data_type = OpenTargetsDatasetFieldType.STRING
DiseaseToPhenotypeEvidenceResource.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidenceResource.path = [DiseaseToPhenotypeEvidence, DiseaseToPhenotypeEvidenceResource]

DiseaseToPhenotypeEvidence.name = "evidence"
DiseaseToPhenotypeEvidence.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseaseToPhenotypeEvidence.dataset = DiseaseToPhenotype
DiseaseToPhenotypeEvidence.path = [DiseaseToPhenotypeEvidence]
DiseaseToPhenotypeEvidence.f_aspect = DiseaseToPhenotypeEvidenceAspect
DiseaseToPhenotypeEvidence.f_bio_curation = DiseaseToPhenotypeEvidenceBioCuration
DiseaseToPhenotypeEvidence.f_disease_from_source_id = DiseaseToPhenotypeEvidenceDiseaseFromSourceId
DiseaseToPhenotypeEvidence.f_disease_from_source = DiseaseToPhenotypeEvidenceDiseaseFromSource
DiseaseToPhenotypeEvidence.f_disease_name = DiseaseToPhenotypeEvidenceDiseaseName
DiseaseToPhenotypeEvidence.f_evidence_type = DiseaseToPhenotypeEvidenceEvidenceType
DiseaseToPhenotypeEvidence.f_frequency = DiseaseToPhenotypeEvidenceFrequency
DiseaseToPhenotypeEvidence.f_modifiers = DiseaseToPhenotypeEvidenceModifiers
DiseaseToPhenotypeEvidence.f_onset = DiseaseToPhenotypeEvidenceOnset
DiseaseToPhenotypeEvidence.f_qualifier = DiseaseToPhenotypeEvidenceQualifier
DiseaseToPhenotypeEvidence.f_qualifier_not = DiseaseToPhenotypeEvidenceQualifierNot
DiseaseToPhenotypeEvidence.f_references = DiseaseToPhenotypeEvidenceReferences
DiseaseToPhenotypeEvidence.f_sex = DiseaseToPhenotypeEvidenceSex
DiseaseToPhenotypeEvidence.f_resource = DiseaseToPhenotypeEvidenceResource

DiseaseToPhenotype.id = "diseaseToPhenotype"
DiseaseToPhenotype.f_disease = DiseaseToPhenotypeDisease
DiseaseToPhenotype.f_phenotype = DiseaseToPhenotypePhenotype
DiseaseToPhenotype.f_evidence = DiseaseToPhenotypeEvidence
DiseasesId.name = "id"
DiseasesId.data_type = OpenTargetsDatasetFieldType.STRING
DiseasesId.dataset = Diseases
DiseasesId.path = [DiseasesId]

DiseasesCode.name = "code"
DiseasesCode.data_type = OpenTargetsDatasetFieldType.STRING
DiseasesCode.dataset = Diseases
DiseasesCode.path = [DiseasesCode]

DiseasesDbXRefs.name = "dbXRefs"
DiseasesDbXRefs.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesDbXRefs.dataset = Diseases
DiseasesDbXRefs.path = [DiseasesDbXRefs]

DiseasesDescription.name = "description"
DiseasesDescription.data_type = OpenTargetsDatasetFieldType.STRING
DiseasesDescription.dataset = Diseases
DiseasesDescription.path = [DiseasesDescription]

DiseasesName.name = "name"
DiseasesName.data_type = OpenTargetsDatasetFieldType.STRING
DiseasesName.dataset = Diseases
DiseasesName.path = [DiseasesName]

DiseasesDirectLocationIds.name = "directLocationIds"
DiseasesDirectLocationIds.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesDirectLocationIds.dataset = Diseases
DiseasesDirectLocationIds.path = [DiseasesDirectLocationIds]

DiseasesObsoleteTerms.name = "obsoleteTerms"
DiseasesObsoleteTerms.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesObsoleteTerms.dataset = Diseases
DiseasesObsoleteTerms.path = [DiseasesObsoleteTerms]

DiseasesParents.name = "parents"
DiseasesParents.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesParents.dataset = Diseases
DiseasesParents.path = [DiseasesParents]

DiseasesSko.name = "sko"
DiseasesSko.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesSko.dataset = Diseases
DiseasesSko.path = [DiseasesSko]

DiseasesSynonymsHasBroadSynonym.name = "hasBroadSynonym"
DiseasesSynonymsHasBroadSynonym.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesSynonymsHasBroadSynonym.dataset = Diseases
DiseasesSynonymsHasBroadSynonym.path = [DiseasesSynonyms, DiseasesSynonymsHasBroadSynonym]

DiseasesSynonymsHasExactSynonym.name = "hasExactSynonym"
DiseasesSynonymsHasExactSynonym.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesSynonymsHasExactSynonym.dataset = Diseases
DiseasesSynonymsHasExactSynonym.path = [DiseasesSynonyms, DiseasesSynonymsHasExactSynonym]

DiseasesSynonymsHasNarrowSynonym.name = "hasNarrowSynonym"
DiseasesSynonymsHasNarrowSynonym.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesSynonymsHasNarrowSynonym.dataset = Diseases
DiseasesSynonymsHasNarrowSynonym.path = [DiseasesSynonyms, DiseasesSynonymsHasNarrowSynonym]

DiseasesSynonymsHasRelatedSynonym.name = "hasRelatedSynonym"
DiseasesSynonymsHasRelatedSynonym.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesSynonymsHasRelatedSynonym.dataset = Diseases
DiseasesSynonymsHasRelatedSynonym.path = [DiseasesSynonyms, DiseasesSynonymsHasRelatedSynonym]

DiseasesSynonyms.name = "synonyms"
DiseasesSynonyms.data_type = OpenTargetsDatasetFieldType.STRUCT
DiseasesSynonyms.dataset = Diseases
DiseasesSynonyms.path = [DiseasesSynonyms]
DiseasesSynonyms.f_has_broad_synonym = DiseasesSynonymsHasBroadSynonym
DiseasesSynonyms.f_has_exact_synonym = DiseasesSynonymsHasExactSynonym
DiseasesSynonyms.f_has_narrow_synonym = DiseasesSynonymsHasNarrowSynonym
DiseasesSynonyms.f_has_related_synonym = DiseasesSynonymsHasRelatedSynonym

DiseasesAncestors.name = "ancestors"
DiseasesAncestors.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesAncestors.dataset = Diseases
DiseasesAncestors.path = [DiseasesAncestors]

DiseasesDescendants.name = "descendants"
DiseasesDescendants.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesDescendants.dataset = Diseases
DiseasesDescendants.path = [DiseasesDescendants]

DiseasesChildren.name = "children"
DiseasesChildren.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesChildren.dataset = Diseases
DiseasesChildren.path = [DiseasesChildren]

DiseasesTherapeuticAreas.name = "therapeuticAreas"
DiseasesTherapeuticAreas.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesTherapeuticAreas.dataset = Diseases
DiseasesTherapeuticAreas.path = [DiseasesTherapeuticAreas]

DiseasesIndirectLocationIds.name = "indirectLocationIds"
DiseasesIndirectLocationIds.data_type = OpenTargetsDatasetFieldType.ARRAY
DiseasesIndirectLocationIds.dataset = Diseases
DiseasesIndirectLocationIds.path = [DiseasesIndirectLocationIds]

DiseasesOntologyIsTherapeuticArea.name = "isTherapeuticArea"
DiseasesOntologyIsTherapeuticArea.data_type = OpenTargetsDatasetFieldType.BOOLEAN
DiseasesOntologyIsTherapeuticArea.dataset = Diseases
DiseasesOntologyIsTherapeuticArea.path = [DiseasesOntology, DiseasesOntologyIsTherapeuticArea]

DiseasesOntologyLeaf.name = "leaf"
DiseasesOntologyLeaf.data_type = OpenTargetsDatasetFieldType.BOOLEAN
DiseasesOntologyLeaf.dataset = Diseases
DiseasesOntologyLeaf.path = [DiseasesOntology, DiseasesOntologyLeaf]

DiseasesOntologySourcesUrl.name = "url"
DiseasesOntologySourcesUrl.data_type = OpenTargetsDatasetFieldType.STRING
DiseasesOntologySourcesUrl.dataset = Diseases
DiseasesOntologySourcesUrl.path = [DiseasesOntology, DiseasesOntologySources, DiseasesOntologySourcesUrl]

DiseasesOntologySourcesName.name = "name"
DiseasesOntologySourcesName.data_type = OpenTargetsDatasetFieldType.STRING
DiseasesOntologySourcesName.dataset = Diseases
DiseasesOntologySourcesName.path = [DiseasesOntology, DiseasesOntologySources, DiseasesOntologySourcesName]

DiseasesOntologySources.name = "sources"
DiseasesOntologySources.data_type = OpenTargetsDatasetFieldType.STRUCT
DiseasesOntologySources.dataset = Diseases
DiseasesOntologySources.path = [DiseasesOntology, DiseasesOntologySources]
DiseasesOntologySources.f_url = DiseasesOntologySourcesUrl
DiseasesOntologySources.f_name = DiseasesOntologySourcesName

DiseasesOntology.name = "ontology"
DiseasesOntology.data_type = OpenTargetsDatasetFieldType.STRUCT
DiseasesOntology.dataset = Diseases
DiseasesOntology.path = [DiseasesOntology]
DiseasesOntology.f_is_therapeutic_area = DiseasesOntologyIsTherapeuticArea
DiseasesOntology.f_leaf = DiseasesOntologyLeaf
DiseasesOntology.f_sources = DiseasesOntologySources

Diseases.id = "diseases"
Diseases.f_id = DiseasesId
Diseases.f_code = DiseasesCode
Diseases.f_db_x_refs = DiseasesDbXRefs
Diseases.f_description = DiseasesDescription
Diseases.f_name = DiseasesName
Diseases.f_direct_location_ids = DiseasesDirectLocationIds
Diseases.f_obsolete_terms = DiseasesObsoleteTerms
Diseases.f_parents = DiseasesParents
Diseases.f_sko = DiseasesSko
Diseases.f_synonyms = DiseasesSynonyms
Diseases.f_ancestors = DiseasesAncestors
Diseases.f_descendants = DiseasesDescendants
Diseases.f_children = DiseasesChildren
Diseases.f_therapeutic_areas = DiseasesTherapeuticAreas
Diseases.f_indirect_location_ids = DiseasesIndirectLocationIds
Diseases.f_ontology = DiseasesOntology
DrugWarningsToxicityClass.name = "toxicityClass"
DrugWarningsToxicityClass.data_type = OpenTargetsDatasetFieldType.STRING
DrugWarningsToxicityClass.dataset = DrugWarnings
DrugWarningsToxicityClass.path = [DrugWarningsToxicityClass]

DrugWarningsChemblIds.name = "chemblIds"
DrugWarningsChemblIds.data_type = OpenTargetsDatasetFieldType.ARRAY
DrugWarningsChemblIds.dataset = DrugWarnings
DrugWarningsChemblIds.path = [DrugWarningsChemblIds]

DrugWarningsCountry.name = "country"
DrugWarningsCountry.data_type = OpenTargetsDatasetFieldType.STRING
DrugWarningsCountry.dataset = DrugWarnings
DrugWarningsCountry.path = [DrugWarningsCountry]

DrugWarningsDescription.name = "description"
DrugWarningsDescription.data_type = OpenTargetsDatasetFieldType.STRING
DrugWarningsDescription.dataset = DrugWarnings
DrugWarningsDescription.path = [DrugWarningsDescription]

DrugWarningsId.name = "id"
DrugWarningsId.data_type = OpenTargetsDatasetFieldType.LONG
DrugWarningsId.dataset = DrugWarnings
DrugWarningsId.path = [DrugWarningsId]

DrugWarningsReferencesRefId.name = "ref_id"
DrugWarningsReferencesRefId.data_type = OpenTargetsDatasetFieldType.STRING
DrugWarningsReferencesRefId.dataset = DrugWarnings
DrugWarningsReferencesRefId.path = [DrugWarningsReferences, DrugWarningsReferencesRefId]

DrugWarningsReferencesRefType.name = "ref_type"
DrugWarningsReferencesRefType.data_type = OpenTargetsDatasetFieldType.STRING
DrugWarningsReferencesRefType.dataset = DrugWarnings
DrugWarningsReferencesRefType.path = [DrugWarningsReferences, DrugWarningsReferencesRefType]

DrugWarningsReferencesRefUrl.name = "ref_url"
DrugWarningsReferencesRefUrl.data_type = OpenTargetsDatasetFieldType.STRING
DrugWarningsReferencesRefUrl.dataset = DrugWarnings
DrugWarningsReferencesRefUrl.path = [DrugWarningsReferences, DrugWarningsReferencesRefUrl]

DrugWarningsReferences.name = "references"
DrugWarningsReferences.data_type = OpenTargetsDatasetFieldType.ARRAY
DrugWarningsReferences.dataset = DrugWarnings
DrugWarningsReferences.path = [DrugWarningsReferences]
DrugWarningsReferences.f_ref_id = DrugWarningsReferencesRefId
DrugWarningsReferences.f_ref_type = DrugWarningsReferencesRefType
DrugWarningsReferences.f_ref_url = DrugWarningsReferencesRefUrl

DrugWarningsWarningType.name = "warningType"
DrugWarningsWarningType.data_type = OpenTargetsDatasetFieldType.STRING
DrugWarningsWarningType.dataset = DrugWarnings
DrugWarningsWarningType.path = [DrugWarningsWarningType]

DrugWarningsYear.name = "year"
DrugWarningsYear.data_type = OpenTargetsDatasetFieldType.LONG
DrugWarningsYear.dataset = DrugWarnings
DrugWarningsYear.path = [DrugWarningsYear]

DrugWarningsMeddraSocCode.name = "meddraSocCode"
DrugWarningsMeddraSocCode.data_type = OpenTargetsDatasetFieldType.INTEGER
DrugWarningsMeddraSocCode.dataset = DrugWarnings
DrugWarningsMeddraSocCode.path = [DrugWarningsMeddraSocCode]

DrugWarnings.id = "drugWarnings"
DrugWarnings.f_toxicity_class = DrugWarningsToxicityClass
DrugWarnings.f_chembl_ids = DrugWarningsChemblIds
DrugWarnings.f_country = DrugWarningsCountry
DrugWarnings.f_description = DrugWarningsDescription
DrugWarnings.f_id = DrugWarningsId
DrugWarnings.f_references = DrugWarningsReferences
DrugWarnings.f_warning_type = DrugWarningsWarningType
DrugWarnings.f_year = DrugWarningsYear
DrugWarnings.f_meddra_soc_code = DrugWarningsMeddraSocCode
EbisearchAssociationsTargetId.name = "targetId"
EbisearchAssociationsTargetId.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchAssociationsTargetId.dataset = EbisearchAssociations
EbisearchAssociationsTargetId.path = [EbisearchAssociationsTargetId]

EbisearchAssociationsDiseaseId.name = "diseaseId"
EbisearchAssociationsDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchAssociationsDiseaseId.dataset = EbisearchAssociations
EbisearchAssociationsDiseaseId.path = [EbisearchAssociationsDiseaseId]

EbisearchAssociationsApprovedSymbol.name = "approvedSymbol"
EbisearchAssociationsApprovedSymbol.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchAssociationsApprovedSymbol.dataset = EbisearchAssociations
EbisearchAssociationsApprovedSymbol.path = [EbisearchAssociationsApprovedSymbol]

EbisearchAssociationsName.name = "name"
EbisearchAssociationsName.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchAssociationsName.dataset = EbisearchAssociations
EbisearchAssociationsName.path = [EbisearchAssociationsName]

EbisearchAssociationsScore.name = "score"
EbisearchAssociationsScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
EbisearchAssociationsScore.dataset = EbisearchAssociations
EbisearchAssociationsScore.path = [EbisearchAssociationsScore]

EbisearchAssociations.id = "ebisearchAssociations"
EbisearchAssociations.f_target_id = EbisearchAssociationsTargetId
EbisearchAssociations.f_disease_id = EbisearchAssociationsDiseaseId
EbisearchAssociations.f_approved_symbol = EbisearchAssociationsApprovedSymbol
EbisearchAssociations.f_name = EbisearchAssociationsName
EbisearchAssociations.f_score = EbisearchAssociationsScore
EbisearchEvidenceTargetId.name = "targetId"
EbisearchEvidenceTargetId.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchEvidenceTargetId.dataset = EbisearchEvidence
EbisearchEvidenceTargetId.path = [EbisearchEvidenceTargetId]

EbisearchEvidenceDiseaseId.name = "diseaseId"
EbisearchEvidenceDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchEvidenceDiseaseId.dataset = EbisearchEvidence
EbisearchEvidenceDiseaseId.path = [EbisearchEvidenceDiseaseId]

EbisearchEvidenceApprovedSymbol.name = "approvedSymbol"
EbisearchEvidenceApprovedSymbol.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchEvidenceApprovedSymbol.dataset = EbisearchEvidence
EbisearchEvidenceApprovedSymbol.path = [EbisearchEvidenceApprovedSymbol]

EbisearchEvidenceName.name = "name"
EbisearchEvidenceName.data_type = OpenTargetsDatasetFieldType.STRING
EbisearchEvidenceName.dataset = EbisearchEvidence
EbisearchEvidenceName.path = [EbisearchEvidenceName]

EbisearchEvidenceScore.name = "score"
EbisearchEvidenceScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
EbisearchEvidenceScore.dataset = EbisearchEvidence
EbisearchEvidenceScore.path = [EbisearchEvidenceScore]

EbisearchEvidence.id = "ebisearchEvidence"
EbisearchEvidence.f_target_id = EbisearchEvidenceTargetId
EbisearchEvidence.f_disease_id = EbisearchEvidenceDiseaseId
EbisearchEvidence.f_approved_symbol = EbisearchEvidenceApprovedSymbol
EbisearchEvidence.f_name = EbisearchEvidenceName
EbisearchEvidence.f_score = EbisearchEvidenceScore
EvidenceDatasourceId.name = "datasourceId"
EvidenceDatasourceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDatasourceId.dataset = Evidence
EvidenceDatasourceId.path = [EvidenceDatasourceId]

EvidenceTargetId.name = "targetId"
EvidenceTargetId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTargetId.dataset = Evidence
EvidenceTargetId.path = [EvidenceTargetId]

EvidenceAlleleOrigins.name = "alleleOrigins"
EvidenceAlleleOrigins.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceAlleleOrigins.dataset = Evidence
EvidenceAlleleOrigins.path = [EvidenceAlleleOrigins]

EvidenceAllelicRequirements.name = "allelicRequirements"
EvidenceAllelicRequirements.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceAllelicRequirements.dataset = Evidence
EvidenceAllelicRequirements.path = [EvidenceAllelicRequirements]

EvidenceAncestry.name = "ancestry"
EvidenceAncestry.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceAncestry.dataset = Evidence
EvidenceAncestry.path = [EvidenceAncestry]

EvidenceAncestryId.name = "ancestryId"
EvidenceAncestryId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceAncestryId.dataset = Evidence
EvidenceAncestryId.path = [EvidenceAncestryId]

EvidenceBeta.name = "beta"
EvidenceBeta.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceBeta.dataset = Evidence
EvidenceBeta.path = [EvidenceBeta]

EvidenceBetaConfidenceIntervalLower.name = "betaConfidenceIntervalLower"
EvidenceBetaConfidenceIntervalLower.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceBetaConfidenceIntervalLower.dataset = Evidence
EvidenceBetaConfidenceIntervalLower.path = [EvidenceBetaConfidenceIntervalLower]

EvidenceBetaConfidenceIntervalUpper.name = "betaConfidenceIntervalUpper"
EvidenceBetaConfidenceIntervalUpper.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceBetaConfidenceIntervalUpper.dataset = Evidence
EvidenceBetaConfidenceIntervalUpper.path = [EvidenceBetaConfidenceIntervalUpper]

EvidenceBiologicalModelAllelicComposition.name = "biologicalModelAllelicComposition"
EvidenceBiologicalModelAllelicComposition.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiologicalModelAllelicComposition.dataset = Evidence
EvidenceBiologicalModelAllelicComposition.path = [EvidenceBiologicalModelAllelicComposition]

EvidenceBiologicalModelGeneticBackground.name = "biologicalModelGeneticBackground"
EvidenceBiologicalModelGeneticBackground.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiologicalModelGeneticBackground.dataset = Evidence
EvidenceBiologicalModelGeneticBackground.path = [EvidenceBiologicalModelGeneticBackground]

EvidenceBiologicalModelId.name = "biologicalModelId"
EvidenceBiologicalModelId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiologicalModelId.dataset = Evidence
EvidenceBiologicalModelId.path = [EvidenceBiologicalModelId]

EvidenceBiomarkerName.name = "biomarkerName"
EvidenceBiomarkerName.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiomarkerName.dataset = Evidence
EvidenceBiomarkerName.path = [EvidenceBiomarkerName]

EvidenceBiomarkersGeneExpressionId.name = "id"
EvidenceBiomarkersGeneExpressionId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiomarkersGeneExpressionId.dataset = Evidence
EvidenceBiomarkersGeneExpressionId.path = [
    EvidenceBiomarkers,
    EvidenceBiomarkersGeneExpression,
    EvidenceBiomarkersGeneExpressionId,
]

EvidenceBiomarkersGeneExpressionName.name = "name"
EvidenceBiomarkersGeneExpressionName.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiomarkersGeneExpressionName.dataset = Evidence
EvidenceBiomarkersGeneExpressionName.path = [
    EvidenceBiomarkers,
    EvidenceBiomarkersGeneExpression,
    EvidenceBiomarkersGeneExpressionName,
]

EvidenceBiomarkersGeneExpression.name = "geneExpression"
EvidenceBiomarkersGeneExpression.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceBiomarkersGeneExpression.dataset = Evidence
EvidenceBiomarkersGeneExpression.path = [EvidenceBiomarkers, EvidenceBiomarkersGeneExpression]
EvidenceBiomarkersGeneExpression.f_id = EvidenceBiomarkersGeneExpressionId
EvidenceBiomarkersGeneExpression.f_name = EvidenceBiomarkersGeneExpressionName

EvidenceBiomarkersVariantFunctionalConsequenceId.name = "functionalConsequenceId"
EvidenceBiomarkersVariantFunctionalConsequenceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiomarkersVariantFunctionalConsequenceId.dataset = Evidence
EvidenceBiomarkersVariantFunctionalConsequenceId.path = [
    EvidenceBiomarkers,
    EvidenceBiomarkersVariant,
    EvidenceBiomarkersVariantFunctionalConsequenceId,
]

EvidenceBiomarkersVariantId.name = "id"
EvidenceBiomarkersVariantId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiomarkersVariantId.dataset = Evidence
EvidenceBiomarkersVariantId.path = [EvidenceBiomarkers, EvidenceBiomarkersVariant, EvidenceBiomarkersVariantId]

EvidenceBiomarkersVariantName.name = "name"
EvidenceBiomarkersVariantName.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceBiomarkersVariantName.dataset = Evidence
EvidenceBiomarkersVariantName.path = [EvidenceBiomarkers, EvidenceBiomarkersVariant, EvidenceBiomarkersVariantName]

EvidenceBiomarkersVariant.name = "variant"
EvidenceBiomarkersVariant.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceBiomarkersVariant.dataset = Evidence
EvidenceBiomarkersVariant.path = [EvidenceBiomarkers, EvidenceBiomarkersVariant]
EvidenceBiomarkersVariant.f_functional_consequence_id = EvidenceBiomarkersVariantFunctionalConsequenceId
EvidenceBiomarkersVariant.f_id = EvidenceBiomarkersVariantId
EvidenceBiomarkersVariant.f_name = EvidenceBiomarkersVariantName

EvidenceBiomarkers.name = "biomarkers"
EvidenceBiomarkers.data_type = OpenTargetsDatasetFieldType.STRUCT
EvidenceBiomarkers.dataset = Evidence
EvidenceBiomarkers.path = [EvidenceBiomarkers]
EvidenceBiomarkers.f_gene_expression = EvidenceBiomarkersGeneExpression
EvidenceBiomarkers.f_variant = EvidenceBiomarkersVariant

EvidenceBiosamplesFromSource.name = "biosamplesFromSource"
EvidenceBiosamplesFromSource.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceBiosamplesFromSource.dataset = Evidence
EvidenceBiosamplesFromSource.path = [EvidenceBiosamplesFromSource]

EvidenceClinicalPhase.name = "clinicalPhase"
EvidenceClinicalPhase.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceClinicalPhase.dataset = Evidence
EvidenceClinicalPhase.path = [EvidenceClinicalPhase]

EvidenceClinicalSignificances.name = "clinicalSignificances"
EvidenceClinicalSignificances.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceClinicalSignificances.dataset = Evidence
EvidenceClinicalSignificances.path = [EvidenceClinicalSignificances]

EvidenceClinicalStatus.name = "clinicalStatus"
EvidenceClinicalStatus.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceClinicalStatus.dataset = Evidence
EvidenceClinicalStatus.path = [EvidenceClinicalStatus]

EvidenceCohortDescription.name = "cohortDescription"
EvidenceCohortDescription.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceCohortDescription.dataset = Evidence
EvidenceCohortDescription.path = [EvidenceCohortDescription]

EvidenceCohortId.name = "cohortId"
EvidenceCohortId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceCohortId.dataset = Evidence
EvidenceCohortId.path = [EvidenceCohortId]

EvidenceCohortPhenotypes.name = "cohortPhenotypes"
EvidenceCohortPhenotypes.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceCohortPhenotypes.dataset = Evidence
EvidenceCohortPhenotypes.path = [EvidenceCohortPhenotypes]

EvidenceCohortShortName.name = "cohortShortName"
EvidenceCohortShortName.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceCohortShortName.dataset = Evidence
EvidenceCohortShortName.path = [EvidenceCohortShortName]

EvidenceConfidence.name = "confidence"
EvidenceConfidence.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceConfidence.dataset = Evidence
EvidenceConfidence.path = [EvidenceConfidence]

EvidenceContrast.name = "contrast"
EvidenceContrast.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceContrast.dataset = Evidence
EvidenceContrast.path = [EvidenceContrast]

EvidenceDatatypeId.name = "datatypeId"
EvidenceDatatypeId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDatatypeId.dataset = Evidence
EvidenceDatatypeId.path = [EvidenceDatatypeId]

EvidenceDiseaseCellLinesId.name = "id"
EvidenceDiseaseCellLinesId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseCellLinesId.dataset = Evidence
EvidenceDiseaseCellLinesId.path = [EvidenceDiseaseCellLines, EvidenceDiseaseCellLinesId]

EvidenceDiseaseCellLinesName.name = "name"
EvidenceDiseaseCellLinesName.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseCellLinesName.dataset = Evidence
EvidenceDiseaseCellLinesName.path = [EvidenceDiseaseCellLines, EvidenceDiseaseCellLinesName]

EvidenceDiseaseCellLinesTissue.name = "tissue"
EvidenceDiseaseCellLinesTissue.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseCellLinesTissue.dataset = Evidence
EvidenceDiseaseCellLinesTissue.path = [EvidenceDiseaseCellLines, EvidenceDiseaseCellLinesTissue]

EvidenceDiseaseCellLinesTissueId.name = "tissueId"
EvidenceDiseaseCellLinesTissueId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseCellLinesTissueId.dataset = Evidence
EvidenceDiseaseCellLinesTissueId.path = [EvidenceDiseaseCellLines, EvidenceDiseaseCellLinesTissueId]

EvidenceDiseaseCellLines.name = "diseaseCellLines"
EvidenceDiseaseCellLines.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceDiseaseCellLines.dataset = Evidence
EvidenceDiseaseCellLines.path = [EvidenceDiseaseCellLines]
EvidenceDiseaseCellLines.f_id = EvidenceDiseaseCellLinesId
EvidenceDiseaseCellLines.f_name = EvidenceDiseaseCellLinesName
EvidenceDiseaseCellLines.f_tissue = EvidenceDiseaseCellLinesTissue
EvidenceDiseaseCellLines.f_tissue_id = EvidenceDiseaseCellLinesTissueId

EvidenceDiseaseFromSource.name = "diseaseFromSource"
EvidenceDiseaseFromSource.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseFromSource.dataset = Evidence
EvidenceDiseaseFromSource.path = [EvidenceDiseaseFromSource]

EvidenceDiseaseFromSourceId.name = "diseaseFromSourceId"
EvidenceDiseaseFromSourceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseFromSourceId.dataset = Evidence
EvidenceDiseaseFromSourceId.path = [EvidenceDiseaseFromSourceId]

EvidenceDiseaseFromSourceMappedId.name = "diseaseFromSourceMappedId"
EvidenceDiseaseFromSourceMappedId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseFromSourceMappedId.dataset = Evidence
EvidenceDiseaseFromSourceMappedId.path = [EvidenceDiseaseFromSourceMappedId]

EvidenceDiseaseModelAssociatedHumanPhenotypesId.name = "id"
EvidenceDiseaseModelAssociatedHumanPhenotypesId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseModelAssociatedHumanPhenotypesId.dataset = Evidence
EvidenceDiseaseModelAssociatedHumanPhenotypesId.path = [
    EvidenceDiseaseModelAssociatedHumanPhenotypes,
    EvidenceDiseaseModelAssociatedHumanPhenotypesId,
]

EvidenceDiseaseModelAssociatedHumanPhenotypesLabel.name = "label"
EvidenceDiseaseModelAssociatedHumanPhenotypesLabel.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseModelAssociatedHumanPhenotypesLabel.dataset = Evidence
EvidenceDiseaseModelAssociatedHumanPhenotypesLabel.path = [
    EvidenceDiseaseModelAssociatedHumanPhenotypes,
    EvidenceDiseaseModelAssociatedHumanPhenotypesLabel,
]

EvidenceDiseaseModelAssociatedHumanPhenotypes.name = "diseaseModelAssociatedHumanPhenotypes"
EvidenceDiseaseModelAssociatedHumanPhenotypes.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceDiseaseModelAssociatedHumanPhenotypes.dataset = Evidence
EvidenceDiseaseModelAssociatedHumanPhenotypes.path = [EvidenceDiseaseModelAssociatedHumanPhenotypes]
EvidenceDiseaseModelAssociatedHumanPhenotypes.f_id = EvidenceDiseaseModelAssociatedHumanPhenotypesId
EvidenceDiseaseModelAssociatedHumanPhenotypes.f_label = EvidenceDiseaseModelAssociatedHumanPhenotypesLabel

EvidenceDiseaseModelAssociatedModelPhenotypesId.name = "id"
EvidenceDiseaseModelAssociatedModelPhenotypesId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseModelAssociatedModelPhenotypesId.dataset = Evidence
EvidenceDiseaseModelAssociatedModelPhenotypesId.path = [
    EvidenceDiseaseModelAssociatedModelPhenotypes,
    EvidenceDiseaseModelAssociatedModelPhenotypesId,
]

EvidenceDiseaseModelAssociatedModelPhenotypesLabel.name = "label"
EvidenceDiseaseModelAssociatedModelPhenotypesLabel.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseModelAssociatedModelPhenotypesLabel.dataset = Evidence
EvidenceDiseaseModelAssociatedModelPhenotypesLabel.path = [
    EvidenceDiseaseModelAssociatedModelPhenotypes,
    EvidenceDiseaseModelAssociatedModelPhenotypesLabel,
]

EvidenceDiseaseModelAssociatedModelPhenotypes.name = "diseaseModelAssociatedModelPhenotypes"
EvidenceDiseaseModelAssociatedModelPhenotypes.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceDiseaseModelAssociatedModelPhenotypes.dataset = Evidence
EvidenceDiseaseModelAssociatedModelPhenotypes.path = [EvidenceDiseaseModelAssociatedModelPhenotypes]
EvidenceDiseaseModelAssociatedModelPhenotypes.f_id = EvidenceDiseaseModelAssociatedModelPhenotypesId
EvidenceDiseaseModelAssociatedModelPhenotypes.f_label = EvidenceDiseaseModelAssociatedModelPhenotypesLabel

EvidenceDrugFromSource.name = "drugFromSource"
EvidenceDrugFromSource.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDrugFromSource.dataset = Evidence
EvidenceDrugFromSource.path = [EvidenceDrugFromSource]

EvidenceDrugId.name = "drugId"
EvidenceDrugId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDrugId.dataset = Evidence
EvidenceDrugId.path = [EvidenceDrugId]

EvidenceDrugResponse.name = "drugResponse"
EvidenceDrugResponse.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDrugResponse.dataset = Evidence
EvidenceDrugResponse.path = [EvidenceDrugResponse]

EvidenceLiterature.name = "literature"
EvidenceLiterature.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceLiterature.dataset = Evidence
EvidenceLiterature.path = [EvidenceLiterature]

EvidenceLog2FoldChangePercentileRank.name = "log2FoldChangePercentileRank"
EvidenceLog2FoldChangePercentileRank.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceLog2FoldChangePercentileRank.dataset = Evidence
EvidenceLog2FoldChangePercentileRank.path = [EvidenceLog2FoldChangePercentileRank]

EvidenceLog2FoldChangeValue.name = "log2FoldChangeValue"
EvidenceLog2FoldChangeValue.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceLog2FoldChangeValue.dataset = Evidence
EvidenceLog2FoldChangeValue.path = [EvidenceLog2FoldChangeValue]

EvidenceMutatedSamplesFunctionalConsequenceId.name = "functionalConsequenceId"
EvidenceMutatedSamplesFunctionalConsequenceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceMutatedSamplesFunctionalConsequenceId.dataset = Evidence
EvidenceMutatedSamplesFunctionalConsequenceId.path = [
    EvidenceMutatedSamples,
    EvidenceMutatedSamplesFunctionalConsequenceId,
]

EvidenceMutatedSamplesNumberMutatedSamples.name = "numberMutatedSamples"
EvidenceMutatedSamplesNumberMutatedSamples.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceMutatedSamplesNumberMutatedSamples.dataset = Evidence
EvidenceMutatedSamplesNumberMutatedSamples.path = [EvidenceMutatedSamples, EvidenceMutatedSamplesNumberMutatedSamples]

EvidenceMutatedSamplesNumberSamplesTested.name = "numberSamplesTested"
EvidenceMutatedSamplesNumberSamplesTested.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceMutatedSamplesNumberSamplesTested.dataset = Evidence
EvidenceMutatedSamplesNumberSamplesTested.path = [EvidenceMutatedSamples, EvidenceMutatedSamplesNumberSamplesTested]

EvidenceMutatedSamplesNumberSamplesWithMutationType.name = "numberSamplesWithMutationType"
EvidenceMutatedSamplesNumberSamplesWithMutationType.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceMutatedSamplesNumberSamplesWithMutationType.dataset = Evidence
EvidenceMutatedSamplesNumberSamplesWithMutationType.path = [
    EvidenceMutatedSamples,
    EvidenceMutatedSamplesNumberSamplesWithMutationType,
]

EvidenceMutatedSamples.name = "mutatedSamples"
EvidenceMutatedSamples.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceMutatedSamples.dataset = Evidence
EvidenceMutatedSamples.path = [EvidenceMutatedSamples]
EvidenceMutatedSamples.f_functional_consequence_id = EvidenceMutatedSamplesFunctionalConsequenceId
EvidenceMutatedSamples.f_number_mutated_samples = EvidenceMutatedSamplesNumberMutatedSamples
EvidenceMutatedSamples.f_number_samples_tested = EvidenceMutatedSamplesNumberSamplesTested
EvidenceMutatedSamples.f_number_samples_with_mutation_type = EvidenceMutatedSamplesNumberSamplesWithMutationType

EvidenceOddsRatio.name = "oddsRatio"
EvidenceOddsRatio.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceOddsRatio.dataset = Evidence
EvidenceOddsRatio.path = [EvidenceOddsRatio]

EvidenceOddsRatioConfidenceIntervalLower.name = "oddsRatioConfidenceIntervalLower"
EvidenceOddsRatioConfidenceIntervalLower.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceOddsRatioConfidenceIntervalLower.dataset = Evidence
EvidenceOddsRatioConfidenceIntervalLower.path = [EvidenceOddsRatioConfidenceIntervalLower]

EvidenceOddsRatioConfidenceIntervalUpper.name = "oddsRatioConfidenceIntervalUpper"
EvidenceOddsRatioConfidenceIntervalUpper.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceOddsRatioConfidenceIntervalUpper.dataset = Evidence
EvidenceOddsRatioConfidenceIntervalUpper.path = [EvidenceOddsRatioConfidenceIntervalUpper]

EvidencePValueExponent.name = "pValueExponent"
EvidencePValueExponent.data_type = OpenTargetsDatasetFieldType.LONG
EvidencePValueExponent.dataset = Evidence
EvidencePValueExponent.path = [EvidencePValueExponent]

EvidencePValueMantissa.name = "pValueMantissa"
EvidencePValueMantissa.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidencePValueMantissa.dataset = Evidence
EvidencePValueMantissa.path = [EvidencePValueMantissa]

EvidencePathwaysId.name = "id"
EvidencePathwaysId.data_type = OpenTargetsDatasetFieldType.STRING
EvidencePathwaysId.dataset = Evidence
EvidencePathwaysId.path = [EvidencePathways, EvidencePathwaysId]

EvidencePathwaysName.name = "name"
EvidencePathwaysName.data_type = OpenTargetsDatasetFieldType.STRING
EvidencePathwaysName.dataset = Evidence
EvidencePathwaysName.path = [EvidencePathways, EvidencePathwaysName]

EvidencePathways.name = "pathways"
EvidencePathways.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidencePathways.dataset = Evidence
EvidencePathways.path = [EvidencePathways]
EvidencePathways.f_id = EvidencePathwaysId
EvidencePathways.f_name = EvidencePathwaysName

EvidencePmcIds.name = "pmcIds"
EvidencePmcIds.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidencePmcIds.dataset = Evidence
EvidencePmcIds.path = [EvidencePmcIds]

EvidenceProjectId.name = "projectId"
EvidenceProjectId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceProjectId.dataset = Evidence
EvidenceProjectId.path = [EvidenceProjectId]

EvidencePublicationFirstAuthor.name = "publicationFirstAuthor"
EvidencePublicationFirstAuthor.data_type = OpenTargetsDatasetFieldType.STRING
EvidencePublicationFirstAuthor.dataset = Evidence
EvidencePublicationFirstAuthor.path = [EvidencePublicationFirstAuthor]

EvidencePublicationYear.name = "publicationYear"
EvidencePublicationYear.data_type = OpenTargetsDatasetFieldType.LONG
EvidencePublicationYear.dataset = Evidence
EvidencePublicationYear.path = [EvidencePublicationYear]

EvidenceReactionId.name = "reactionId"
EvidenceReactionId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceReactionId.dataset = Evidence
EvidenceReactionId.path = [EvidenceReactionId]

EvidenceReactionName.name = "reactionName"
EvidenceReactionName.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceReactionName.dataset = Evidence
EvidenceReactionName.path = [EvidenceReactionName]

EvidenceResourceScore.name = "resourceScore"
EvidenceResourceScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceResourceScore.dataset = Evidence
EvidenceResourceScore.path = [EvidenceResourceScore]

EvidenceSex.name = "sex"
EvidenceSex.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceSex.dataset = Evidence
EvidenceSex.path = [EvidenceSex]

EvidenceSignificantDriverMethods.name = "significantDriverMethods"
EvidenceSignificantDriverMethods.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceSignificantDriverMethods.dataset = Evidence
EvidenceSignificantDriverMethods.path = [EvidenceSignificantDriverMethods]

EvidenceStatisticalMethod.name = "statisticalMethod"
EvidenceStatisticalMethod.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceStatisticalMethod.dataset = Evidence
EvidenceStatisticalMethod.path = [EvidenceStatisticalMethod]

EvidenceStatisticalMethodOverview.name = "statisticalMethodOverview"
EvidenceStatisticalMethodOverview.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceStatisticalMethodOverview.dataset = Evidence
EvidenceStatisticalMethodOverview.path = [EvidenceStatisticalMethodOverview]

EvidenceStudyCases.name = "studyCases"
EvidenceStudyCases.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceStudyCases.dataset = Evidence
EvidenceStudyCases.path = [EvidenceStudyCases]

EvidenceStudyCasesWithQualifyingVariants.name = "studyCasesWithQualifyingVariants"
EvidenceStudyCasesWithQualifyingVariants.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceStudyCasesWithQualifyingVariants.dataset = Evidence
EvidenceStudyCasesWithQualifyingVariants.path = [EvidenceStudyCasesWithQualifyingVariants]

EvidenceStudyId.name = "studyId"
EvidenceStudyId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceStudyId.dataset = Evidence
EvidenceStudyId.path = [EvidenceStudyId]

EvidenceStudyOverview.name = "studyOverview"
EvidenceStudyOverview.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceStudyOverview.dataset = Evidence
EvidenceStudyOverview.path = [EvidenceStudyOverview]

EvidenceStudySampleSize.name = "studySampleSize"
EvidenceStudySampleSize.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceStudySampleSize.dataset = Evidence
EvidenceStudySampleSize.path = [EvidenceStudySampleSize]

EvidenceStudyStartDate.name = "studyStartDate"
EvidenceStudyStartDate.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceStudyStartDate.dataset = Evidence
EvidenceStudyStartDate.path = [EvidenceStudyStartDate]

EvidenceStudyStopReason.name = "studyStopReason"
EvidenceStudyStopReason.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceStudyStopReason.dataset = Evidence
EvidenceStudyStopReason.path = [EvidenceStudyStopReason]

EvidenceStudyStopReasonCategories.name = "studyStopReasonCategories"
EvidenceStudyStopReasonCategories.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceStudyStopReasonCategories.dataset = Evidence
EvidenceStudyStopReasonCategories.path = [EvidenceStudyStopReasonCategories]

EvidenceTargetFromSource.name = "targetFromSource"
EvidenceTargetFromSource.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTargetFromSource.dataset = Evidence
EvidenceTargetFromSource.path = [EvidenceTargetFromSource]

EvidenceTargetFromSourceId.name = "targetFromSourceId"
EvidenceTargetFromSourceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTargetFromSourceId.dataset = Evidence
EvidenceTargetFromSourceId.path = [EvidenceTargetFromSourceId]

EvidenceTargetInModel.name = "targetInModel"
EvidenceTargetInModel.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTargetInModel.dataset = Evidence
EvidenceTargetInModel.path = [EvidenceTargetInModel]

EvidenceTargetInModelEnsemblId.name = "targetInModelEnsemblId"
EvidenceTargetInModelEnsemblId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTargetInModelEnsemblId.dataset = Evidence
EvidenceTargetInModelEnsemblId.path = [EvidenceTargetInModelEnsemblId]

EvidenceTargetInModelMgiId.name = "targetInModelMgiId"
EvidenceTargetInModelMgiId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTargetInModelMgiId.dataset = Evidence
EvidenceTargetInModelMgiId.path = [EvidenceTargetInModelMgiId]

EvidenceTargetModulation.name = "targetModulation"
EvidenceTargetModulation.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTargetModulation.dataset = Evidence
EvidenceTargetModulation.path = [EvidenceTargetModulation]

EvidenceTextMiningSentencesDEnd.name = "dEnd"
EvidenceTextMiningSentencesDEnd.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceTextMiningSentencesDEnd.dataset = Evidence
EvidenceTextMiningSentencesDEnd.path = [EvidenceTextMiningSentences, EvidenceTextMiningSentencesDEnd]

EvidenceTextMiningSentencesDStart.name = "dStart"
EvidenceTextMiningSentencesDStart.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceTextMiningSentencesDStart.dataset = Evidence
EvidenceTextMiningSentencesDStart.path = [EvidenceTextMiningSentences, EvidenceTextMiningSentencesDStart]

EvidenceTextMiningSentencesSection.name = "section"
EvidenceTextMiningSentencesSection.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTextMiningSentencesSection.dataset = Evidence
EvidenceTextMiningSentencesSection.path = [EvidenceTextMiningSentences, EvidenceTextMiningSentencesSection]

EvidenceTextMiningSentencesTEnd.name = "tEnd"
EvidenceTextMiningSentencesTEnd.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceTextMiningSentencesTEnd.dataset = Evidence
EvidenceTextMiningSentencesTEnd.path = [EvidenceTextMiningSentences, EvidenceTextMiningSentencesTEnd]

EvidenceTextMiningSentencesTStart.name = "tStart"
EvidenceTextMiningSentencesTStart.data_type = OpenTargetsDatasetFieldType.LONG
EvidenceTextMiningSentencesTStart.dataset = Evidence
EvidenceTextMiningSentencesTStart.path = [EvidenceTextMiningSentences, EvidenceTextMiningSentencesTStart]

EvidenceTextMiningSentencesText.name = "text"
EvidenceTextMiningSentencesText.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceTextMiningSentencesText.dataset = Evidence
EvidenceTextMiningSentencesText.path = [EvidenceTextMiningSentences, EvidenceTextMiningSentencesText]

EvidenceTextMiningSentences.name = "textMiningSentences"
EvidenceTextMiningSentences.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceTextMiningSentences.dataset = Evidence
EvidenceTextMiningSentences.path = [EvidenceTextMiningSentences]
EvidenceTextMiningSentences.f_d_end = EvidenceTextMiningSentencesDEnd
EvidenceTextMiningSentences.f_d_start = EvidenceTextMiningSentencesDStart
EvidenceTextMiningSentences.f_section = EvidenceTextMiningSentencesSection
EvidenceTextMiningSentences.f_t_end = EvidenceTextMiningSentencesTEnd
EvidenceTextMiningSentences.f_t_start = EvidenceTextMiningSentencesTStart
EvidenceTextMiningSentences.f_text = EvidenceTextMiningSentencesText

EvidenceUrlsNiceName.name = "niceName"
EvidenceUrlsNiceName.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceUrlsNiceName.dataset = Evidence
EvidenceUrlsNiceName.path = [EvidenceUrls, EvidenceUrlsNiceName]

EvidenceUrlsUrl.name = "url"
EvidenceUrlsUrl.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceUrlsUrl.dataset = Evidence
EvidenceUrlsUrl.path = [EvidenceUrls, EvidenceUrlsUrl]

EvidenceUrls.name = "urls"
EvidenceUrls.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceUrls.dataset = Evidence
EvidenceUrls.path = [EvidenceUrls]
EvidenceUrls.f_nice_name = EvidenceUrlsNiceName
EvidenceUrls.f_url = EvidenceUrlsUrl

EvidenceVariantAminoacidDescriptions.name = "variantAminoacidDescriptions"
EvidenceVariantAminoacidDescriptions.data_type = OpenTargetsDatasetFieldType.ARRAY
EvidenceVariantAminoacidDescriptions.dataset = Evidence
EvidenceVariantAminoacidDescriptions.path = [EvidenceVariantAminoacidDescriptions]

EvidenceVariantFunctionalConsequenceId.name = "variantFunctionalConsequenceId"
EvidenceVariantFunctionalConsequenceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceVariantFunctionalConsequenceId.dataset = Evidence
EvidenceVariantFunctionalConsequenceId.path = [EvidenceVariantFunctionalConsequenceId]

EvidenceVariantHgvsId.name = "variantHgvsId"
EvidenceVariantHgvsId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceVariantHgvsId.dataset = Evidence
EvidenceVariantHgvsId.path = [EvidenceVariantHgvsId]

EvidenceVariantId.name = "variantId"
EvidenceVariantId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceVariantId.dataset = Evidence
EvidenceVariantId.path = [EvidenceVariantId]

EvidenceVariantRsId.name = "variantRsId"
EvidenceVariantRsId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceVariantRsId.dataset = Evidence
EvidenceVariantRsId.path = [EvidenceVariantRsId]

EvidenceSourceId.name = "sourceId"
EvidenceSourceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceSourceId.dataset = Evidence
EvidenceSourceId.path = [EvidenceSourceId]

EvidenceDiseaseId.name = "diseaseId"
EvidenceDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceDiseaseId.dataset = Evidence
EvidenceDiseaseId.path = [EvidenceDiseaseId]

EvidenceId.name = "id"
EvidenceId.data_type = OpenTargetsDatasetFieldType.STRING
EvidenceId.dataset = Evidence
EvidenceId.path = [EvidenceId]

EvidenceScore.name = "score"
EvidenceScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
EvidenceScore.dataset = Evidence
EvidenceScore.path = [EvidenceScore]

Evidence.id = "evidence"
Evidence.f_datasource_id = EvidenceDatasourceId
Evidence.f_target_id = EvidenceTargetId
Evidence.f_allele_origins = EvidenceAlleleOrigins
Evidence.f_allelic_requirements = EvidenceAllelicRequirements
Evidence.f_ancestry = EvidenceAncestry
Evidence.f_ancestry_id = EvidenceAncestryId
Evidence.f_beta = EvidenceBeta
Evidence.f_beta_confidence_interval_lower = EvidenceBetaConfidenceIntervalLower
Evidence.f_beta_confidence_interval_upper = EvidenceBetaConfidenceIntervalUpper
Evidence.f_biological_model_allelic_composition = EvidenceBiologicalModelAllelicComposition
Evidence.f_biological_model_genetic_background = EvidenceBiologicalModelGeneticBackground
Evidence.f_biological_model_id = EvidenceBiologicalModelId
Evidence.f_biomarker_name = EvidenceBiomarkerName
Evidence.f_biomarkers = EvidenceBiomarkers
Evidence.f_biosamples_from_source = EvidenceBiosamplesFromSource
Evidence.f_clinical_phase = EvidenceClinicalPhase
Evidence.f_clinical_significances = EvidenceClinicalSignificances
Evidence.f_clinical_status = EvidenceClinicalStatus
Evidence.f_cohort_description = EvidenceCohortDescription
Evidence.f_cohort_id = EvidenceCohortId
Evidence.f_cohort_phenotypes = EvidenceCohortPhenotypes
Evidence.f_cohort_short_name = EvidenceCohortShortName
Evidence.f_confidence = EvidenceConfidence
Evidence.f_contrast = EvidenceContrast
Evidence.f_datatype_id = EvidenceDatatypeId
Evidence.f_disease_cell_lines = EvidenceDiseaseCellLines
Evidence.f_disease_from_source = EvidenceDiseaseFromSource
Evidence.f_disease_from_source_id = EvidenceDiseaseFromSourceId
Evidence.f_disease_from_source_mapped_id = EvidenceDiseaseFromSourceMappedId
Evidence.f_disease_model_associated_human_phenotypes = EvidenceDiseaseModelAssociatedHumanPhenotypes
Evidence.f_disease_model_associated_model_phenotypes = EvidenceDiseaseModelAssociatedModelPhenotypes
Evidence.f_drug_from_source = EvidenceDrugFromSource
Evidence.f_drug_id = EvidenceDrugId
Evidence.f_drug_response = EvidenceDrugResponse
Evidence.f_literature = EvidenceLiterature
Evidence.f_log_2_fold_change_percentile_rank = EvidenceLog2FoldChangePercentileRank
Evidence.f_log_2_fold_change_value = EvidenceLog2FoldChangeValue
Evidence.f_mutated_samples = EvidenceMutatedSamples
Evidence.f_odds_ratio = EvidenceOddsRatio
Evidence.f_odds_ratio_confidence_interval_lower = EvidenceOddsRatioConfidenceIntervalLower
Evidence.f_odds_ratio_confidence_interval_upper = EvidenceOddsRatioConfidenceIntervalUpper
Evidence.f_p_value_exponent = EvidencePValueExponent
Evidence.f_p_value_mantissa = EvidencePValueMantissa
Evidence.f_pathways = EvidencePathways
Evidence.f_pmc_ids = EvidencePmcIds
Evidence.f_project_id = EvidenceProjectId
Evidence.f_publication_first_author = EvidencePublicationFirstAuthor
Evidence.f_publication_year = EvidencePublicationYear
Evidence.f_reaction_id = EvidenceReactionId
Evidence.f_reaction_name = EvidenceReactionName
Evidence.f_resource_score = EvidenceResourceScore
Evidence.f_sex = EvidenceSex
Evidence.f_significant_driver_methods = EvidenceSignificantDriverMethods
Evidence.f_statistical_method = EvidenceStatisticalMethod
Evidence.f_statistical_method_overview = EvidenceStatisticalMethodOverview
Evidence.f_study_cases = EvidenceStudyCases
Evidence.f_study_cases_with_qualifying_variants = EvidenceStudyCasesWithQualifyingVariants
Evidence.f_study_id = EvidenceStudyId
Evidence.f_study_overview = EvidenceStudyOverview
Evidence.f_study_sample_size = EvidenceStudySampleSize
Evidence.f_study_start_date = EvidenceStudyStartDate
Evidence.f_study_stop_reason = EvidenceStudyStopReason
Evidence.f_study_stop_reason_categories = EvidenceStudyStopReasonCategories
Evidence.f_target_from_source = EvidenceTargetFromSource
Evidence.f_target_from_source_id = EvidenceTargetFromSourceId
Evidence.f_target_in_model = EvidenceTargetInModel
Evidence.f_target_in_model_ensembl_id = EvidenceTargetInModelEnsemblId
Evidence.f_target_in_model_mgi_id = EvidenceTargetInModelMgiId
Evidence.f_target_modulation = EvidenceTargetModulation
Evidence.f_text_mining_sentences = EvidenceTextMiningSentences
Evidence.f_urls = EvidenceUrls
Evidence.f_variant_aminoacid_descriptions = EvidenceVariantAminoacidDescriptions
Evidence.f_variant_functional_consequence_id = EvidenceVariantFunctionalConsequenceId
Evidence.f_variant_hgvs_id = EvidenceVariantHgvsId
Evidence.f_variant_id = EvidenceVariantId
Evidence.f_variant_rs_id = EvidenceVariantRsId
Evidence.f_source_id = EvidenceSourceId
Evidence.f_disease_id = EvidenceDiseaseId
Evidence.f_id = EvidenceId
Evidence.f_score = EvidenceScore
GoId.name = "id"
GoId.data_type = OpenTargetsDatasetFieldType.STRING
GoId.dataset = Go
GoId.path = [GoId]

GoName.name = "name"
GoName.data_type = OpenTargetsDatasetFieldType.STRING
GoName.dataset = Go
GoName.path = [GoName]

Go.id = "go"
Go.f_id = GoId
Go.f_name = GoName
HpoDbXRefs.name = "dbXRefs"
HpoDbXRefs.data_type = OpenTargetsDatasetFieldType.ARRAY
HpoDbXRefs.dataset = Hpo
HpoDbXRefs.path = [HpoDbXRefs]

HpoDescription.name = "description"
HpoDescription.data_type = OpenTargetsDatasetFieldType.STRING
HpoDescription.dataset = Hpo
HpoDescription.path = [HpoDescription]

HpoId.name = "id"
HpoId.data_type = OpenTargetsDatasetFieldType.STRING
HpoId.dataset = Hpo
HpoId.path = [HpoId]

HpoName.name = "name"
HpoName.data_type = OpenTargetsDatasetFieldType.STRING
HpoName.dataset = Hpo
HpoName.path = [HpoName]

HpoNamespace.name = "namespace"
HpoNamespace.data_type = OpenTargetsDatasetFieldType.ARRAY
HpoNamespace.dataset = Hpo
HpoNamespace.path = [HpoNamespace]

HpoObsoleteTerms.name = "obsolete_terms"
HpoObsoleteTerms.data_type = OpenTargetsDatasetFieldType.ARRAY
HpoObsoleteTerms.dataset = Hpo
HpoObsoleteTerms.path = [HpoObsoleteTerms]

HpoParents.name = "parents"
HpoParents.data_type = OpenTargetsDatasetFieldType.ARRAY
HpoParents.dataset = Hpo
HpoParents.path = [HpoParents]

Hpo.id = "hpo"
Hpo.f_db_x_refs = HpoDbXRefs
Hpo.f_description = HpoDescription
Hpo.f_id = HpoId
Hpo.f_name = HpoName
Hpo.f_namespace = HpoNamespace
Hpo.f_obsolete_terms = HpoObsoleteTerms
Hpo.f_parents = HpoParents
IndicationId.name = "id"
IndicationId.data_type = OpenTargetsDatasetFieldType.STRING
IndicationId.dataset = Indication
IndicationId.path = [IndicationId]

IndicationIndicationsDisease.name = "disease"
IndicationIndicationsDisease.data_type = OpenTargetsDatasetFieldType.STRING
IndicationIndicationsDisease.dataset = Indication
IndicationIndicationsDisease.path = [IndicationIndications, IndicationIndicationsDisease]

IndicationIndicationsEfoName.name = "efoName"
IndicationIndicationsEfoName.data_type = OpenTargetsDatasetFieldType.STRING
IndicationIndicationsEfoName.dataset = Indication
IndicationIndicationsEfoName.path = [IndicationIndications, IndicationIndicationsEfoName]

IndicationIndicationsReferencesSource.name = "source"
IndicationIndicationsReferencesSource.data_type = OpenTargetsDatasetFieldType.STRING
IndicationIndicationsReferencesSource.dataset = Indication
IndicationIndicationsReferencesSource.path = [
    IndicationIndications,
    IndicationIndicationsReferences,
    IndicationIndicationsReferencesSource,
]

IndicationIndicationsReferencesIds.name = "ids"
IndicationIndicationsReferencesIds.data_type = OpenTargetsDatasetFieldType.ARRAY
IndicationIndicationsReferencesIds.dataset = Indication
IndicationIndicationsReferencesIds.path = [
    IndicationIndications,
    IndicationIndicationsReferences,
    IndicationIndicationsReferencesIds,
]

IndicationIndicationsReferences.name = "references"
IndicationIndicationsReferences.data_type = OpenTargetsDatasetFieldType.ARRAY
IndicationIndicationsReferences.dataset = Indication
IndicationIndicationsReferences.path = [IndicationIndications, IndicationIndicationsReferences]
IndicationIndicationsReferences.f_source = IndicationIndicationsReferencesSource
IndicationIndicationsReferences.f_ids = IndicationIndicationsReferencesIds

IndicationIndicationsMaxPhaseForIndication.name = "maxPhaseForIndication"
IndicationIndicationsMaxPhaseForIndication.data_type = OpenTargetsDatasetFieldType.LONG
IndicationIndicationsMaxPhaseForIndication.dataset = Indication
IndicationIndicationsMaxPhaseForIndication.path = [IndicationIndications, IndicationIndicationsMaxPhaseForIndication]

IndicationIndications.name = "indications"
IndicationIndications.data_type = OpenTargetsDatasetFieldType.ARRAY
IndicationIndications.dataset = Indication
IndicationIndications.path = [IndicationIndications]
IndicationIndications.f_disease = IndicationIndicationsDisease
IndicationIndications.f_efo_name = IndicationIndicationsEfoName
IndicationIndications.f_references = IndicationIndicationsReferences
IndicationIndications.f_max_phase_for_indication = IndicationIndicationsMaxPhaseForIndication

IndicationApprovedIndications.name = "approvedIndications"
IndicationApprovedIndications.data_type = OpenTargetsDatasetFieldType.ARRAY
IndicationApprovedIndications.dataset = Indication
IndicationApprovedIndications.path = [IndicationApprovedIndications]

IndicationIndicationCount.name = "indicationCount"
IndicationIndicationCount.data_type = OpenTargetsDatasetFieldType.INTEGER
IndicationIndicationCount.dataset = Indication
IndicationIndicationCount.path = [IndicationIndicationCount]

Indication.id = "indication"
Indication.f_id = IndicationId
Indication.f_indications = IndicationIndications
Indication.f_approved_indications = IndicationApprovedIndications
Indication.f_indication_count = IndicationIndicationCount
InteractionSourceDatabase.name = "sourceDatabase"
InteractionSourceDatabase.data_type = OpenTargetsDatasetFieldType.STRING
InteractionSourceDatabase.dataset = Interaction
InteractionSourceDatabase.path = [InteractionSourceDatabase]

InteractionTargetA.name = "targetA"
InteractionTargetA.data_type = OpenTargetsDatasetFieldType.STRING
InteractionTargetA.dataset = Interaction
InteractionTargetA.path = [InteractionTargetA]

InteractionIntA.name = "intA"
InteractionIntA.data_type = OpenTargetsDatasetFieldType.STRING
InteractionIntA.dataset = Interaction
InteractionIntA.path = [InteractionIntA]

InteractionIntABiologicalRole.name = "intABiologicalRole"
InteractionIntABiologicalRole.data_type = OpenTargetsDatasetFieldType.STRING
InteractionIntABiologicalRole.dataset = Interaction
InteractionIntABiologicalRole.path = [InteractionIntABiologicalRole]

InteractionTargetB.name = "targetB"
InteractionTargetB.data_type = OpenTargetsDatasetFieldType.STRING
InteractionTargetB.dataset = Interaction
InteractionTargetB.path = [InteractionTargetB]

InteractionIntB.name = "intB"
InteractionIntB.data_type = OpenTargetsDatasetFieldType.STRING
InteractionIntB.dataset = Interaction
InteractionIntB.path = [InteractionIntB]

InteractionIntBBiologicalRole.name = "intBBiologicalRole"
InteractionIntBBiologicalRole.data_type = OpenTargetsDatasetFieldType.STRING
InteractionIntBBiologicalRole.dataset = Interaction
InteractionIntBBiologicalRole.path = [InteractionIntBBiologicalRole]

InteractionSpeciesAMnemonic.name = "mnemonic"
InteractionSpeciesAMnemonic.data_type = OpenTargetsDatasetFieldType.STRING
InteractionSpeciesAMnemonic.dataset = Interaction
InteractionSpeciesAMnemonic.path = [InteractionSpeciesA, InteractionSpeciesAMnemonic]

InteractionSpeciesAScientificName.name = "scientific_name"
InteractionSpeciesAScientificName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionSpeciesAScientificName.dataset = Interaction
InteractionSpeciesAScientificName.path = [InteractionSpeciesA, InteractionSpeciesAScientificName]

InteractionSpeciesATaxonId.name = "taxon_id"
InteractionSpeciesATaxonId.data_type = OpenTargetsDatasetFieldType.LONG
InteractionSpeciesATaxonId.dataset = Interaction
InteractionSpeciesATaxonId.path = [InteractionSpeciesA, InteractionSpeciesATaxonId]

InteractionSpeciesA.name = "speciesA"
InteractionSpeciesA.data_type = OpenTargetsDatasetFieldType.STRUCT
InteractionSpeciesA.dataset = Interaction
InteractionSpeciesA.path = [InteractionSpeciesA]
InteractionSpeciesA.f_mnemonic = InteractionSpeciesAMnemonic
InteractionSpeciesA.f_scientific_name = InteractionSpeciesAScientificName
InteractionSpeciesA.f_taxon_id = InteractionSpeciesATaxonId

InteractionSpeciesBMnemonic.name = "mnemonic"
InteractionSpeciesBMnemonic.data_type = OpenTargetsDatasetFieldType.STRING
InteractionSpeciesBMnemonic.dataset = Interaction
InteractionSpeciesBMnemonic.path = [InteractionSpeciesB, InteractionSpeciesBMnemonic]

InteractionSpeciesBScientificName.name = "scientific_name"
InteractionSpeciesBScientificName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionSpeciesBScientificName.dataset = Interaction
InteractionSpeciesBScientificName.path = [InteractionSpeciesB, InteractionSpeciesBScientificName]

InteractionSpeciesBTaxonId.name = "taxon_id"
InteractionSpeciesBTaxonId.data_type = OpenTargetsDatasetFieldType.LONG
InteractionSpeciesBTaxonId.dataset = Interaction
InteractionSpeciesBTaxonId.path = [InteractionSpeciesB, InteractionSpeciesBTaxonId]

InteractionSpeciesB.name = "speciesB"
InteractionSpeciesB.data_type = OpenTargetsDatasetFieldType.STRUCT
InteractionSpeciesB.dataset = Interaction
InteractionSpeciesB.path = [InteractionSpeciesB]
InteractionSpeciesB.f_mnemonic = InteractionSpeciesBMnemonic
InteractionSpeciesB.f_scientific_name = InteractionSpeciesBScientificName
InteractionSpeciesB.f_taxon_id = InteractionSpeciesBTaxonId

InteractionCount.name = "count"
InteractionCount.data_type = OpenTargetsDatasetFieldType.LONG
InteractionCount.dataset = Interaction
InteractionCount.path = [InteractionCount]

InteractionScoring.name = "scoring"
InteractionScoring.data_type = OpenTargetsDatasetFieldType.DOUBLE
InteractionScoring.dataset = Interaction
InteractionScoring.path = [InteractionScoring]

Interaction.id = "interaction"
Interaction.f_source_database = InteractionSourceDatabase
Interaction.f_target_a = InteractionTargetA
Interaction.f_int_a = InteractionIntA
Interaction.f_int_a_biological_role = InteractionIntABiologicalRole
Interaction.f_target_b = InteractionTargetB
Interaction.f_int_b = InteractionIntB
Interaction.f_int_b_biological_role = InteractionIntBBiologicalRole
Interaction.f_species_a = InteractionSpeciesA
Interaction.f_species_b = InteractionSpeciesB
Interaction.f_count = InteractionCount
Interaction.f_scoring = InteractionScoring
InteractionEvidenceInteractionTypeMiIdentifier.name = "interactionTypeMiIdentifier"
InteractionEvidenceInteractionTypeMiIdentifier.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceInteractionTypeMiIdentifier.dataset = InteractionEvidence
InteractionEvidenceInteractionTypeMiIdentifier.path = [InteractionEvidenceInteractionTypeMiIdentifier]

InteractionEvidenceTargetB.name = "targetB"
InteractionEvidenceTargetB.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceTargetB.dataset = InteractionEvidence
InteractionEvidenceTargetB.path = [InteractionEvidenceTargetB]

InteractionEvidenceEvidenceScore.name = "evidenceScore"
InteractionEvidenceEvidenceScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
InteractionEvidenceEvidenceScore.dataset = InteractionEvidence
InteractionEvidenceEvidenceScore.path = [InteractionEvidenceEvidenceScore]

InteractionEvidenceParticipantDetectionMethodAMiIdentifier.name = "miIdentifier"
InteractionEvidenceParticipantDetectionMethodAMiIdentifier.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceParticipantDetectionMethodAMiIdentifier.dataset = InteractionEvidence
InteractionEvidenceParticipantDetectionMethodAMiIdentifier.path = [
    InteractionEvidenceParticipantDetectionMethodA,
    InteractionEvidenceParticipantDetectionMethodAMiIdentifier,
]

InteractionEvidenceParticipantDetectionMethodAShortName.name = "shortName"
InteractionEvidenceParticipantDetectionMethodAShortName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceParticipantDetectionMethodAShortName.dataset = InteractionEvidence
InteractionEvidenceParticipantDetectionMethodAShortName.path = [
    InteractionEvidenceParticipantDetectionMethodA,
    InteractionEvidenceParticipantDetectionMethodAShortName,
]

InteractionEvidenceParticipantDetectionMethodA.name = "participantDetectionMethodA"
InteractionEvidenceParticipantDetectionMethodA.data_type = OpenTargetsDatasetFieldType.ARRAY
InteractionEvidenceParticipantDetectionMethodA.dataset = InteractionEvidence
InteractionEvidenceParticipantDetectionMethodA.path = [InteractionEvidenceParticipantDetectionMethodA]
InteractionEvidenceParticipantDetectionMethodA.f_mi_identifier = (
    InteractionEvidenceParticipantDetectionMethodAMiIdentifier
)
InteractionEvidenceParticipantDetectionMethodA.f_short_name = InteractionEvidenceParticipantDetectionMethodAShortName

InteractionEvidenceIntBBiologicalRole.name = "intBBiologicalRole"
InteractionEvidenceIntBBiologicalRole.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceIntBBiologicalRole.dataset = InteractionEvidence
InteractionEvidenceIntBBiologicalRole.path = [InteractionEvidenceIntBBiologicalRole]

InteractionEvidenceInteractionResourcesDatabaseVersion.name = "databaseVersion"
InteractionEvidenceInteractionResourcesDatabaseVersion.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceInteractionResourcesDatabaseVersion.dataset = InteractionEvidence
InteractionEvidenceInteractionResourcesDatabaseVersion.path = [
    InteractionEvidenceInteractionResources,
    InteractionEvidenceInteractionResourcesDatabaseVersion,
]

InteractionEvidenceInteractionResourcesSourceDatabase.name = "sourceDatabase"
InteractionEvidenceInteractionResourcesSourceDatabase.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceInteractionResourcesSourceDatabase.dataset = InteractionEvidence
InteractionEvidenceInteractionResourcesSourceDatabase.path = [
    InteractionEvidenceInteractionResources,
    InteractionEvidenceInteractionResourcesSourceDatabase,
]

InteractionEvidenceInteractionResources.name = "interactionResources"
InteractionEvidenceInteractionResources.data_type = OpenTargetsDatasetFieldType.STRUCT
InteractionEvidenceInteractionResources.dataset = InteractionEvidence
InteractionEvidenceInteractionResources.path = [InteractionEvidenceInteractionResources]
InteractionEvidenceInteractionResources.f_database_version = InteractionEvidenceInteractionResourcesDatabaseVersion
InteractionEvidenceInteractionResources.f_source_database = InteractionEvidenceInteractionResourcesSourceDatabase

InteractionEvidenceInteractionTypeShortName.name = "interactionTypeShortName"
InteractionEvidenceInteractionTypeShortName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceInteractionTypeShortName.dataset = InteractionEvidence
InteractionEvidenceInteractionTypeShortName.path = [InteractionEvidenceInteractionTypeShortName]

InteractionEvidenceInteractionDetectionMethodShortName.name = "interactionDetectionMethodShortName"
InteractionEvidenceInteractionDetectionMethodShortName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceInteractionDetectionMethodShortName.dataset = InteractionEvidence
InteractionEvidenceInteractionDetectionMethodShortName.path = [InteractionEvidenceInteractionDetectionMethodShortName]

InteractionEvidenceIntA.name = "intA"
InteractionEvidenceIntA.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceIntA.dataset = InteractionEvidence
InteractionEvidenceIntA.path = [InteractionEvidenceIntA]

InteractionEvidenceIntBSource.name = "intBSource"
InteractionEvidenceIntBSource.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceIntBSource.dataset = InteractionEvidence
InteractionEvidenceIntBSource.path = [InteractionEvidenceIntBSource]

InteractionEvidenceSpeciesBMnemonic.name = "mnemonic"
InteractionEvidenceSpeciesBMnemonic.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceSpeciesBMnemonic.dataset = InteractionEvidence
InteractionEvidenceSpeciesBMnemonic.path = [InteractionEvidenceSpeciesB, InteractionEvidenceSpeciesBMnemonic]

InteractionEvidenceSpeciesBScientificName.name = "scientificName"
InteractionEvidenceSpeciesBScientificName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceSpeciesBScientificName.dataset = InteractionEvidence
InteractionEvidenceSpeciesBScientificName.path = [
    InteractionEvidenceSpeciesB,
    InteractionEvidenceSpeciesBScientificName,
]

InteractionEvidenceSpeciesBTaxonId.name = "taxonId"
InteractionEvidenceSpeciesBTaxonId.data_type = OpenTargetsDatasetFieldType.LONG
InteractionEvidenceSpeciesBTaxonId.dataset = InteractionEvidence
InteractionEvidenceSpeciesBTaxonId.path = [InteractionEvidenceSpeciesB, InteractionEvidenceSpeciesBTaxonId]

InteractionEvidenceSpeciesB.name = "speciesB"
InteractionEvidenceSpeciesB.data_type = OpenTargetsDatasetFieldType.STRUCT
InteractionEvidenceSpeciesB.dataset = InteractionEvidence
InteractionEvidenceSpeciesB.path = [InteractionEvidenceSpeciesB]
InteractionEvidenceSpeciesB.f_mnemonic = InteractionEvidenceSpeciesBMnemonic
InteractionEvidenceSpeciesB.f_scientific_name = InteractionEvidenceSpeciesBScientificName
InteractionEvidenceSpeciesB.f_taxon_id = InteractionEvidenceSpeciesBTaxonId

InteractionEvidenceInteractionIdentifier.name = "interactionIdentifier"
InteractionEvidenceInteractionIdentifier.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceInteractionIdentifier.dataset = InteractionEvidence
InteractionEvidenceInteractionIdentifier.path = [InteractionEvidenceInteractionIdentifier]

InteractionEvidenceHostOrganismTaxId.name = "hostOrganismTaxId"
InteractionEvidenceHostOrganismTaxId.data_type = OpenTargetsDatasetFieldType.LONG
InteractionEvidenceHostOrganismTaxId.dataset = InteractionEvidence
InteractionEvidenceHostOrganismTaxId.path = [InteractionEvidenceHostOrganismTaxId]

InteractionEvidenceExpansionMethodShortName.name = "expansionMethodShortName"
InteractionEvidenceExpansionMethodShortName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceExpansionMethodShortName.dataset = InteractionEvidence
InteractionEvidenceExpansionMethodShortName.path = [InteractionEvidenceExpansionMethodShortName]

InteractionEvidenceSpeciesAMnemonic.name = "mnemonic"
InteractionEvidenceSpeciesAMnemonic.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceSpeciesAMnemonic.dataset = InteractionEvidence
InteractionEvidenceSpeciesAMnemonic.path = [InteractionEvidenceSpeciesA, InteractionEvidenceSpeciesAMnemonic]

InteractionEvidenceSpeciesAScientificName.name = "scientificName"
InteractionEvidenceSpeciesAScientificName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceSpeciesAScientificName.dataset = InteractionEvidence
InteractionEvidenceSpeciesAScientificName.path = [
    InteractionEvidenceSpeciesA,
    InteractionEvidenceSpeciesAScientificName,
]

InteractionEvidenceSpeciesATaxonId.name = "taxonId"
InteractionEvidenceSpeciesATaxonId.data_type = OpenTargetsDatasetFieldType.LONG
InteractionEvidenceSpeciesATaxonId.dataset = InteractionEvidence
InteractionEvidenceSpeciesATaxonId.path = [InteractionEvidenceSpeciesA, InteractionEvidenceSpeciesATaxonId]

InteractionEvidenceSpeciesA.name = "speciesA"
InteractionEvidenceSpeciesA.data_type = OpenTargetsDatasetFieldType.STRUCT
InteractionEvidenceSpeciesA.dataset = InteractionEvidence
InteractionEvidenceSpeciesA.path = [InteractionEvidenceSpeciesA]
InteractionEvidenceSpeciesA.f_mnemonic = InteractionEvidenceSpeciesAMnemonic
InteractionEvidenceSpeciesA.f_scientific_name = InteractionEvidenceSpeciesAScientificName
InteractionEvidenceSpeciesA.f_taxon_id = InteractionEvidenceSpeciesATaxonId

InteractionEvidenceIntASource.name = "intASource"
InteractionEvidenceIntASource.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceIntASource.dataset = InteractionEvidence
InteractionEvidenceIntASource.path = [InteractionEvidenceIntASource]

InteractionEvidenceIntB.name = "intB"
InteractionEvidenceIntB.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceIntB.dataset = InteractionEvidence
InteractionEvidenceIntB.path = [InteractionEvidenceIntB]

InteractionEvidencePubmedId.name = "pubmedId"
InteractionEvidencePubmedId.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidencePubmedId.dataset = InteractionEvidence
InteractionEvidencePubmedId.path = [InteractionEvidencePubmedId]

InteractionEvidenceIntABiologicalRole.name = "intABiologicalRole"
InteractionEvidenceIntABiologicalRole.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceIntABiologicalRole.dataset = InteractionEvidence
InteractionEvidenceIntABiologicalRole.path = [InteractionEvidenceIntABiologicalRole]

InteractionEvidenceExpansionMethodMiIdentifier.name = "expansionMethodMiIdentifier"
InteractionEvidenceExpansionMethodMiIdentifier.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceExpansionMethodMiIdentifier.dataset = InteractionEvidence
InteractionEvidenceExpansionMethodMiIdentifier.path = [InteractionEvidenceExpansionMethodMiIdentifier]

InteractionEvidenceInteractionScore.name = "interactionScore"
InteractionEvidenceInteractionScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
InteractionEvidenceInteractionScore.dataset = InteractionEvidence
InteractionEvidenceInteractionScore.path = [InteractionEvidenceInteractionScore]

InteractionEvidenceParticipantDetectionMethodBMiIdentifier.name = "miIdentifier"
InteractionEvidenceParticipantDetectionMethodBMiIdentifier.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceParticipantDetectionMethodBMiIdentifier.dataset = InteractionEvidence
InteractionEvidenceParticipantDetectionMethodBMiIdentifier.path = [
    InteractionEvidenceParticipantDetectionMethodB,
    InteractionEvidenceParticipantDetectionMethodBMiIdentifier,
]

InteractionEvidenceParticipantDetectionMethodBShortName.name = "shortName"
InteractionEvidenceParticipantDetectionMethodBShortName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceParticipantDetectionMethodBShortName.dataset = InteractionEvidence
InteractionEvidenceParticipantDetectionMethodBShortName.path = [
    InteractionEvidenceParticipantDetectionMethodB,
    InteractionEvidenceParticipantDetectionMethodBShortName,
]

InteractionEvidenceParticipantDetectionMethodB.name = "participantDetectionMethodB"
InteractionEvidenceParticipantDetectionMethodB.data_type = OpenTargetsDatasetFieldType.ARRAY
InteractionEvidenceParticipantDetectionMethodB.dataset = InteractionEvidence
InteractionEvidenceParticipantDetectionMethodB.path = [InteractionEvidenceParticipantDetectionMethodB]
InteractionEvidenceParticipantDetectionMethodB.f_mi_identifier = (
    InteractionEvidenceParticipantDetectionMethodBMiIdentifier
)
InteractionEvidenceParticipantDetectionMethodB.f_short_name = InteractionEvidenceParticipantDetectionMethodBShortName

InteractionEvidenceHostOrganismScientificName.name = "hostOrganismScientificName"
InteractionEvidenceHostOrganismScientificName.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceHostOrganismScientificName.dataset = InteractionEvidence
InteractionEvidenceHostOrganismScientificName.path = [InteractionEvidenceHostOrganismScientificName]

InteractionEvidenceTargetA.name = "targetA"
InteractionEvidenceTargetA.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceTargetA.dataset = InteractionEvidence
InteractionEvidenceTargetA.path = [InteractionEvidenceTargetA]

InteractionEvidenceInteractionDetectionMethodMiIdentifier.name = "interactionDetectionMethodMiIdentifier"
InteractionEvidenceInteractionDetectionMethodMiIdentifier.data_type = OpenTargetsDatasetFieldType.STRING
InteractionEvidenceInteractionDetectionMethodMiIdentifier.dataset = InteractionEvidence
InteractionEvidenceInteractionDetectionMethodMiIdentifier.path = [
    InteractionEvidenceInteractionDetectionMethodMiIdentifier
]

InteractionEvidence.id = "interactionEvidence"
InteractionEvidence.f_interaction_type_mi_identifier = InteractionEvidenceInteractionTypeMiIdentifier
InteractionEvidence.f_target_b = InteractionEvidenceTargetB
InteractionEvidence.f_evidence_score = InteractionEvidenceEvidenceScore
InteractionEvidence.f_participant_detection_method_a = InteractionEvidenceParticipantDetectionMethodA
InteractionEvidence.f_int_b_biological_role = InteractionEvidenceIntBBiologicalRole
InteractionEvidence.f_interaction_resources = InteractionEvidenceInteractionResources
InteractionEvidence.f_interaction_type_short_name = InteractionEvidenceInteractionTypeShortName
InteractionEvidence.f_interaction_detection_method_short_name = InteractionEvidenceInteractionDetectionMethodShortName
InteractionEvidence.f_int_a = InteractionEvidenceIntA
InteractionEvidence.f_int_b_source = InteractionEvidenceIntBSource
InteractionEvidence.f_species_b = InteractionEvidenceSpeciesB
InteractionEvidence.f_interaction_identifier = InteractionEvidenceInteractionIdentifier
InteractionEvidence.f_host_organism_tax_id = InteractionEvidenceHostOrganismTaxId
InteractionEvidence.f_expansion_method_short_name = InteractionEvidenceExpansionMethodShortName
InteractionEvidence.f_species_a = InteractionEvidenceSpeciesA
InteractionEvidence.f_int_a_source = InteractionEvidenceIntASource
InteractionEvidence.f_int_b = InteractionEvidenceIntB
InteractionEvidence.f_pubmed_id = InteractionEvidencePubmedId
InteractionEvidence.f_int_a_biological_role = InteractionEvidenceIntABiologicalRole
InteractionEvidence.f_expansion_method_mi_identifier = InteractionEvidenceExpansionMethodMiIdentifier
InteractionEvidence.f_interaction_score = InteractionEvidenceInteractionScore
InteractionEvidence.f_participant_detection_method_b = InteractionEvidenceParticipantDetectionMethodB
InteractionEvidence.f_host_organism_scientific_name = InteractionEvidenceHostOrganismScientificName
InteractionEvidence.f_target_a = InteractionEvidenceTargetA
InteractionEvidence.f_interaction_detection_method_mi_identifier = (
    InteractionEvidenceInteractionDetectionMethodMiIdentifier
)
KnownDrugsAggregatedDrugId.name = "drugId"
KnownDrugsAggregatedDrugId.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedDrugId.dataset = KnownDrugsAggregated
KnownDrugsAggregatedDrugId.path = [KnownDrugsAggregatedDrugId]

KnownDrugsAggregatedTargetId.name = "targetId"
KnownDrugsAggregatedTargetId.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedTargetId.dataset = KnownDrugsAggregated
KnownDrugsAggregatedTargetId.path = [KnownDrugsAggregatedTargetId]

KnownDrugsAggregatedDiseaseId.name = "diseaseId"
KnownDrugsAggregatedDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedDiseaseId.dataset = KnownDrugsAggregated
KnownDrugsAggregatedDiseaseId.path = [KnownDrugsAggregatedDiseaseId]

KnownDrugsAggregatedPhase.name = "phase"
KnownDrugsAggregatedPhase.data_type = OpenTargetsDatasetFieldType.LONG
KnownDrugsAggregatedPhase.dataset = KnownDrugsAggregated
KnownDrugsAggregatedPhase.path = [KnownDrugsAggregatedPhase]

KnownDrugsAggregatedStatus.name = "status"
KnownDrugsAggregatedStatus.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedStatus.dataset = KnownDrugsAggregated
KnownDrugsAggregatedStatus.path = [KnownDrugsAggregatedStatus]

KnownDrugsAggregatedUrlsNiceName.name = "niceName"
KnownDrugsAggregatedUrlsNiceName.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedUrlsNiceName.dataset = KnownDrugsAggregated
KnownDrugsAggregatedUrlsNiceName.path = [KnownDrugsAggregatedUrls, KnownDrugsAggregatedUrlsNiceName]

KnownDrugsAggregatedUrlsUrl.name = "url"
KnownDrugsAggregatedUrlsUrl.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedUrlsUrl.dataset = KnownDrugsAggregated
KnownDrugsAggregatedUrlsUrl.path = [KnownDrugsAggregatedUrls, KnownDrugsAggregatedUrlsUrl]

KnownDrugsAggregatedUrls.name = "urls"
KnownDrugsAggregatedUrls.data_type = OpenTargetsDatasetFieldType.ARRAY
KnownDrugsAggregatedUrls.dataset = KnownDrugsAggregated
KnownDrugsAggregatedUrls.path = [KnownDrugsAggregatedUrls]
KnownDrugsAggregatedUrls.f_nice_name = KnownDrugsAggregatedUrlsNiceName
KnownDrugsAggregatedUrls.f_url = KnownDrugsAggregatedUrlsUrl

KnownDrugsAggregatedAncestors.name = "ancestors"
KnownDrugsAggregatedAncestors.data_type = OpenTargetsDatasetFieldType.ARRAY
KnownDrugsAggregatedAncestors.dataset = KnownDrugsAggregated
KnownDrugsAggregatedAncestors.path = [KnownDrugsAggregatedAncestors]

KnownDrugsAggregatedLabel.name = "label"
KnownDrugsAggregatedLabel.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedLabel.dataset = KnownDrugsAggregated
KnownDrugsAggregatedLabel.path = [KnownDrugsAggregatedLabel]

KnownDrugsAggregatedApprovedSymbol.name = "approvedSymbol"
KnownDrugsAggregatedApprovedSymbol.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedApprovedSymbol.dataset = KnownDrugsAggregated
KnownDrugsAggregatedApprovedSymbol.path = [KnownDrugsAggregatedApprovedSymbol]

KnownDrugsAggregatedApprovedName.name = "approvedName"
KnownDrugsAggregatedApprovedName.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedApprovedName.dataset = KnownDrugsAggregated
KnownDrugsAggregatedApprovedName.path = [KnownDrugsAggregatedApprovedName]

KnownDrugsAggregatedTargetClass.name = "targetClass"
KnownDrugsAggregatedTargetClass.data_type = OpenTargetsDatasetFieldType.ARRAY
KnownDrugsAggregatedTargetClass.dataset = KnownDrugsAggregated
KnownDrugsAggregatedTargetClass.path = [KnownDrugsAggregatedTargetClass]

KnownDrugsAggregatedPrefName.name = "prefName"
KnownDrugsAggregatedPrefName.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedPrefName.dataset = KnownDrugsAggregated
KnownDrugsAggregatedPrefName.path = [KnownDrugsAggregatedPrefName]

KnownDrugsAggregatedTradeNames.name = "tradeNames"
KnownDrugsAggregatedTradeNames.data_type = OpenTargetsDatasetFieldType.ARRAY
KnownDrugsAggregatedTradeNames.dataset = KnownDrugsAggregated
KnownDrugsAggregatedTradeNames.path = [KnownDrugsAggregatedTradeNames]

KnownDrugsAggregatedSynonyms.name = "synonyms"
KnownDrugsAggregatedSynonyms.data_type = OpenTargetsDatasetFieldType.ARRAY
KnownDrugsAggregatedSynonyms.dataset = KnownDrugsAggregated
KnownDrugsAggregatedSynonyms.path = [KnownDrugsAggregatedSynonyms]

KnownDrugsAggregatedDrugType.name = "drugType"
KnownDrugsAggregatedDrugType.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedDrugType.dataset = KnownDrugsAggregated
KnownDrugsAggregatedDrugType.path = [KnownDrugsAggregatedDrugType]

KnownDrugsAggregatedMechanismOfAction.name = "mechanismOfAction"
KnownDrugsAggregatedMechanismOfAction.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedMechanismOfAction.dataset = KnownDrugsAggregated
KnownDrugsAggregatedMechanismOfAction.path = [KnownDrugsAggregatedMechanismOfAction]

KnownDrugsAggregatedTargetName.name = "targetName"
KnownDrugsAggregatedTargetName.data_type = OpenTargetsDatasetFieldType.STRING
KnownDrugsAggregatedTargetName.dataset = KnownDrugsAggregated
KnownDrugsAggregatedTargetName.path = [KnownDrugsAggregatedTargetName]

KnownDrugsAggregated.id = "knownDrugsAggregated"
KnownDrugsAggregated.f_drug_id = KnownDrugsAggregatedDrugId
KnownDrugsAggregated.f_target_id = KnownDrugsAggregatedTargetId
KnownDrugsAggregated.f_disease_id = KnownDrugsAggregatedDiseaseId
KnownDrugsAggregated.f_phase = KnownDrugsAggregatedPhase
KnownDrugsAggregated.f_status = KnownDrugsAggregatedStatus
KnownDrugsAggregated.f_urls = KnownDrugsAggregatedUrls
KnownDrugsAggregated.f_ancestors = KnownDrugsAggregatedAncestors
KnownDrugsAggregated.f_label = KnownDrugsAggregatedLabel
KnownDrugsAggregated.f_approved_symbol = KnownDrugsAggregatedApprovedSymbol
KnownDrugsAggregated.f_approved_name = KnownDrugsAggregatedApprovedName
KnownDrugsAggregated.f_target_class = KnownDrugsAggregatedTargetClass
KnownDrugsAggregated.f_pref_name = KnownDrugsAggregatedPrefName
KnownDrugsAggregated.f_trade_names = KnownDrugsAggregatedTradeNames
KnownDrugsAggregated.f_synonyms = KnownDrugsAggregatedSynonyms
KnownDrugsAggregated.f_drug_type = KnownDrugsAggregatedDrugType
KnownDrugsAggregated.f_mechanism_of_action = KnownDrugsAggregatedMechanismOfAction
KnownDrugsAggregated.f_target_name = KnownDrugsAggregatedTargetName
MechanismOfActionActionType.name = "actionType"
MechanismOfActionActionType.data_type = OpenTargetsDatasetFieldType.STRING
MechanismOfActionActionType.dataset = MechanismOfAction
MechanismOfActionActionType.path = [MechanismOfActionActionType]

MechanismOfActionMechanismOfAction.name = "mechanismOfAction"
MechanismOfActionMechanismOfAction.data_type = OpenTargetsDatasetFieldType.STRING
MechanismOfActionMechanismOfAction.dataset = MechanismOfAction
MechanismOfActionMechanismOfAction.path = [MechanismOfActionMechanismOfAction]

MechanismOfActionChemblIds.name = "chemblIds"
MechanismOfActionChemblIds.data_type = OpenTargetsDatasetFieldType.ARRAY
MechanismOfActionChemblIds.dataset = MechanismOfAction
MechanismOfActionChemblIds.path = [MechanismOfActionChemblIds]

MechanismOfActionTargetName.name = "targetName"
MechanismOfActionTargetName.data_type = OpenTargetsDatasetFieldType.STRING
MechanismOfActionTargetName.dataset = MechanismOfAction
MechanismOfActionTargetName.path = [MechanismOfActionTargetName]

MechanismOfActionTargetType.name = "targetType"
MechanismOfActionTargetType.data_type = OpenTargetsDatasetFieldType.STRING
MechanismOfActionTargetType.dataset = MechanismOfAction
MechanismOfActionTargetType.path = [MechanismOfActionTargetType]

MechanismOfActionTargets.name = "targets"
MechanismOfActionTargets.data_type = OpenTargetsDatasetFieldType.ARRAY
MechanismOfActionTargets.dataset = MechanismOfAction
MechanismOfActionTargets.path = [MechanismOfActionTargets]

MechanismOfActionReferencesSource.name = "source"
MechanismOfActionReferencesSource.data_type = OpenTargetsDatasetFieldType.STRING
MechanismOfActionReferencesSource.dataset = MechanismOfAction
MechanismOfActionReferencesSource.path = [MechanismOfActionReferences, MechanismOfActionReferencesSource]

MechanismOfActionReferencesIds.name = "ids"
MechanismOfActionReferencesIds.data_type = OpenTargetsDatasetFieldType.ARRAY
MechanismOfActionReferencesIds.dataset = MechanismOfAction
MechanismOfActionReferencesIds.path = [MechanismOfActionReferences, MechanismOfActionReferencesIds]

MechanismOfActionReferencesUrls.name = "urls"
MechanismOfActionReferencesUrls.data_type = OpenTargetsDatasetFieldType.ARRAY
MechanismOfActionReferencesUrls.dataset = MechanismOfAction
MechanismOfActionReferencesUrls.path = [MechanismOfActionReferences, MechanismOfActionReferencesUrls]

MechanismOfActionReferences.name = "references"
MechanismOfActionReferences.data_type = OpenTargetsDatasetFieldType.ARRAY
MechanismOfActionReferences.dataset = MechanismOfAction
MechanismOfActionReferences.path = [MechanismOfActionReferences]
MechanismOfActionReferences.f_source = MechanismOfActionReferencesSource
MechanismOfActionReferences.f_ids = MechanismOfActionReferencesIds
MechanismOfActionReferences.f_urls = MechanismOfActionReferencesUrls

MechanismOfAction.id = "mechanismOfAction"
MechanismOfAction.f_action_type = MechanismOfActionActionType
MechanismOfAction.f_mechanism_of_action = MechanismOfActionMechanismOfAction
MechanismOfAction.f_chembl_ids = MechanismOfActionChemblIds
MechanismOfAction.f_target_name = MechanismOfActionTargetName
MechanismOfAction.f_target_type = MechanismOfActionTargetType
MechanismOfAction.f_targets = MechanismOfActionTargets
MechanismOfAction.f_references = MechanismOfActionReferences
MoleculeId.name = "id"
MoleculeId.data_type = OpenTargetsDatasetFieldType.STRING
MoleculeId.dataset = Molecule
MoleculeId.path = [MoleculeId]

MoleculeCanonicalSmiles.name = "canonicalSmiles"
MoleculeCanonicalSmiles.data_type = OpenTargetsDatasetFieldType.STRING
MoleculeCanonicalSmiles.dataset = Molecule
MoleculeCanonicalSmiles.path = [MoleculeCanonicalSmiles]

MoleculeInchiKey.name = "inchiKey"
MoleculeInchiKey.data_type = OpenTargetsDatasetFieldType.STRING
MoleculeInchiKey.dataset = Molecule
MoleculeInchiKey.path = [MoleculeInchiKey]

MoleculeDrugType.name = "drugType"
MoleculeDrugType.data_type = OpenTargetsDatasetFieldType.STRING
MoleculeDrugType.dataset = Molecule
MoleculeDrugType.path = [MoleculeDrugType]

MoleculeBlackBoxWarning.name = "blackBoxWarning"
MoleculeBlackBoxWarning.data_type = OpenTargetsDatasetFieldType.BOOLEAN
MoleculeBlackBoxWarning.dataset = Molecule
MoleculeBlackBoxWarning.path = [MoleculeBlackBoxWarning]

MoleculeName.name = "name"
MoleculeName.data_type = OpenTargetsDatasetFieldType.STRING
MoleculeName.dataset = Molecule
MoleculeName.path = [MoleculeName]

MoleculeYearOfFirstApproval.name = "yearOfFirstApproval"
MoleculeYearOfFirstApproval.data_type = OpenTargetsDatasetFieldType.LONG
MoleculeYearOfFirstApproval.dataset = Molecule
MoleculeYearOfFirstApproval.path = [MoleculeYearOfFirstApproval]

MoleculeMaximumClinicalTrialPhase.name = "maximumClinicalTrialPhase"
MoleculeMaximumClinicalTrialPhase.data_type = OpenTargetsDatasetFieldType.LONG
MoleculeMaximumClinicalTrialPhase.dataset = Molecule
MoleculeMaximumClinicalTrialPhase.path = [MoleculeMaximumClinicalTrialPhase]

MoleculeParentId.name = "parentId"
MoleculeParentId.data_type = OpenTargetsDatasetFieldType.STRING
MoleculeParentId.dataset = Molecule
MoleculeParentId.path = [MoleculeParentId]

MoleculeHasBeenWithdrawn.name = "hasBeenWithdrawn"
MoleculeHasBeenWithdrawn.data_type = OpenTargetsDatasetFieldType.BOOLEAN
MoleculeHasBeenWithdrawn.dataset = Molecule
MoleculeHasBeenWithdrawn.path = [MoleculeHasBeenWithdrawn]

MoleculeIsApproved.name = "isApproved"
MoleculeIsApproved.data_type = OpenTargetsDatasetFieldType.BOOLEAN
MoleculeIsApproved.dataset = Molecule
MoleculeIsApproved.path = [MoleculeIsApproved]

MoleculeWithdrawnNoticeCountries.name = "countries"
MoleculeWithdrawnNoticeCountries.data_type = OpenTargetsDatasetFieldType.ARRAY
MoleculeWithdrawnNoticeCountries.dataset = Molecule
MoleculeWithdrawnNoticeCountries.path = [MoleculeWithdrawnNotice, MoleculeWithdrawnNoticeCountries]

MoleculeWithdrawnNoticeClasses.name = "classes"
MoleculeWithdrawnNoticeClasses.data_type = OpenTargetsDatasetFieldType.ARRAY
MoleculeWithdrawnNoticeClasses.dataset = Molecule
MoleculeWithdrawnNoticeClasses.path = [MoleculeWithdrawnNotice, MoleculeWithdrawnNoticeClasses]

MoleculeWithdrawnNoticeYear.name = "year"
MoleculeWithdrawnNoticeYear.data_type = OpenTargetsDatasetFieldType.LONG
MoleculeWithdrawnNoticeYear.dataset = Molecule
MoleculeWithdrawnNoticeYear.path = [MoleculeWithdrawnNotice, MoleculeWithdrawnNoticeYear]

MoleculeWithdrawnNotice.name = "withdrawnNotice"
MoleculeWithdrawnNotice.data_type = OpenTargetsDatasetFieldType.STRUCT
MoleculeWithdrawnNotice.dataset = Molecule
MoleculeWithdrawnNotice.path = [MoleculeWithdrawnNotice]
MoleculeWithdrawnNotice.f_countries = MoleculeWithdrawnNoticeCountries
MoleculeWithdrawnNotice.f_classes = MoleculeWithdrawnNoticeClasses
MoleculeWithdrawnNotice.f_year = MoleculeWithdrawnNoticeYear

MoleculeTradeNames.name = "tradeNames"
MoleculeTradeNames.data_type = OpenTargetsDatasetFieldType.ARRAY
MoleculeTradeNames.dataset = Molecule
MoleculeTradeNames.path = [MoleculeTradeNames]

MoleculeSynonyms.name = "synonyms"
MoleculeSynonyms.data_type = OpenTargetsDatasetFieldType.ARRAY
MoleculeSynonyms.dataset = Molecule
MoleculeSynonyms.path = [MoleculeSynonyms]

MoleculeCrossReferences.name = "crossReferences"
MoleculeCrossReferences.data_type = OpenTargetsDatasetFieldType.MAP
MoleculeCrossReferences.dataset = Molecule
MoleculeCrossReferences.path = [MoleculeCrossReferences]

MoleculeChildChemblIds.name = "childChemblIds"
MoleculeChildChemblIds.data_type = OpenTargetsDatasetFieldType.ARRAY
MoleculeChildChemblIds.dataset = Molecule
MoleculeChildChemblIds.path = [MoleculeChildChemblIds]

MoleculeLinkedDiseasesRows.name = "rows"
MoleculeLinkedDiseasesRows.data_type = OpenTargetsDatasetFieldType.ARRAY
MoleculeLinkedDiseasesRows.dataset = Molecule
MoleculeLinkedDiseasesRows.path = [MoleculeLinkedDiseases, MoleculeLinkedDiseasesRows]

MoleculeLinkedDiseasesCount.name = "count"
MoleculeLinkedDiseasesCount.data_type = OpenTargetsDatasetFieldType.INTEGER
MoleculeLinkedDiseasesCount.dataset = Molecule
MoleculeLinkedDiseasesCount.path = [MoleculeLinkedDiseases, MoleculeLinkedDiseasesCount]

MoleculeLinkedDiseases.name = "linkedDiseases"
MoleculeLinkedDiseases.data_type = OpenTargetsDatasetFieldType.STRUCT
MoleculeLinkedDiseases.dataset = Molecule
MoleculeLinkedDiseases.path = [MoleculeLinkedDiseases]
MoleculeLinkedDiseases.f_rows = MoleculeLinkedDiseasesRows
MoleculeLinkedDiseases.f_count = MoleculeLinkedDiseasesCount

MoleculeLinkedTargetsRows.name = "rows"
MoleculeLinkedTargetsRows.data_type = OpenTargetsDatasetFieldType.ARRAY
MoleculeLinkedTargetsRows.dataset = Molecule
MoleculeLinkedTargetsRows.path = [MoleculeLinkedTargets, MoleculeLinkedTargetsRows]

MoleculeLinkedTargetsCount.name = "count"
MoleculeLinkedTargetsCount.data_type = OpenTargetsDatasetFieldType.INTEGER
MoleculeLinkedTargetsCount.dataset = Molecule
MoleculeLinkedTargetsCount.path = [MoleculeLinkedTargets, MoleculeLinkedTargetsCount]

MoleculeLinkedTargets.name = "linkedTargets"
MoleculeLinkedTargets.data_type = OpenTargetsDatasetFieldType.STRUCT
MoleculeLinkedTargets.dataset = Molecule
MoleculeLinkedTargets.path = [MoleculeLinkedTargets]
MoleculeLinkedTargets.f_rows = MoleculeLinkedTargetsRows
MoleculeLinkedTargets.f_count = MoleculeLinkedTargetsCount

MoleculeDescription.name = "description"
MoleculeDescription.data_type = OpenTargetsDatasetFieldType.STRING
MoleculeDescription.dataset = Molecule
MoleculeDescription.path = [MoleculeDescription]

Molecule.id = "molecule"
Molecule.f_id = MoleculeId
Molecule.f_canonical_smiles = MoleculeCanonicalSmiles
Molecule.f_inchi_key = MoleculeInchiKey
Molecule.f_drug_type = MoleculeDrugType
Molecule.f_black_box_warning = MoleculeBlackBoxWarning
Molecule.f_name = MoleculeName
Molecule.f_year_of_first_approval = MoleculeYearOfFirstApproval
Molecule.f_maximum_clinical_trial_phase = MoleculeMaximumClinicalTrialPhase
Molecule.f_parent_id = MoleculeParentId
Molecule.f_has_been_withdrawn = MoleculeHasBeenWithdrawn
Molecule.f_is_approved = MoleculeIsApproved
Molecule.f_withdrawn_notice = MoleculeWithdrawnNotice
Molecule.f_trade_names = MoleculeTradeNames
Molecule.f_synonyms = MoleculeSynonyms
Molecule.f_cross_references = MoleculeCrossReferences
Molecule.f_child_chembl_ids = MoleculeChildChemblIds
Molecule.f_linked_diseases = MoleculeLinkedDiseases
Molecule.f_linked_targets = MoleculeLinkedTargets
Molecule.f_description = MoleculeDescription
MousePhenotypesBiologicalModelsAllelicComposition.name = "allelicComposition"
MousePhenotypesBiologicalModelsAllelicComposition.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesBiologicalModelsAllelicComposition.dataset = MousePhenotypes
MousePhenotypesBiologicalModelsAllelicComposition.path = [
    MousePhenotypesBiologicalModels,
    MousePhenotypesBiologicalModelsAllelicComposition,
]

MousePhenotypesBiologicalModelsGeneticBackground.name = "geneticBackground"
MousePhenotypesBiologicalModelsGeneticBackground.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesBiologicalModelsGeneticBackground.dataset = MousePhenotypes
MousePhenotypesBiologicalModelsGeneticBackground.path = [
    MousePhenotypesBiologicalModels,
    MousePhenotypesBiologicalModelsGeneticBackground,
]

MousePhenotypesBiologicalModelsId.name = "id"
MousePhenotypesBiologicalModelsId.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesBiologicalModelsId.dataset = MousePhenotypes
MousePhenotypesBiologicalModelsId.path = [MousePhenotypesBiologicalModels, MousePhenotypesBiologicalModelsId]

MousePhenotypesBiologicalModelsLiterature.name = "literature"
MousePhenotypesBiologicalModelsLiterature.data_type = OpenTargetsDatasetFieldType.ARRAY
MousePhenotypesBiologicalModelsLiterature.dataset = MousePhenotypes
MousePhenotypesBiologicalModelsLiterature.path = [
    MousePhenotypesBiologicalModels,
    MousePhenotypesBiologicalModelsLiterature,
]

MousePhenotypesBiologicalModels.name = "biologicalModels"
MousePhenotypesBiologicalModels.data_type = OpenTargetsDatasetFieldType.ARRAY
MousePhenotypesBiologicalModels.dataset = MousePhenotypes
MousePhenotypesBiologicalModels.path = [MousePhenotypesBiologicalModels]
MousePhenotypesBiologicalModels.f_allelic_composition = MousePhenotypesBiologicalModelsAllelicComposition
MousePhenotypesBiologicalModels.f_genetic_background = MousePhenotypesBiologicalModelsGeneticBackground
MousePhenotypesBiologicalModels.f_id = MousePhenotypesBiologicalModelsId
MousePhenotypesBiologicalModels.f_literature = MousePhenotypesBiologicalModelsLiterature

MousePhenotypesModelPhenotypeClassesId.name = "id"
MousePhenotypesModelPhenotypeClassesId.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesModelPhenotypeClassesId.dataset = MousePhenotypes
MousePhenotypesModelPhenotypeClassesId.path = [
    MousePhenotypesModelPhenotypeClasses,
    MousePhenotypesModelPhenotypeClassesId,
]

MousePhenotypesModelPhenotypeClassesLabel.name = "label"
MousePhenotypesModelPhenotypeClassesLabel.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesModelPhenotypeClassesLabel.dataset = MousePhenotypes
MousePhenotypesModelPhenotypeClassesLabel.path = [
    MousePhenotypesModelPhenotypeClasses,
    MousePhenotypesModelPhenotypeClassesLabel,
]

MousePhenotypesModelPhenotypeClasses.name = "modelPhenotypeClasses"
MousePhenotypesModelPhenotypeClasses.data_type = OpenTargetsDatasetFieldType.ARRAY
MousePhenotypesModelPhenotypeClasses.dataset = MousePhenotypes
MousePhenotypesModelPhenotypeClasses.path = [MousePhenotypesModelPhenotypeClasses]
MousePhenotypesModelPhenotypeClasses.f_id = MousePhenotypesModelPhenotypeClassesId
MousePhenotypesModelPhenotypeClasses.f_label = MousePhenotypesModelPhenotypeClassesLabel

MousePhenotypesModelPhenotypeId.name = "modelPhenotypeId"
MousePhenotypesModelPhenotypeId.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesModelPhenotypeId.dataset = MousePhenotypes
MousePhenotypesModelPhenotypeId.path = [MousePhenotypesModelPhenotypeId]

MousePhenotypesModelPhenotypeLabel.name = "modelPhenotypeLabel"
MousePhenotypesModelPhenotypeLabel.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesModelPhenotypeLabel.dataset = MousePhenotypes
MousePhenotypesModelPhenotypeLabel.path = [MousePhenotypesModelPhenotypeLabel]

MousePhenotypesTargetFromSourceId.name = "targetFromSourceId"
MousePhenotypesTargetFromSourceId.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesTargetFromSourceId.dataset = MousePhenotypes
MousePhenotypesTargetFromSourceId.path = [MousePhenotypesTargetFromSourceId]

MousePhenotypesTargetInModel.name = "targetInModel"
MousePhenotypesTargetInModel.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesTargetInModel.dataset = MousePhenotypes
MousePhenotypesTargetInModel.path = [MousePhenotypesTargetInModel]

MousePhenotypesTargetInModelEnsemblId.name = "targetInModelEnsemblId"
MousePhenotypesTargetInModelEnsemblId.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesTargetInModelEnsemblId.dataset = MousePhenotypes
MousePhenotypesTargetInModelEnsemblId.path = [MousePhenotypesTargetInModelEnsemblId]

MousePhenotypesTargetInModelMgiId.name = "targetInModelMgiId"
MousePhenotypesTargetInModelMgiId.data_type = OpenTargetsDatasetFieldType.STRING
MousePhenotypesTargetInModelMgiId.dataset = MousePhenotypes
MousePhenotypesTargetInModelMgiId.path = [MousePhenotypesTargetInModelMgiId]

MousePhenotypes.id = "mousePhenotypes"
MousePhenotypes.f_biological_models = MousePhenotypesBiologicalModels
MousePhenotypes.f_model_phenotype_classes = MousePhenotypesModelPhenotypeClasses
MousePhenotypes.f_model_phenotype_id = MousePhenotypesModelPhenotypeId
MousePhenotypes.f_model_phenotype_label = MousePhenotypesModelPhenotypeLabel
MousePhenotypes.f_target_from_source_id = MousePhenotypesTargetFromSourceId
MousePhenotypes.f_target_in_model = MousePhenotypesTargetInModel
MousePhenotypes.f_target_in_model_ensembl_id = MousePhenotypesTargetInModelEnsemblId
MousePhenotypes.f_target_in_model_mgi_id = MousePhenotypesTargetInModelMgiId
ReactomeId.name = "id"
ReactomeId.data_type = OpenTargetsDatasetFieldType.STRING
ReactomeId.dataset = Reactome
ReactomeId.path = [ReactomeId]

ReactomeLabel.name = "label"
ReactomeLabel.data_type = OpenTargetsDatasetFieldType.STRING
ReactomeLabel.dataset = Reactome
ReactomeLabel.path = [ReactomeLabel]

ReactomeAncestors.name = "ancestors"
ReactomeAncestors.data_type = OpenTargetsDatasetFieldType.ARRAY
ReactomeAncestors.dataset = Reactome
ReactomeAncestors.path = [ReactomeAncestors]

ReactomeDescendants.name = "descendants"
ReactomeDescendants.data_type = OpenTargetsDatasetFieldType.ARRAY
ReactomeDescendants.dataset = Reactome
ReactomeDescendants.path = [ReactomeDescendants]

ReactomeChildren.name = "children"
ReactomeChildren.data_type = OpenTargetsDatasetFieldType.ARRAY
ReactomeChildren.dataset = Reactome
ReactomeChildren.path = [ReactomeChildren]

ReactomeParents.name = "parents"
ReactomeParents.data_type = OpenTargetsDatasetFieldType.ARRAY
ReactomeParents.dataset = Reactome
ReactomeParents.path = [ReactomeParents]

ReactomePath.name = "path"
ReactomePath.data_type = OpenTargetsDatasetFieldType.ARRAY
ReactomePath.dataset = Reactome
ReactomePath.path = [ReactomePath]

Reactome.id = "reactome"
Reactome.f_id = ReactomeId
Reactome.f_label = ReactomeLabel
Reactome.f_ancestors = ReactomeAncestors
Reactome.f_descendants = ReactomeDescendants
Reactome.f_children = ReactomeChildren
Reactome.f_parents = ReactomeParents
Reactome.f_path = ReactomePath
SearchDiseaseId.name = "id"
SearchDiseaseId.data_type = OpenTargetsDatasetFieldType.STRING
SearchDiseaseId.dataset = SearchDisease
SearchDiseaseId.path = [SearchDiseaseId]

SearchDiseaseName.name = "name"
SearchDiseaseName.data_type = OpenTargetsDatasetFieldType.STRING
SearchDiseaseName.dataset = SearchDisease
SearchDiseaseName.path = [SearchDiseaseName]

SearchDiseaseDescription.name = "description"
SearchDiseaseDescription.data_type = OpenTargetsDatasetFieldType.STRING
SearchDiseaseDescription.dataset = SearchDisease
SearchDiseaseDescription.path = [SearchDiseaseDescription]

SearchDiseaseEntity.name = "entity"
SearchDiseaseEntity.data_type = OpenTargetsDatasetFieldType.STRING
SearchDiseaseEntity.dataset = SearchDisease
SearchDiseaseEntity.path = [SearchDiseaseEntity]

SearchDiseaseCategory.name = "category"
SearchDiseaseCategory.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDiseaseCategory.dataset = SearchDisease
SearchDiseaseCategory.path = [SearchDiseaseCategory]

SearchDiseaseKeywords.name = "keywords"
SearchDiseaseKeywords.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDiseaseKeywords.dataset = SearchDisease
SearchDiseaseKeywords.path = [SearchDiseaseKeywords]

SearchDiseasePrefixes.name = "prefixes"
SearchDiseasePrefixes.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDiseasePrefixes.dataset = SearchDisease
SearchDiseasePrefixes.path = [SearchDiseasePrefixes]

SearchDiseaseNgrams.name = "ngrams"
SearchDiseaseNgrams.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDiseaseNgrams.dataset = SearchDisease
SearchDiseaseNgrams.path = [SearchDiseaseNgrams]

SearchDiseaseTerms.name = "terms"
SearchDiseaseTerms.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDiseaseTerms.dataset = SearchDisease
SearchDiseaseTerms.path = [SearchDiseaseTerms]

SearchDiseaseTerms25.name = "terms25"
SearchDiseaseTerms25.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDiseaseTerms25.dataset = SearchDisease
SearchDiseaseTerms25.path = [SearchDiseaseTerms25]

SearchDiseaseTerms5.name = "terms5"
SearchDiseaseTerms5.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDiseaseTerms5.dataset = SearchDisease
SearchDiseaseTerms5.path = [SearchDiseaseTerms5]

SearchDiseaseMultiplier.name = "multiplier"
SearchDiseaseMultiplier.data_type = OpenTargetsDatasetFieldType.DOUBLE
SearchDiseaseMultiplier.dataset = SearchDisease
SearchDiseaseMultiplier.path = [SearchDiseaseMultiplier]

SearchDisease.id = "searchDisease"
SearchDisease.f_id = SearchDiseaseId
SearchDisease.f_name = SearchDiseaseName
SearchDisease.f_description = SearchDiseaseDescription
SearchDisease.f_entity = SearchDiseaseEntity
SearchDisease.f_category = SearchDiseaseCategory
SearchDisease.f_keywords = SearchDiseaseKeywords
SearchDisease.f_prefixes = SearchDiseasePrefixes
SearchDisease.f_ngrams = SearchDiseaseNgrams
SearchDisease.f_terms = SearchDiseaseTerms
SearchDisease.f_terms_25 = SearchDiseaseTerms25
SearchDisease.f_terms_5 = SearchDiseaseTerms5
SearchDisease.f_multiplier = SearchDiseaseMultiplier
SearchDrugId.name = "id"
SearchDrugId.data_type = OpenTargetsDatasetFieldType.STRING
SearchDrugId.dataset = SearchDrug
SearchDrugId.path = [SearchDrugId]

SearchDrugName.name = "name"
SearchDrugName.data_type = OpenTargetsDatasetFieldType.STRING
SearchDrugName.dataset = SearchDrug
SearchDrugName.path = [SearchDrugName]

SearchDrugDescription.name = "description"
SearchDrugDescription.data_type = OpenTargetsDatasetFieldType.STRING
SearchDrugDescription.dataset = SearchDrug
SearchDrugDescription.path = [SearchDrugDescription]

SearchDrugEntity.name = "entity"
SearchDrugEntity.data_type = OpenTargetsDatasetFieldType.STRING
SearchDrugEntity.dataset = SearchDrug
SearchDrugEntity.path = [SearchDrugEntity]

SearchDrugCategory.name = "category"
SearchDrugCategory.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDrugCategory.dataset = SearchDrug
SearchDrugCategory.path = [SearchDrugCategory]

SearchDrugKeywords.name = "keywords"
SearchDrugKeywords.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDrugKeywords.dataset = SearchDrug
SearchDrugKeywords.path = [SearchDrugKeywords]

SearchDrugPrefixes.name = "prefixes"
SearchDrugPrefixes.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDrugPrefixes.dataset = SearchDrug
SearchDrugPrefixes.path = [SearchDrugPrefixes]

SearchDrugNgrams.name = "ngrams"
SearchDrugNgrams.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDrugNgrams.dataset = SearchDrug
SearchDrugNgrams.path = [SearchDrugNgrams]

SearchDrugTerms.name = "terms"
SearchDrugTerms.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDrugTerms.dataset = SearchDrug
SearchDrugTerms.path = [SearchDrugTerms]

SearchDrugTerms25.name = "terms25"
SearchDrugTerms25.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDrugTerms25.dataset = SearchDrug
SearchDrugTerms25.path = [SearchDrugTerms25]

SearchDrugTerms5.name = "terms5"
SearchDrugTerms5.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchDrugTerms5.dataset = SearchDrug
SearchDrugTerms5.path = [SearchDrugTerms5]

SearchDrugMultiplier.name = "multiplier"
SearchDrugMultiplier.data_type = OpenTargetsDatasetFieldType.DOUBLE
SearchDrugMultiplier.dataset = SearchDrug
SearchDrugMultiplier.path = [SearchDrugMultiplier]

SearchDrug.id = "searchDrug"
SearchDrug.f_id = SearchDrugId
SearchDrug.f_name = SearchDrugName
SearchDrug.f_description = SearchDrugDescription
SearchDrug.f_entity = SearchDrugEntity
SearchDrug.f_category = SearchDrugCategory
SearchDrug.f_keywords = SearchDrugKeywords
SearchDrug.f_prefixes = SearchDrugPrefixes
SearchDrug.f_ngrams = SearchDrugNgrams
SearchDrug.f_terms = SearchDrugTerms
SearchDrug.f_terms_25 = SearchDrugTerms25
SearchDrug.f_terms_5 = SearchDrugTerms5
SearchDrug.f_multiplier = SearchDrugMultiplier
SearchTargetId.name = "id"
SearchTargetId.data_type = OpenTargetsDatasetFieldType.STRING
SearchTargetId.dataset = SearchTarget
SearchTargetId.path = [SearchTargetId]

SearchTargetName.name = "name"
SearchTargetName.data_type = OpenTargetsDatasetFieldType.STRING
SearchTargetName.dataset = SearchTarget
SearchTargetName.path = [SearchTargetName]

SearchTargetDescription.name = "description"
SearchTargetDescription.data_type = OpenTargetsDatasetFieldType.STRING
SearchTargetDescription.dataset = SearchTarget
SearchTargetDescription.path = [SearchTargetDescription]

SearchTargetEntity.name = "entity"
SearchTargetEntity.data_type = OpenTargetsDatasetFieldType.STRING
SearchTargetEntity.dataset = SearchTarget
SearchTargetEntity.path = [SearchTargetEntity]

SearchTargetCategory.name = "category"
SearchTargetCategory.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchTargetCategory.dataset = SearchTarget
SearchTargetCategory.path = [SearchTargetCategory]

SearchTargetKeywords.name = "keywords"
SearchTargetKeywords.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchTargetKeywords.dataset = SearchTarget
SearchTargetKeywords.path = [SearchTargetKeywords]

SearchTargetPrefixes.name = "prefixes"
SearchTargetPrefixes.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchTargetPrefixes.dataset = SearchTarget
SearchTargetPrefixes.path = [SearchTargetPrefixes]

SearchTargetNgrams.name = "ngrams"
SearchTargetNgrams.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchTargetNgrams.dataset = SearchTarget
SearchTargetNgrams.path = [SearchTargetNgrams]

SearchTargetTerms.name = "terms"
SearchTargetTerms.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchTargetTerms.dataset = SearchTarget
SearchTargetTerms.path = [SearchTargetTerms]

SearchTargetTerms25.name = "terms25"
SearchTargetTerms25.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchTargetTerms25.dataset = SearchTarget
SearchTargetTerms25.path = [SearchTargetTerms25]

SearchTargetTerms5.name = "terms5"
SearchTargetTerms5.data_type = OpenTargetsDatasetFieldType.ARRAY
SearchTargetTerms5.dataset = SearchTarget
SearchTargetTerms5.path = [SearchTargetTerms5]

SearchTargetMultiplier.name = "multiplier"
SearchTargetMultiplier.data_type = OpenTargetsDatasetFieldType.DOUBLE
SearchTargetMultiplier.dataset = SearchTarget
SearchTargetMultiplier.path = [SearchTargetMultiplier]

SearchTarget.id = "searchTarget"
SearchTarget.f_id = SearchTargetId
SearchTarget.f_name = SearchTargetName
SearchTarget.f_description = SearchTargetDescription
SearchTarget.f_entity = SearchTargetEntity
SearchTarget.f_category = SearchTargetCategory
SearchTarget.f_keywords = SearchTargetKeywords
SearchTarget.f_prefixes = SearchTargetPrefixes
SearchTarget.f_ngrams = SearchTargetNgrams
SearchTarget.f_terms = SearchTargetTerms
SearchTarget.f_terms_25 = SearchTargetTerms25
SearchTarget.f_terms_5 = SearchTargetTerms5
SearchTarget.f_multiplier = SearchTargetMultiplier
SignificantAdverseDrugReactionsChemblId.name = "chembl_id"
SignificantAdverseDrugReactionsChemblId.data_type = OpenTargetsDatasetFieldType.STRING
SignificantAdverseDrugReactionsChemblId.dataset = SignificantAdverseDrugReactions
SignificantAdverseDrugReactionsChemblId.path = [SignificantAdverseDrugReactionsChemblId]

SignificantAdverseDrugReactionsEvent.name = "event"
SignificantAdverseDrugReactionsEvent.data_type = OpenTargetsDatasetFieldType.STRING
SignificantAdverseDrugReactionsEvent.dataset = SignificantAdverseDrugReactions
SignificantAdverseDrugReactionsEvent.path = [SignificantAdverseDrugReactionsEvent]

SignificantAdverseDrugReactionsCount.name = "count"
SignificantAdverseDrugReactionsCount.data_type = OpenTargetsDatasetFieldType.LONG
SignificantAdverseDrugReactionsCount.dataset = SignificantAdverseDrugReactions
SignificantAdverseDrugReactionsCount.path = [SignificantAdverseDrugReactionsCount]

SignificantAdverseDrugReactionsLlr.name = "llr"
SignificantAdverseDrugReactionsLlr.data_type = OpenTargetsDatasetFieldType.DOUBLE
SignificantAdverseDrugReactionsLlr.dataset = SignificantAdverseDrugReactions
SignificantAdverseDrugReactionsLlr.path = [SignificantAdverseDrugReactionsLlr]

SignificantAdverseDrugReactionsCritval.name = "critval"
SignificantAdverseDrugReactionsCritval.data_type = OpenTargetsDatasetFieldType.DOUBLE
SignificantAdverseDrugReactionsCritval.dataset = SignificantAdverseDrugReactions
SignificantAdverseDrugReactionsCritval.path = [SignificantAdverseDrugReactionsCritval]

SignificantAdverseDrugReactionsMeddraCode.name = "meddraCode"
SignificantAdverseDrugReactionsMeddraCode.data_type = OpenTargetsDatasetFieldType.STRING
SignificantAdverseDrugReactionsMeddraCode.dataset = SignificantAdverseDrugReactions
SignificantAdverseDrugReactionsMeddraCode.path = [SignificantAdverseDrugReactionsMeddraCode]

SignificantAdverseDrugReactions.id = "significantAdverseDrugReactions"
SignificantAdverseDrugReactions.f_chembl_id = SignificantAdverseDrugReactionsChemblId
SignificantAdverseDrugReactions.f_event = SignificantAdverseDrugReactionsEvent
SignificantAdverseDrugReactions.f_count = SignificantAdverseDrugReactionsCount
SignificantAdverseDrugReactions.f_llr = SignificantAdverseDrugReactionsLlr
SignificantAdverseDrugReactions.f_critval = SignificantAdverseDrugReactionsCritval
SignificantAdverseDrugReactions.f_meddra_code = SignificantAdverseDrugReactionsMeddraCode
SignificantAdverseTargetReactionsTargetId.name = "targetId"
SignificantAdverseTargetReactionsTargetId.data_type = OpenTargetsDatasetFieldType.STRING
SignificantAdverseTargetReactionsTargetId.dataset = SignificantAdverseTargetReactions
SignificantAdverseTargetReactionsTargetId.path = [SignificantAdverseTargetReactionsTargetId]

SignificantAdverseTargetReactionsEvent.name = "event"
SignificantAdverseTargetReactionsEvent.data_type = OpenTargetsDatasetFieldType.STRING
SignificantAdverseTargetReactionsEvent.dataset = SignificantAdverseTargetReactions
SignificantAdverseTargetReactionsEvent.path = [SignificantAdverseTargetReactionsEvent]

SignificantAdverseTargetReactionsCount.name = "count"
SignificantAdverseTargetReactionsCount.data_type = OpenTargetsDatasetFieldType.LONG
SignificantAdverseTargetReactionsCount.dataset = SignificantAdverseTargetReactions
SignificantAdverseTargetReactionsCount.path = [SignificantAdverseTargetReactionsCount]

SignificantAdverseTargetReactionsLlr.name = "llr"
SignificantAdverseTargetReactionsLlr.data_type = OpenTargetsDatasetFieldType.DOUBLE
SignificantAdverseTargetReactionsLlr.dataset = SignificantAdverseTargetReactions
SignificantAdverseTargetReactionsLlr.path = [SignificantAdverseTargetReactionsLlr]

SignificantAdverseTargetReactionsCritval.name = "critval"
SignificantAdverseTargetReactionsCritval.data_type = OpenTargetsDatasetFieldType.DOUBLE
SignificantAdverseTargetReactionsCritval.dataset = SignificantAdverseTargetReactions
SignificantAdverseTargetReactionsCritval.path = [SignificantAdverseTargetReactionsCritval]

SignificantAdverseTargetReactionsMeddraCode.name = "meddraCode"
SignificantAdverseTargetReactionsMeddraCode.data_type = OpenTargetsDatasetFieldType.STRING
SignificantAdverseTargetReactionsMeddraCode.dataset = SignificantAdverseTargetReactions
SignificantAdverseTargetReactionsMeddraCode.path = [SignificantAdverseTargetReactionsMeddraCode]

SignificantAdverseTargetReactions.id = "significantAdverseTargetReactions"
SignificantAdverseTargetReactions.f_target_id = SignificantAdverseTargetReactionsTargetId
SignificantAdverseTargetReactions.f_event = SignificantAdverseTargetReactionsEvent
SignificantAdverseTargetReactions.f_count = SignificantAdverseTargetReactionsCount
SignificantAdverseTargetReactions.f_llr = SignificantAdverseTargetReactionsLlr
SignificantAdverseTargetReactions.f_critval = SignificantAdverseTargetReactionsCritval
SignificantAdverseTargetReactions.f_meddra_code = SignificantAdverseTargetReactionsMeddraCode
TargetsId.name = "id"
TargetsId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsId.dataset = Targets
TargetsId.path = [TargetsId]

TargetsApprovedSymbol.name = "approvedSymbol"
TargetsApprovedSymbol.data_type = OpenTargetsDatasetFieldType.STRING
TargetsApprovedSymbol.dataset = Targets
TargetsApprovedSymbol.path = [TargetsApprovedSymbol]

TargetsBiotype.name = "biotype"
TargetsBiotype.data_type = OpenTargetsDatasetFieldType.STRING
TargetsBiotype.dataset = Targets
TargetsBiotype.path = [TargetsBiotype]

TargetsTranscriptIds.name = "transcriptIds"
TargetsTranscriptIds.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsTranscriptIds.dataset = Targets
TargetsTranscriptIds.path = [TargetsTranscriptIds]

TargetsCanonicalTranscriptId.name = "id"
TargetsCanonicalTranscriptId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsCanonicalTranscriptId.dataset = Targets
TargetsCanonicalTranscriptId.path = [TargetsCanonicalTranscript, TargetsCanonicalTranscriptId]

TargetsCanonicalTranscriptChromosome.name = "chromosome"
TargetsCanonicalTranscriptChromosome.data_type = OpenTargetsDatasetFieldType.STRING
TargetsCanonicalTranscriptChromosome.dataset = Targets
TargetsCanonicalTranscriptChromosome.path = [TargetsCanonicalTranscript, TargetsCanonicalTranscriptChromosome]

TargetsCanonicalTranscriptStart.name = "start"
TargetsCanonicalTranscriptStart.data_type = OpenTargetsDatasetFieldType.LONG
TargetsCanonicalTranscriptStart.dataset = Targets
TargetsCanonicalTranscriptStart.path = [TargetsCanonicalTranscript, TargetsCanonicalTranscriptStart]

TargetsCanonicalTranscriptEnd.name = "end"
TargetsCanonicalTranscriptEnd.data_type = OpenTargetsDatasetFieldType.LONG
TargetsCanonicalTranscriptEnd.dataset = Targets
TargetsCanonicalTranscriptEnd.path = [TargetsCanonicalTranscript, TargetsCanonicalTranscriptEnd]

TargetsCanonicalTranscriptStrand.name = "strand"
TargetsCanonicalTranscriptStrand.data_type = OpenTargetsDatasetFieldType.STRING
TargetsCanonicalTranscriptStrand.dataset = Targets
TargetsCanonicalTranscriptStrand.path = [TargetsCanonicalTranscript, TargetsCanonicalTranscriptStrand]

TargetsCanonicalTranscript.name = "canonicalTranscript"
TargetsCanonicalTranscript.data_type = OpenTargetsDatasetFieldType.STRUCT
TargetsCanonicalTranscript.dataset = Targets
TargetsCanonicalTranscript.path = [TargetsCanonicalTranscript]
TargetsCanonicalTranscript.f_id = TargetsCanonicalTranscriptId
TargetsCanonicalTranscript.f_chromosome = TargetsCanonicalTranscriptChromosome
TargetsCanonicalTranscript.f_start = TargetsCanonicalTranscriptStart
TargetsCanonicalTranscript.f_end = TargetsCanonicalTranscriptEnd
TargetsCanonicalTranscript.f_strand = TargetsCanonicalTranscriptStrand

TargetsCanonicalExons.name = "canonicalExons"
TargetsCanonicalExons.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsCanonicalExons.dataset = Targets
TargetsCanonicalExons.path = [TargetsCanonicalExons]

TargetsGenomicLocationChromosome.name = "chromosome"
TargetsGenomicLocationChromosome.data_type = OpenTargetsDatasetFieldType.STRING
TargetsGenomicLocationChromosome.dataset = Targets
TargetsGenomicLocationChromosome.path = [TargetsGenomicLocation, TargetsGenomicLocationChromosome]

TargetsGenomicLocationStart.name = "start"
TargetsGenomicLocationStart.data_type = OpenTargetsDatasetFieldType.LONG
TargetsGenomicLocationStart.dataset = Targets
TargetsGenomicLocationStart.path = [TargetsGenomicLocation, TargetsGenomicLocationStart]

TargetsGenomicLocationEnd.name = "end"
TargetsGenomicLocationEnd.data_type = OpenTargetsDatasetFieldType.LONG
TargetsGenomicLocationEnd.dataset = Targets
TargetsGenomicLocationEnd.path = [TargetsGenomicLocation, TargetsGenomicLocationEnd]

TargetsGenomicLocationStrand.name = "strand"
TargetsGenomicLocationStrand.data_type = OpenTargetsDatasetFieldType.INTEGER
TargetsGenomicLocationStrand.dataset = Targets
TargetsGenomicLocationStrand.path = [TargetsGenomicLocation, TargetsGenomicLocationStrand]

TargetsGenomicLocation.name = "genomicLocation"
TargetsGenomicLocation.data_type = OpenTargetsDatasetFieldType.STRUCT
TargetsGenomicLocation.dataset = Targets
TargetsGenomicLocation.path = [TargetsGenomicLocation]
TargetsGenomicLocation.f_chromosome = TargetsGenomicLocationChromosome
TargetsGenomicLocation.f_start = TargetsGenomicLocationStart
TargetsGenomicLocation.f_end = TargetsGenomicLocationEnd
TargetsGenomicLocation.f_strand = TargetsGenomicLocationStrand

TargetsAlternativeGenes.name = "alternativeGenes"
TargetsAlternativeGenes.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsAlternativeGenes.dataset = Targets
TargetsAlternativeGenes.path = [TargetsAlternativeGenes]

TargetsApprovedName.name = "approvedName"
TargetsApprovedName.data_type = OpenTargetsDatasetFieldType.STRING
TargetsApprovedName.dataset = Targets
TargetsApprovedName.path = [TargetsApprovedName]

TargetsGoId.name = "id"
TargetsGoId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsGoId.dataset = Targets
TargetsGoId.path = [TargetsGo, TargetsGoId]

TargetsGoSource.name = "source"
TargetsGoSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsGoSource.dataset = Targets
TargetsGoSource.path = [TargetsGo, TargetsGoSource]

TargetsGoEvidence.name = "evidence"
TargetsGoEvidence.data_type = OpenTargetsDatasetFieldType.STRING
TargetsGoEvidence.dataset = Targets
TargetsGoEvidence.path = [TargetsGo, TargetsGoEvidence]

TargetsGoAspect.name = "aspect"
TargetsGoAspect.data_type = OpenTargetsDatasetFieldType.STRING
TargetsGoAspect.dataset = Targets
TargetsGoAspect.path = [TargetsGo, TargetsGoAspect]

TargetsGoGeneProduct.name = "geneProduct"
TargetsGoGeneProduct.data_type = OpenTargetsDatasetFieldType.STRING
TargetsGoGeneProduct.dataset = Targets
TargetsGoGeneProduct.path = [TargetsGo, TargetsGoGeneProduct]

TargetsGoEcoId.name = "ecoId"
TargetsGoEcoId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsGoEcoId.dataset = Targets
TargetsGoEcoId.path = [TargetsGo, TargetsGoEcoId]

TargetsGo.name = "go"
TargetsGo.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsGo.dataset = Targets
TargetsGo.path = [TargetsGo]
TargetsGo.f_id = TargetsGoId
TargetsGo.f_source = TargetsGoSource
TargetsGo.f_evidence = TargetsGoEvidence
TargetsGo.f_aspect = TargetsGoAspect
TargetsGo.f_gene_product = TargetsGoGeneProduct
TargetsGo.f_eco_id = TargetsGoEcoId

TargetsHallmarksAttributesPmid.name = "pmid"
TargetsHallmarksAttributesPmid.data_type = OpenTargetsDatasetFieldType.LONG
TargetsHallmarksAttributesPmid.dataset = Targets
TargetsHallmarksAttributesPmid.path = [TargetsHallmarks, TargetsHallmarksAttributes, TargetsHallmarksAttributesPmid]

TargetsHallmarksAttributesDescription.name = "description"
TargetsHallmarksAttributesDescription.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHallmarksAttributesDescription.dataset = Targets
TargetsHallmarksAttributesDescription.path = [
    TargetsHallmarks,
    TargetsHallmarksAttributes,
    TargetsHallmarksAttributesDescription,
]

TargetsHallmarksAttributesAttributeName.name = "attribute_name"
TargetsHallmarksAttributesAttributeName.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHallmarksAttributesAttributeName.dataset = Targets
TargetsHallmarksAttributesAttributeName.path = [
    TargetsHallmarks,
    TargetsHallmarksAttributes,
    TargetsHallmarksAttributesAttributeName,
]

TargetsHallmarksAttributes.name = "attributes"
TargetsHallmarksAttributes.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsHallmarksAttributes.dataset = Targets
TargetsHallmarksAttributes.path = [TargetsHallmarks, TargetsHallmarksAttributes]
TargetsHallmarksAttributes.f_pmid = TargetsHallmarksAttributesPmid
TargetsHallmarksAttributes.f_description = TargetsHallmarksAttributesDescription
TargetsHallmarksAttributes.f_attribute_name = TargetsHallmarksAttributesAttributeName

TargetsHallmarksCancerHallmarksPmid.name = "pmid"
TargetsHallmarksCancerHallmarksPmid.data_type = OpenTargetsDatasetFieldType.LONG
TargetsHallmarksCancerHallmarksPmid.dataset = Targets
TargetsHallmarksCancerHallmarksPmid.path = [
    TargetsHallmarks,
    TargetsHallmarksCancerHallmarks,
    TargetsHallmarksCancerHallmarksPmid,
]

TargetsHallmarksCancerHallmarksDescription.name = "description"
TargetsHallmarksCancerHallmarksDescription.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHallmarksCancerHallmarksDescription.dataset = Targets
TargetsHallmarksCancerHallmarksDescription.path = [
    TargetsHallmarks,
    TargetsHallmarksCancerHallmarks,
    TargetsHallmarksCancerHallmarksDescription,
]

TargetsHallmarksCancerHallmarksImpact.name = "impact"
TargetsHallmarksCancerHallmarksImpact.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHallmarksCancerHallmarksImpact.dataset = Targets
TargetsHallmarksCancerHallmarksImpact.path = [
    TargetsHallmarks,
    TargetsHallmarksCancerHallmarks,
    TargetsHallmarksCancerHallmarksImpact,
]

TargetsHallmarksCancerHallmarksLabel.name = "label"
TargetsHallmarksCancerHallmarksLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHallmarksCancerHallmarksLabel.dataset = Targets
TargetsHallmarksCancerHallmarksLabel.path = [
    TargetsHallmarks,
    TargetsHallmarksCancerHallmarks,
    TargetsHallmarksCancerHallmarksLabel,
]

TargetsHallmarksCancerHallmarks.name = "cancerHallmarks"
TargetsHallmarksCancerHallmarks.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsHallmarksCancerHallmarks.dataset = Targets
TargetsHallmarksCancerHallmarks.path = [TargetsHallmarks, TargetsHallmarksCancerHallmarks]
TargetsHallmarksCancerHallmarks.f_pmid = TargetsHallmarksCancerHallmarksPmid
TargetsHallmarksCancerHallmarks.f_description = TargetsHallmarksCancerHallmarksDescription
TargetsHallmarksCancerHallmarks.f_impact = TargetsHallmarksCancerHallmarksImpact
TargetsHallmarksCancerHallmarks.f_label = TargetsHallmarksCancerHallmarksLabel

TargetsHallmarks.name = "hallmarks"
TargetsHallmarks.data_type = OpenTargetsDatasetFieldType.STRUCT
TargetsHallmarks.dataset = Targets
TargetsHallmarks.path = [TargetsHallmarks]
TargetsHallmarks.f_attributes = TargetsHallmarksAttributes
TargetsHallmarks.f_cancer_hallmarks = TargetsHallmarksCancerHallmarks

TargetsSynonymsLabel.name = "label"
TargetsSynonymsLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSynonymsLabel.dataset = Targets
TargetsSynonymsLabel.path = [TargetsSynonyms, TargetsSynonymsLabel]

TargetsSynonymsSource.name = "source"
TargetsSynonymsSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSynonymsSource.dataset = Targets
TargetsSynonymsSource.path = [TargetsSynonyms, TargetsSynonymsSource]

TargetsSynonyms.name = "synonyms"
TargetsSynonyms.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsSynonyms.dataset = Targets
TargetsSynonyms.path = [TargetsSynonyms]
TargetsSynonyms.f_label = TargetsSynonymsLabel
TargetsSynonyms.f_source = TargetsSynonymsSource

TargetsSymbolSynonymsLabel.name = "label"
TargetsSymbolSynonymsLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSymbolSynonymsLabel.dataset = Targets
TargetsSymbolSynonymsLabel.path = [TargetsSymbolSynonyms, TargetsSymbolSynonymsLabel]

TargetsSymbolSynonymsSource.name = "source"
TargetsSymbolSynonymsSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSymbolSynonymsSource.dataset = Targets
TargetsSymbolSynonymsSource.path = [TargetsSymbolSynonyms, TargetsSymbolSynonymsSource]

TargetsSymbolSynonyms.name = "symbolSynonyms"
TargetsSymbolSynonyms.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsSymbolSynonyms.dataset = Targets
TargetsSymbolSynonyms.path = [TargetsSymbolSynonyms]
TargetsSymbolSynonyms.f_label = TargetsSymbolSynonymsLabel
TargetsSymbolSynonyms.f_source = TargetsSymbolSynonymsSource

TargetsNameSynonymsLabel.name = "label"
TargetsNameSynonymsLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsNameSynonymsLabel.dataset = Targets
TargetsNameSynonymsLabel.path = [TargetsNameSynonyms, TargetsNameSynonymsLabel]

TargetsNameSynonymsSource.name = "source"
TargetsNameSynonymsSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsNameSynonymsSource.dataset = Targets
TargetsNameSynonymsSource.path = [TargetsNameSynonyms, TargetsNameSynonymsSource]

TargetsNameSynonyms.name = "nameSynonyms"
TargetsNameSynonyms.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsNameSynonyms.dataset = Targets
TargetsNameSynonyms.path = [TargetsNameSynonyms]
TargetsNameSynonyms.f_label = TargetsNameSynonymsLabel
TargetsNameSynonyms.f_source = TargetsNameSynonymsSource

TargetsFunctionDescriptions.name = "functionDescriptions"
TargetsFunctionDescriptions.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsFunctionDescriptions.dataset = Targets
TargetsFunctionDescriptions.path = [TargetsFunctionDescriptions]

TargetsSubcellularLocationsLocation.name = "location"
TargetsSubcellularLocationsLocation.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSubcellularLocationsLocation.dataset = Targets
TargetsSubcellularLocationsLocation.path = [TargetsSubcellularLocations, TargetsSubcellularLocationsLocation]

TargetsSubcellularLocationsSource.name = "source"
TargetsSubcellularLocationsSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSubcellularLocationsSource.dataset = Targets
TargetsSubcellularLocationsSource.path = [TargetsSubcellularLocations, TargetsSubcellularLocationsSource]

TargetsSubcellularLocationsTermSl.name = "termSL"
TargetsSubcellularLocationsTermSl.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSubcellularLocationsTermSl.dataset = Targets
TargetsSubcellularLocationsTermSl.path = [TargetsSubcellularLocations, TargetsSubcellularLocationsTermSl]

TargetsSubcellularLocationsLabelSl.name = "labelSL"
TargetsSubcellularLocationsLabelSl.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSubcellularLocationsLabelSl.dataset = Targets
TargetsSubcellularLocationsLabelSl.path = [TargetsSubcellularLocations, TargetsSubcellularLocationsLabelSl]

TargetsSubcellularLocations.name = "subcellularLocations"
TargetsSubcellularLocations.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsSubcellularLocations.dataset = Targets
TargetsSubcellularLocations.path = [TargetsSubcellularLocations]
TargetsSubcellularLocations.f_location = TargetsSubcellularLocationsLocation
TargetsSubcellularLocations.f_source = TargetsSubcellularLocationsSource
TargetsSubcellularLocations.f_term_sl = TargetsSubcellularLocationsTermSl
TargetsSubcellularLocations.f_label_sl = TargetsSubcellularLocationsLabelSl

TargetsTargetClassId.name = "id"
TargetsTargetClassId.data_type = OpenTargetsDatasetFieldType.LONG
TargetsTargetClassId.dataset = Targets
TargetsTargetClassId.path = [TargetsTargetClass, TargetsTargetClassId]

TargetsTargetClassLabel.name = "label"
TargetsTargetClassLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTargetClassLabel.dataset = Targets
TargetsTargetClassLabel.path = [TargetsTargetClass, TargetsTargetClassLabel]

TargetsTargetClassLevel.name = "level"
TargetsTargetClassLevel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTargetClassLevel.dataset = Targets
TargetsTargetClassLevel.path = [TargetsTargetClass, TargetsTargetClassLevel]

TargetsTargetClass.name = "targetClass"
TargetsTargetClass.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsTargetClass.dataset = Targets
TargetsTargetClass.path = [TargetsTargetClass]
TargetsTargetClass.f_id = TargetsTargetClassId
TargetsTargetClass.f_label = TargetsTargetClassLabel
TargetsTargetClass.f_level = TargetsTargetClassLevel

TargetsObsoleteSymbolsLabel.name = "label"
TargetsObsoleteSymbolsLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsObsoleteSymbolsLabel.dataset = Targets
TargetsObsoleteSymbolsLabel.path = [TargetsObsoleteSymbols, TargetsObsoleteSymbolsLabel]

TargetsObsoleteSymbolsSource.name = "source"
TargetsObsoleteSymbolsSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsObsoleteSymbolsSource.dataset = Targets
TargetsObsoleteSymbolsSource.path = [TargetsObsoleteSymbols, TargetsObsoleteSymbolsSource]

TargetsObsoleteSymbols.name = "obsoleteSymbols"
TargetsObsoleteSymbols.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsObsoleteSymbols.dataset = Targets
TargetsObsoleteSymbols.path = [TargetsObsoleteSymbols]
TargetsObsoleteSymbols.f_label = TargetsObsoleteSymbolsLabel
TargetsObsoleteSymbols.f_source = TargetsObsoleteSymbolsSource

TargetsObsoleteNamesLabel.name = "label"
TargetsObsoleteNamesLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsObsoleteNamesLabel.dataset = Targets
TargetsObsoleteNamesLabel.path = [TargetsObsoleteNames, TargetsObsoleteNamesLabel]

TargetsObsoleteNamesSource.name = "source"
TargetsObsoleteNamesSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsObsoleteNamesSource.dataset = Targets
TargetsObsoleteNamesSource.path = [TargetsObsoleteNames, TargetsObsoleteNamesSource]

TargetsObsoleteNames.name = "obsoleteNames"
TargetsObsoleteNames.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsObsoleteNames.dataset = Targets
TargetsObsoleteNames.path = [TargetsObsoleteNames]
TargetsObsoleteNames.f_label = TargetsObsoleteNamesLabel
TargetsObsoleteNames.f_source = TargetsObsoleteNamesSource

TargetsConstraintConstraintType.name = "constraintType"
TargetsConstraintConstraintType.data_type = OpenTargetsDatasetFieldType.STRING
TargetsConstraintConstraintType.dataset = Targets
TargetsConstraintConstraintType.path = [TargetsConstraint, TargetsConstraintConstraintType]

TargetsConstraintScore.name = "score"
TargetsConstraintScore.data_type = OpenTargetsDatasetFieldType.FLOAT
TargetsConstraintScore.dataset = Targets
TargetsConstraintScore.path = [TargetsConstraint, TargetsConstraintScore]

TargetsConstraintExp.name = "exp"
TargetsConstraintExp.data_type = OpenTargetsDatasetFieldType.FLOAT
TargetsConstraintExp.dataset = Targets
TargetsConstraintExp.path = [TargetsConstraint, TargetsConstraintExp]

TargetsConstraintObs.name = "obs"
TargetsConstraintObs.data_type = OpenTargetsDatasetFieldType.INTEGER
TargetsConstraintObs.dataset = Targets
TargetsConstraintObs.path = [TargetsConstraint, TargetsConstraintObs]

TargetsConstraintOe.name = "oe"
TargetsConstraintOe.data_type = OpenTargetsDatasetFieldType.FLOAT
TargetsConstraintOe.dataset = Targets
TargetsConstraintOe.path = [TargetsConstraint, TargetsConstraintOe]

TargetsConstraintOeLower.name = "oeLower"
TargetsConstraintOeLower.data_type = OpenTargetsDatasetFieldType.FLOAT
TargetsConstraintOeLower.dataset = Targets
TargetsConstraintOeLower.path = [TargetsConstraint, TargetsConstraintOeLower]

TargetsConstraintOeUpper.name = "oeUpper"
TargetsConstraintOeUpper.data_type = OpenTargetsDatasetFieldType.FLOAT
TargetsConstraintOeUpper.dataset = Targets
TargetsConstraintOeUpper.path = [TargetsConstraint, TargetsConstraintOeUpper]

TargetsConstraintUpperRank.name = "upperRank"
TargetsConstraintUpperRank.data_type = OpenTargetsDatasetFieldType.INTEGER
TargetsConstraintUpperRank.dataset = Targets
TargetsConstraintUpperRank.path = [TargetsConstraint, TargetsConstraintUpperRank]

TargetsConstraintUpperBin.name = "upperBin"
TargetsConstraintUpperBin.data_type = OpenTargetsDatasetFieldType.INTEGER
TargetsConstraintUpperBin.dataset = Targets
TargetsConstraintUpperBin.path = [TargetsConstraint, TargetsConstraintUpperBin]

TargetsConstraintUpperBin6.name = "upperBin6"
TargetsConstraintUpperBin6.data_type = OpenTargetsDatasetFieldType.INTEGER
TargetsConstraintUpperBin6.dataset = Targets
TargetsConstraintUpperBin6.path = [TargetsConstraint, TargetsConstraintUpperBin6]

TargetsConstraint.name = "constraint"
TargetsConstraint.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsConstraint.dataset = Targets
TargetsConstraint.path = [TargetsConstraint]
TargetsConstraint.f_constraint_type = TargetsConstraintConstraintType
TargetsConstraint.f_score = TargetsConstraintScore
TargetsConstraint.f_exp = TargetsConstraintExp
TargetsConstraint.f_obs = TargetsConstraintObs
TargetsConstraint.f_oe = TargetsConstraintOe
TargetsConstraint.f_oe_lower = TargetsConstraintOeLower
TargetsConstraint.f_oe_upper = TargetsConstraintOeUpper
TargetsConstraint.f_upper_rank = TargetsConstraintUpperRank
TargetsConstraint.f_upper_bin = TargetsConstraintUpperBin
TargetsConstraint.f_upper_bin_6 = TargetsConstraintUpperBin6

TargetsTepTargetFromSourceId.name = "targetFromSourceId"
TargetsTepTargetFromSourceId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTepTargetFromSourceId.dataset = Targets
TargetsTepTargetFromSourceId.path = [TargetsTep, TargetsTepTargetFromSourceId]

TargetsTepDescription.name = "description"
TargetsTepDescription.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTepDescription.dataset = Targets
TargetsTepDescription.path = [TargetsTep, TargetsTepDescription]

TargetsTepTherapeuticArea.name = "therapeuticArea"
TargetsTepTherapeuticArea.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTepTherapeuticArea.dataset = Targets
TargetsTepTherapeuticArea.path = [TargetsTep, TargetsTepTherapeuticArea]

TargetsTepUrl.name = "url"
TargetsTepUrl.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTepUrl.dataset = Targets
TargetsTepUrl.path = [TargetsTep, TargetsTepUrl]

TargetsTep.name = "tep"
TargetsTep.data_type = OpenTargetsDatasetFieldType.STRUCT
TargetsTep.dataset = Targets
TargetsTep.path = [TargetsTep]
TargetsTep.f_target_from_source_id = TargetsTepTargetFromSourceId
TargetsTep.f_description = TargetsTepDescription
TargetsTep.f_therapeutic_area = TargetsTepTherapeuticArea
TargetsTep.f_url = TargetsTepUrl

TargetsProteinIdsId.name = "id"
TargetsProteinIdsId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsProteinIdsId.dataset = Targets
TargetsProteinIdsId.path = [TargetsProteinIds, TargetsProteinIdsId]

TargetsProteinIdsSource.name = "source"
TargetsProteinIdsSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsProteinIdsSource.dataset = Targets
TargetsProteinIdsSource.path = [TargetsProteinIds, TargetsProteinIdsSource]

TargetsProteinIds.name = "proteinIds"
TargetsProteinIds.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsProteinIds.dataset = Targets
TargetsProteinIds.path = [TargetsProteinIds]
TargetsProteinIds.f_id = TargetsProteinIdsId
TargetsProteinIds.f_source = TargetsProteinIdsSource

TargetsDbXrefsId.name = "id"
TargetsDbXrefsId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsDbXrefsId.dataset = Targets
TargetsDbXrefsId.path = [TargetsDbXrefs, TargetsDbXrefsId]

TargetsDbXrefsSource.name = "source"
TargetsDbXrefsSource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsDbXrefsSource.dataset = Targets
TargetsDbXrefsSource.path = [TargetsDbXrefs, TargetsDbXrefsSource]

TargetsDbXrefs.name = "dbXrefs"
TargetsDbXrefs.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsDbXrefs.dataset = Targets
TargetsDbXrefs.path = [TargetsDbXrefs]
TargetsDbXrefs.f_id = TargetsDbXrefsId
TargetsDbXrefs.f_source = TargetsDbXrefsSource

TargetsChemicalProbesControl.name = "control"
TargetsChemicalProbesControl.data_type = OpenTargetsDatasetFieldType.STRING
TargetsChemicalProbesControl.dataset = Targets
TargetsChemicalProbesControl.path = [TargetsChemicalProbes, TargetsChemicalProbesControl]

TargetsChemicalProbesDrugId.name = "drugId"
TargetsChemicalProbesDrugId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsChemicalProbesDrugId.dataset = Targets
TargetsChemicalProbesDrugId.path = [TargetsChemicalProbes, TargetsChemicalProbesDrugId]

TargetsChemicalProbesId.name = "id"
TargetsChemicalProbesId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsChemicalProbesId.dataset = Targets
TargetsChemicalProbesId.path = [TargetsChemicalProbes, TargetsChemicalProbesId]

TargetsChemicalProbesIsHighQuality.name = "isHighQuality"
TargetsChemicalProbesIsHighQuality.data_type = OpenTargetsDatasetFieldType.BOOLEAN
TargetsChemicalProbesIsHighQuality.dataset = Targets
TargetsChemicalProbesIsHighQuality.path = [TargetsChemicalProbes, TargetsChemicalProbesIsHighQuality]

TargetsChemicalProbesMechanismOfAction.name = "mechanismOfAction"
TargetsChemicalProbesMechanismOfAction.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsChemicalProbesMechanismOfAction.dataset = Targets
TargetsChemicalProbesMechanismOfAction.path = [TargetsChemicalProbes, TargetsChemicalProbesMechanismOfAction]

TargetsChemicalProbesOrigin.name = "origin"
TargetsChemicalProbesOrigin.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsChemicalProbesOrigin.dataset = Targets
TargetsChemicalProbesOrigin.path = [TargetsChemicalProbes, TargetsChemicalProbesOrigin]

TargetsChemicalProbesProbeMinerScore.name = "probeMinerScore"
TargetsChemicalProbesProbeMinerScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
TargetsChemicalProbesProbeMinerScore.dataset = Targets
TargetsChemicalProbesProbeMinerScore.path = [TargetsChemicalProbes, TargetsChemicalProbesProbeMinerScore]

TargetsChemicalProbesProbesDrugsScore.name = "probesDrugsScore"
TargetsChemicalProbesProbesDrugsScore.data_type = OpenTargetsDatasetFieldType.DOUBLE
TargetsChemicalProbesProbesDrugsScore.dataset = Targets
TargetsChemicalProbesProbesDrugsScore.path = [TargetsChemicalProbes, TargetsChemicalProbesProbesDrugsScore]

TargetsChemicalProbesScoreInCells.name = "scoreInCells"
TargetsChemicalProbesScoreInCells.data_type = OpenTargetsDatasetFieldType.DOUBLE
TargetsChemicalProbesScoreInCells.dataset = Targets
TargetsChemicalProbesScoreInCells.path = [TargetsChemicalProbes, TargetsChemicalProbesScoreInCells]

TargetsChemicalProbesScoreInOrganisms.name = "scoreInOrganisms"
TargetsChemicalProbesScoreInOrganisms.data_type = OpenTargetsDatasetFieldType.DOUBLE
TargetsChemicalProbesScoreInOrganisms.dataset = Targets
TargetsChemicalProbesScoreInOrganisms.path = [TargetsChemicalProbes, TargetsChemicalProbesScoreInOrganisms]

TargetsChemicalProbesTargetFromSourceId.name = "targetFromSourceId"
TargetsChemicalProbesTargetFromSourceId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsChemicalProbesTargetFromSourceId.dataset = Targets
TargetsChemicalProbesTargetFromSourceId.path = [TargetsChemicalProbes, TargetsChemicalProbesTargetFromSourceId]

TargetsChemicalProbesUrlsNiceName.name = "niceName"
TargetsChemicalProbesUrlsNiceName.data_type = OpenTargetsDatasetFieldType.STRING
TargetsChemicalProbesUrlsNiceName.dataset = Targets
TargetsChemicalProbesUrlsNiceName.path = [
    TargetsChemicalProbes,
    TargetsChemicalProbesUrls,
    TargetsChemicalProbesUrlsNiceName,
]

TargetsChemicalProbesUrlsUrl.name = "url"
TargetsChemicalProbesUrlsUrl.data_type = OpenTargetsDatasetFieldType.STRING
TargetsChemicalProbesUrlsUrl.dataset = Targets
TargetsChemicalProbesUrlsUrl.path = [TargetsChemicalProbes, TargetsChemicalProbesUrls, TargetsChemicalProbesUrlsUrl]

TargetsChemicalProbesUrls.name = "urls"
TargetsChemicalProbesUrls.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsChemicalProbesUrls.dataset = Targets
TargetsChemicalProbesUrls.path = [TargetsChemicalProbes, TargetsChemicalProbesUrls]
TargetsChemicalProbesUrls.f_nice_name = TargetsChemicalProbesUrlsNiceName
TargetsChemicalProbesUrls.f_url = TargetsChemicalProbesUrlsUrl

TargetsChemicalProbes.name = "chemicalProbes"
TargetsChemicalProbes.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsChemicalProbes.dataset = Targets
TargetsChemicalProbes.path = [TargetsChemicalProbes]
TargetsChemicalProbes.f_control = TargetsChemicalProbesControl
TargetsChemicalProbes.f_drug_id = TargetsChemicalProbesDrugId
TargetsChemicalProbes.f_id = TargetsChemicalProbesId
TargetsChemicalProbes.f_is_high_quality = TargetsChemicalProbesIsHighQuality
TargetsChemicalProbes.f_mechanism_of_action = TargetsChemicalProbesMechanismOfAction
TargetsChemicalProbes.f_origin = TargetsChemicalProbesOrigin
TargetsChemicalProbes.f_probe_miner_score = TargetsChemicalProbesProbeMinerScore
TargetsChemicalProbes.f_probes_drugs_score = TargetsChemicalProbesProbesDrugsScore
TargetsChemicalProbes.f_score_in_cells = TargetsChemicalProbesScoreInCells
TargetsChemicalProbes.f_score_in_organisms = TargetsChemicalProbesScoreInOrganisms
TargetsChemicalProbes.f_target_from_source_id = TargetsChemicalProbesTargetFromSourceId
TargetsChemicalProbes.f_urls = TargetsChemicalProbesUrls

TargetsHomologuesSpeciesId.name = "speciesId"
TargetsHomologuesSpeciesId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHomologuesSpeciesId.dataset = Targets
TargetsHomologuesSpeciesId.path = [TargetsHomologues, TargetsHomologuesSpeciesId]

TargetsHomologuesSpeciesName.name = "speciesName"
TargetsHomologuesSpeciesName.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHomologuesSpeciesName.dataset = Targets
TargetsHomologuesSpeciesName.path = [TargetsHomologues, TargetsHomologuesSpeciesName]

TargetsHomologuesHomologyType.name = "homologyType"
TargetsHomologuesHomologyType.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHomologuesHomologyType.dataset = Targets
TargetsHomologuesHomologyType.path = [TargetsHomologues, TargetsHomologuesHomologyType]

TargetsHomologuesTargetGeneId.name = "targetGeneId"
TargetsHomologuesTargetGeneId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHomologuesTargetGeneId.dataset = Targets
TargetsHomologuesTargetGeneId.path = [TargetsHomologues, TargetsHomologuesTargetGeneId]

TargetsHomologuesIsHighConfidence.name = "isHighConfidence"
TargetsHomologuesIsHighConfidence.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHomologuesIsHighConfidence.dataset = Targets
TargetsHomologuesIsHighConfidence.path = [TargetsHomologues, TargetsHomologuesIsHighConfidence]

TargetsHomologuesTargetGeneSymbol.name = "targetGeneSymbol"
TargetsHomologuesTargetGeneSymbol.data_type = OpenTargetsDatasetFieldType.STRING
TargetsHomologuesTargetGeneSymbol.dataset = Targets
TargetsHomologuesTargetGeneSymbol.path = [TargetsHomologues, TargetsHomologuesTargetGeneSymbol]

TargetsHomologuesQueryPercentageIdentity.name = "queryPercentageIdentity"
TargetsHomologuesQueryPercentageIdentity.data_type = OpenTargetsDatasetFieldType.DOUBLE
TargetsHomologuesQueryPercentageIdentity.dataset = Targets
TargetsHomologuesQueryPercentageIdentity.path = [TargetsHomologues, TargetsHomologuesQueryPercentageIdentity]

TargetsHomologuesTargetPercentageIdentity.name = "targetPercentageIdentity"
TargetsHomologuesTargetPercentageIdentity.data_type = OpenTargetsDatasetFieldType.DOUBLE
TargetsHomologuesTargetPercentageIdentity.dataset = Targets
TargetsHomologuesTargetPercentageIdentity.path = [TargetsHomologues, TargetsHomologuesTargetPercentageIdentity]

TargetsHomologuesPriority.name = "priority"
TargetsHomologuesPriority.data_type = OpenTargetsDatasetFieldType.INTEGER
TargetsHomologuesPriority.dataset = Targets
TargetsHomologuesPriority.path = [TargetsHomologues, TargetsHomologuesPriority]

TargetsHomologues.name = "homologues"
TargetsHomologues.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsHomologues.dataset = Targets
TargetsHomologues.path = [TargetsHomologues]
TargetsHomologues.f_species_id = TargetsHomologuesSpeciesId
TargetsHomologues.f_species_name = TargetsHomologuesSpeciesName
TargetsHomologues.f_homology_type = TargetsHomologuesHomologyType
TargetsHomologues.f_target_gene_id = TargetsHomologuesTargetGeneId
TargetsHomologues.f_is_high_confidence = TargetsHomologuesIsHighConfidence
TargetsHomologues.f_target_gene_symbol = TargetsHomologuesTargetGeneSymbol
TargetsHomologues.f_query_percentage_identity = TargetsHomologuesQueryPercentageIdentity
TargetsHomologues.f_target_percentage_identity = TargetsHomologuesTargetPercentageIdentity
TargetsHomologues.f_priority = TargetsHomologuesPriority

TargetsTractabilityModality.name = "modality"
TargetsTractabilityModality.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTractabilityModality.dataset = Targets
TargetsTractabilityModality.path = [TargetsTractability, TargetsTractabilityModality]

TargetsTractabilityId.name = "id"
TargetsTractabilityId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsTractabilityId.dataset = Targets
TargetsTractabilityId.path = [TargetsTractability, TargetsTractabilityId]

TargetsTractabilityValue.name = "value"
TargetsTractabilityValue.data_type = OpenTargetsDatasetFieldType.BOOLEAN
TargetsTractabilityValue.dataset = Targets
TargetsTractabilityValue.path = [TargetsTractability, TargetsTractabilityValue]

TargetsTractability.name = "tractability"
TargetsTractability.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsTractability.dataset = Targets
TargetsTractability.path = [TargetsTractability]
TargetsTractability.f_modality = TargetsTractabilityModality
TargetsTractability.f_id = TargetsTractabilityId
TargetsTractability.f_value = TargetsTractabilityValue

TargetsSafetyLiabilitiesEvent.name = "event"
TargetsSafetyLiabilitiesEvent.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesEvent.dataset = Targets
TargetsSafetyLiabilitiesEvent.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesEvent]

TargetsSafetyLiabilitiesEventId.name = "eventId"
TargetsSafetyLiabilitiesEventId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesEventId.dataset = Targets
TargetsSafetyLiabilitiesEventId.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesEventId]

TargetsSafetyLiabilitiesEffectsDirection.name = "direction"
TargetsSafetyLiabilitiesEffectsDirection.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesEffectsDirection.dataset = Targets
TargetsSafetyLiabilitiesEffectsDirection.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesEffects,
    TargetsSafetyLiabilitiesEffectsDirection,
]

TargetsSafetyLiabilitiesEffectsDosing.name = "dosing"
TargetsSafetyLiabilitiesEffectsDosing.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesEffectsDosing.dataset = Targets
TargetsSafetyLiabilitiesEffectsDosing.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesEffects,
    TargetsSafetyLiabilitiesEffectsDosing,
]

TargetsSafetyLiabilitiesEffects.name = "effects"
TargetsSafetyLiabilitiesEffects.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsSafetyLiabilitiesEffects.dataset = Targets
TargetsSafetyLiabilitiesEffects.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesEffects]
TargetsSafetyLiabilitiesEffects.f_direction = TargetsSafetyLiabilitiesEffectsDirection
TargetsSafetyLiabilitiesEffects.f_dosing = TargetsSafetyLiabilitiesEffectsDosing

TargetsSafetyLiabilitiesBiosampleTissueLabel.name = "tissueLabel"
TargetsSafetyLiabilitiesBiosampleTissueLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesBiosampleTissueLabel.dataset = Targets
TargetsSafetyLiabilitiesBiosampleTissueLabel.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesBiosample,
    TargetsSafetyLiabilitiesBiosampleTissueLabel,
]

TargetsSafetyLiabilitiesBiosampleTissueId.name = "tissueId"
TargetsSafetyLiabilitiesBiosampleTissueId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesBiosampleTissueId.dataset = Targets
TargetsSafetyLiabilitiesBiosampleTissueId.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesBiosample,
    TargetsSafetyLiabilitiesBiosampleTissueId,
]

TargetsSafetyLiabilitiesBiosampleCellLabel.name = "cellLabel"
TargetsSafetyLiabilitiesBiosampleCellLabel.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesBiosampleCellLabel.dataset = Targets
TargetsSafetyLiabilitiesBiosampleCellLabel.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesBiosample,
    TargetsSafetyLiabilitiesBiosampleCellLabel,
]

TargetsSafetyLiabilitiesBiosampleCellFormat.name = "cellFormat"
TargetsSafetyLiabilitiesBiosampleCellFormat.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesBiosampleCellFormat.dataset = Targets
TargetsSafetyLiabilitiesBiosampleCellFormat.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesBiosample,
    TargetsSafetyLiabilitiesBiosampleCellFormat,
]

TargetsSafetyLiabilitiesBiosampleCellId.name = "cellId"
TargetsSafetyLiabilitiesBiosampleCellId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesBiosampleCellId.dataset = Targets
TargetsSafetyLiabilitiesBiosampleCellId.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesBiosample,
    TargetsSafetyLiabilitiesBiosampleCellId,
]

TargetsSafetyLiabilitiesBiosample.name = "biosample"
TargetsSafetyLiabilitiesBiosample.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsSafetyLiabilitiesBiosample.dataset = Targets
TargetsSafetyLiabilitiesBiosample.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesBiosample]
TargetsSafetyLiabilitiesBiosample.f_tissue_label = TargetsSafetyLiabilitiesBiosampleTissueLabel
TargetsSafetyLiabilitiesBiosample.f_tissue_id = TargetsSafetyLiabilitiesBiosampleTissueId
TargetsSafetyLiabilitiesBiosample.f_cell_label = TargetsSafetyLiabilitiesBiosampleCellLabel
TargetsSafetyLiabilitiesBiosample.f_cell_format = TargetsSafetyLiabilitiesBiosampleCellFormat
TargetsSafetyLiabilitiesBiosample.f_cell_id = TargetsSafetyLiabilitiesBiosampleCellId

TargetsSafetyLiabilitiesDatasource.name = "datasource"
TargetsSafetyLiabilitiesDatasource.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesDatasource.dataset = Targets
TargetsSafetyLiabilitiesDatasource.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesDatasource]

TargetsSafetyLiabilitiesLiterature.name = "literature"
TargetsSafetyLiabilitiesLiterature.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesLiterature.dataset = Targets
TargetsSafetyLiabilitiesLiterature.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesLiterature]

TargetsSafetyLiabilitiesUrl.name = "url"
TargetsSafetyLiabilitiesUrl.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesUrl.dataset = Targets
TargetsSafetyLiabilitiesUrl.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesUrl]

TargetsSafetyLiabilitiesStudyName.name = "name"
TargetsSafetyLiabilitiesStudyName.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesStudyName.dataset = Targets
TargetsSafetyLiabilitiesStudyName.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesStudy,
    TargetsSafetyLiabilitiesStudyName,
]

TargetsSafetyLiabilitiesStudyDescription.name = "description"
TargetsSafetyLiabilitiesStudyDescription.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesStudyDescription.dataset = Targets
TargetsSafetyLiabilitiesStudyDescription.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesStudy,
    TargetsSafetyLiabilitiesStudyDescription,
]

TargetsSafetyLiabilitiesStudyType.name = "type"
TargetsSafetyLiabilitiesStudyType.data_type = OpenTargetsDatasetFieldType.STRING
TargetsSafetyLiabilitiesStudyType.dataset = Targets
TargetsSafetyLiabilitiesStudyType.path = [
    TargetsSafetyLiabilities,
    TargetsSafetyLiabilitiesStudy,
    TargetsSafetyLiabilitiesStudyType,
]

TargetsSafetyLiabilitiesStudy.name = "study"
TargetsSafetyLiabilitiesStudy.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsSafetyLiabilitiesStudy.dataset = Targets
TargetsSafetyLiabilitiesStudy.path = [TargetsSafetyLiabilities, TargetsSafetyLiabilitiesStudy]
TargetsSafetyLiabilitiesStudy.f_name = TargetsSafetyLiabilitiesStudyName
TargetsSafetyLiabilitiesStudy.f_description = TargetsSafetyLiabilitiesStudyDescription
TargetsSafetyLiabilitiesStudy.f_type = TargetsSafetyLiabilitiesStudyType

TargetsSafetyLiabilities.name = "safetyLiabilities"
TargetsSafetyLiabilities.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsSafetyLiabilities.dataset = Targets
TargetsSafetyLiabilities.path = [TargetsSafetyLiabilities]
TargetsSafetyLiabilities.f_event = TargetsSafetyLiabilitiesEvent
TargetsSafetyLiabilities.f_event_id = TargetsSafetyLiabilitiesEventId
TargetsSafetyLiabilities.f_effects = TargetsSafetyLiabilitiesEffects
TargetsSafetyLiabilities.f_biosample = TargetsSafetyLiabilitiesBiosample
TargetsSafetyLiabilities.f_datasource = TargetsSafetyLiabilitiesDatasource
TargetsSafetyLiabilities.f_literature = TargetsSafetyLiabilitiesLiterature
TargetsSafetyLiabilities.f_url = TargetsSafetyLiabilitiesUrl
TargetsSafetyLiabilities.f_study = TargetsSafetyLiabilitiesStudy

TargetsPathwaysPathwayId.name = "pathwayId"
TargetsPathwaysPathwayId.data_type = OpenTargetsDatasetFieldType.STRING
TargetsPathwaysPathwayId.dataset = Targets
TargetsPathwaysPathwayId.path = [TargetsPathways, TargetsPathwaysPathwayId]

TargetsPathwaysPathway.name = "pathway"
TargetsPathwaysPathway.data_type = OpenTargetsDatasetFieldType.STRING
TargetsPathwaysPathway.dataset = Targets
TargetsPathwaysPathway.path = [TargetsPathways, TargetsPathwaysPathway]

TargetsPathwaysTopLevelTerm.name = "topLevelTerm"
TargetsPathwaysTopLevelTerm.data_type = OpenTargetsDatasetFieldType.STRING
TargetsPathwaysTopLevelTerm.dataset = Targets
TargetsPathwaysTopLevelTerm.path = [TargetsPathways, TargetsPathwaysTopLevelTerm]

TargetsPathways.name = "pathways"
TargetsPathways.data_type = OpenTargetsDatasetFieldType.ARRAY
TargetsPathways.dataset = Targets
TargetsPathways.path = [TargetsPathways]
TargetsPathways.f_pathway_id = TargetsPathwaysPathwayId
TargetsPathways.f_pathway = TargetsPathwaysPathway
TargetsPathways.f_top_level_term = TargetsPathwaysTopLevelTerm

Targets.id = "targets"
Targets.f_id = TargetsId
Targets.f_approved_symbol = TargetsApprovedSymbol
Targets.f_biotype = TargetsBiotype
Targets.f_transcript_ids = TargetsTranscriptIds
Targets.f_canonical_transcript = TargetsCanonicalTranscript
Targets.f_canonical_exons = TargetsCanonicalExons
Targets.f_genomic_location = TargetsGenomicLocation
Targets.f_alternative_genes = TargetsAlternativeGenes
Targets.f_approved_name = TargetsApprovedName
Targets.f_go = TargetsGo
Targets.f_hallmarks = TargetsHallmarks
Targets.f_synonyms = TargetsSynonyms
Targets.f_symbol_synonyms = TargetsSymbolSynonyms
Targets.f_name_synonyms = TargetsNameSynonyms
Targets.f_function_descriptions = TargetsFunctionDescriptions
Targets.f_subcellular_locations = TargetsSubcellularLocations
Targets.f_target_class = TargetsTargetClass
Targets.f_obsolete_symbols = TargetsObsoleteSymbols
Targets.f_obsolete_names = TargetsObsoleteNames
Targets.f_constraint = TargetsConstraint
Targets.f_tep = TargetsTep
Targets.f_protein_ids = TargetsProteinIds
Targets.f_db_xrefs = TargetsDbXrefs
Targets.f_chemical_probes = TargetsChemicalProbes
Targets.f_homologues = TargetsHomologues
Targets.f_tractability = TargetsTractability
Targets.f_safety_liabilities = TargetsSafetyLiabilities
Targets.f_pathways = TargetsPathways
