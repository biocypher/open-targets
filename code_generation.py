from pathlib import Path
from typing import Any, Final

import tomli
from jinja2 import Environment, FileSystemLoader, select_autoescape

HEADER_COMMENT: Final = """# This file is automatically generated and should not be modified directly. If
# you want to update this file, run `poetry install`, a post install hook will
# generate this file."""

with (Path.cwd() / "pyproject.toml").open("rb") as f:
    pyproject = tomli.load(f)

env = Environment(
    loader=FileSystemLoader(Path.cwd()),
    lstrip_blocks=True,
    trim_blocks=True,
    autoescape=select_autoescape(),
)


def kebab_to_upper_snake(s: str) -> str:
    return "_".join(word.upper() for word in s.split("-"))


env.filters["kebab_to_upper_snake"] = kebab_to_upper_snake
render_context: dict[str, Any] = {
    "header_comment": HEADER_COMMENT,
    "open_targets_config": pyproject["tool"]["open_targets"],
}

for template_id in env.list_templates(extensions=["jinja"]):
    template = env.get_template(template_id)
    if template.filename is None:
        continue
    template_path = Path(template.filename)
    template_name = template_path.stem
    rendered_file_path = template_path.with_name("gen_" + template_name.removesuffix(".jinja"))
    rendered_file_path.write_text(template.render(render_context))
